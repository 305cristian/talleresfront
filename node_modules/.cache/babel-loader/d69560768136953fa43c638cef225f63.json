{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MTableSummaryRow = MTableSummaryRow;\nexports[\"default\"] = exports.styles = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _core = require(\"@material-ui/core\");\n\nvar _utils = require(\"../../utils\");\n\nvar CommonValues = _interopRequireWildcard(require(\"../../utils/common-values\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction MTableSummaryRow(_ref) {\n  var data = _ref.data,\n      columns = _ref.columns,\n      currentData = _ref.currentData,\n      rowProps = _ref.rowProps,\n      renderSummaryRow = _ref.renderSummaryRow;\n\n  if (!renderSummaryRow) {\n    return null;\n  }\n\n  function renderPlaceholderColumn(key) {\n    var numIcons = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var size = CommonValues.elementSize(rowProps);\n    var width = numIcons * CommonValues.baseIconSize(rowProps);\n    return /*#__PURE__*/React.createElement(_core.TableCell, {\n      key: \"placeholder.\".concat(key),\n      size: size,\n      padding: \"none\",\n      style: {\n        width: width,\n        padding: '0px 5px',\n        boxSizing: 'border-box'\n      }\n    });\n  }\n\n  var placeholderLeftColumns = [];\n  var placeholderRightColumns = [];\n  var placeholderKey = 0; // Create empty columns corresponding to selection, actions, detail panel, and tree data icons\n\n  if (rowProps.options.selection) {\n    placeholderLeftColumns.push(renderPlaceholderColumn(placeholderKey++));\n  }\n\n  if (rowProps.actions && rowProps.actions.filter(function (a) {\n    return a.position === 'row' || typeof a === 'function';\n  }).length > 0) {\n    var numRowActions = CommonValues.rowActions(rowProps).length;\n\n    if (rowProps.options.actionsColumnIndex === -1) {\n      placeholderRightColumns.push(renderPlaceholderColumn(placeholderKey++, numRowActions));\n    } else if (rowProps.options.actionsColumnIndex >= 0) {\n      placeholderLeftColumns.push(renderPlaceholderColumn(placeholderKey++, numRowActions));\n    }\n  }\n\n  if (rowProps.detailPanel && rowProps.options.showDetailPanelIcon) {\n    if (rowProps.options.detailPanelColumnAlignment === 'right') {\n      placeholderRightColumns.push(renderPlaceholderColumn(placeholderKey++));\n    } else {\n      placeholderLeftColumns.push(renderPlaceholderColumn(placeholderKey++));\n    }\n  }\n\n  if (rowProps.isTreeData) {\n    placeholderLeftColumns.push(renderPlaceholderColumn(placeholderKey++));\n  }\n\n  return /*#__PURE__*/React.createElement(_core.TableRow, null, placeholderLeftColumns, columns.map(function (column, index) {\n    var summaryColumn = renderSummaryRow({\n      index: index,\n      column: column,\n      data: data,\n      currentData: currentData,\n      columns: columns\n    });\n    var cellAlignment = column.align !== undefined ? column.align : ['numeric', 'currency'].indexOf(column.type) !== -1 ? 'right' : 'left';\n    var value = '';\n    var style = (0, _utils.getStyle)({\n      columnDef: column,\n      scrollWidth: 0\n    });\n\n    if (summaryColumn && summaryColumn.value) {\n      value = summaryColumn.value;\n      style = summaryColumn.style;\n    } else {\n      value = summaryColumn;\n    }\n\n    return /*#__PURE__*/React.createElement(_core.TableCell, {\n      key: index,\n      style: style,\n      align: cellAlignment\n    }, value);\n  }), placeholderRightColumns);\n}\n\nMTableSummaryRow.propTypes = {\n  data: _propTypes[\"default\"].array,\n  currentData: _propTypes[\"default\"].array,\n  columns: _propTypes[\"default\"].array,\n  renderSummaryRow: _propTypes[\"default\"].func\n};\n\nvar styles = function styles(theme) {\n  return {};\n};\n\nexports.styles = styles;\n\nvar _default = (0, _core.withStyles)(styles)(MTableSummaryRow);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["C:/Users/ADMIN DEP IT/Documents/NetBeansProjects/talleresfront/node_modules/@material-table/core/dist/components/MTableSummaryRow/index.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","MTableSummaryRow","styles","React","_core","_utils","CommonValues","_propTypes","_ref","data","columns","currentData","rowProps","renderSummaryRow","renderPlaceholderColumn","key","numIcons","arguments","length","undefined","size","elementSize","width","baseIconSize","createElement","TableCell","concat","padding","style","boxSizing","placeholderLeftColumns","placeholderRightColumns","placeholderKey","options","selection","push","actions","filter","a","position","numRowActions","rowActions","actionsColumnIndex","detailPanel","showDetailPanelIcon","detailPanelColumnAlignment","isTreeData","TableRow","map","column","index","summaryColumn","cellAlignment","align","indexOf","type","getStyle","columnDef","scrollWidth","propTypes","array","func","theme","_default","withStyles"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MTableSummaryRow = MTableSummaryRow;\nexports[\"default\"] = exports.styles = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _core = require(\"@material-ui/core\");\n\nvar _utils = require(\"../../utils\");\n\nvar CommonValues = _interopRequireWildcard(require(\"../../utils/common-values\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction MTableSummaryRow(_ref) {\n  var data = _ref.data,\n      columns = _ref.columns,\n      currentData = _ref.currentData,\n      rowProps = _ref.rowProps,\n      renderSummaryRow = _ref.renderSummaryRow;\n\n  if (!renderSummaryRow) {\n    return null;\n  }\n\n  function renderPlaceholderColumn(key) {\n    var numIcons = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var size = CommonValues.elementSize(rowProps);\n    var width = numIcons * CommonValues.baseIconSize(rowProps);\n    return /*#__PURE__*/React.createElement(_core.TableCell, {\n      key: \"placeholder.\".concat(key),\n      size: size,\n      padding: \"none\",\n      style: {\n        width: width,\n        padding: '0px 5px',\n        boxSizing: 'border-box'\n      }\n    });\n  }\n\n  var placeholderLeftColumns = [];\n  var placeholderRightColumns = [];\n  var placeholderKey = 0; // Create empty columns corresponding to selection, actions, detail panel, and tree data icons\n\n  if (rowProps.options.selection) {\n    placeholderLeftColumns.push(renderPlaceholderColumn(placeholderKey++));\n  }\n\n  if (rowProps.actions && rowProps.actions.filter(function (a) {\n    return a.position === 'row' || typeof a === 'function';\n  }).length > 0) {\n    var numRowActions = CommonValues.rowActions(rowProps).length;\n\n    if (rowProps.options.actionsColumnIndex === -1) {\n      placeholderRightColumns.push(renderPlaceholderColumn(placeholderKey++, numRowActions));\n    } else if (rowProps.options.actionsColumnIndex >= 0) {\n      placeholderLeftColumns.push(renderPlaceholderColumn(placeholderKey++, numRowActions));\n    }\n  }\n\n  if (rowProps.detailPanel && rowProps.options.showDetailPanelIcon) {\n    if (rowProps.options.detailPanelColumnAlignment === 'right') {\n      placeholderRightColumns.push(renderPlaceholderColumn(placeholderKey++));\n    } else {\n      placeholderLeftColumns.push(renderPlaceholderColumn(placeholderKey++));\n    }\n  }\n\n  if (rowProps.isTreeData) {\n    placeholderLeftColumns.push(renderPlaceholderColumn(placeholderKey++));\n  }\n\n  return /*#__PURE__*/React.createElement(_core.TableRow, null, placeholderLeftColumns, columns.map(function (column, index) {\n    var summaryColumn = renderSummaryRow({\n      index: index,\n      column: column,\n      data: data,\n      currentData: currentData,\n      columns: columns\n    });\n    var cellAlignment = column.align !== undefined ? column.align : ['numeric', 'currency'].indexOf(column.type) !== -1 ? 'right' : 'left';\n    var value = '';\n    var style = (0, _utils.getStyle)({\n      columnDef: column,\n      scrollWidth: 0\n    });\n\n    if (summaryColumn && summaryColumn.value) {\n      value = summaryColumn.value;\n      style = summaryColumn.style;\n    } else {\n      value = summaryColumn;\n    }\n\n    return /*#__PURE__*/React.createElement(_core.TableCell, {\n      key: index,\n      style: style,\n      align: cellAlignment\n    }, value);\n  }), placeholderRightColumns);\n}\n\nMTableSummaryRow.propTypes = {\n  data: _propTypes[\"default\"].array,\n  currentData: _propTypes[\"default\"].array,\n  columns: _propTypes[\"default\"].array,\n  renderSummaryRow: _propTypes[\"default\"].func\n};\n\nvar styles = function styles(theme) {\n  return {};\n};\n\nexports.styles = styles;\n\nvar _default = (0, _core.withStyles)(styles)(MTableSummaryRow);\n\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}