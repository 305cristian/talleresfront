{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN DEP IT\\\\Documents\\\\NetBeansProjects\\\\talleresfront\\\\src\\\\components\\\\AdminAreas.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { Table, Button, Container, CustomInput, Modal, ModalHeader, ModalBody, ModalFooter, formGroup } from 'reactstrap';\nimport Swal from 'sweetalert';\nimport axios from 'axios';\nimport P from '../components/P';\nimport Styles from '../index.css';\nimport Navigation from '../components/Navigation';\nimport Breadcrumb_nav from '../components/Breadcrumb_nav';\nimport Cookies from 'universal-cookie';\nimport firebase from '../../src/setting/server_firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\nconst {\n  REACT_APP_HOST\n} = process.env;\nvar storage = firebase.app().storage(\"gs://talleres-1b6d0.appspot.com\");\n\nconst validation = data => {\n  const errors = {};\n\n  if (!data.title) {\n    errors.title = 'El campo title es obligatorio';\n  }\n\n  if (!data.image) {\n    errors.image = 'La imagen es obligatorio';\n  }\n\n  return errors;\n};\n\nclass AdminAreas extends Component {\n  constructor() {\n    super();\n\n    this.uploadImage = async () => {\n      var storageRef = storage.ref();\n      var spaceRef = storageRef.child(`images/imgareas/${this.state.image.name}`);\n      return await spaceRef.put(this.state.image);\n    };\n\n    this.deleteImage = async () => {\n      var storageRef = storage.ref();\n      var spaceRef = storageRef.child(`images/imgareas/${this.state.img_temp}`);\n      return await spaceRef.delete();\n    };\n\n    this.uploadImage2 = () => {\n      var storageRef = storage.ref();\n      var spaceRef = storageRef.child(`images/imgtaller/${this.state.image.name}`);\n      return spaceRef.put(this.state.image);\n    };\n\n    this.deleteImage2 = () => {\n      var storageRef = storage.ref();\n      var spaceRef = storageRef.child(`images/imgtaller/${this.state.img_temp}`);\n      return spaceRef.delete();\n    };\n\n    this.handleImageUpload = e => {\n      this.setState({\n        image: e.target.files[0],\n        aux: e.target.files[0]\n      });\n      console.log(e.target.files[0]);\n    };\n\n    this.state = {\n      title: '',\n      description: '',\n      _id: '',\n      areas: [],\n      textButton: 'REGISTRAR',\n      header: 'Insertar Area',\n      modalOpen: false,\n      img_temp: '',\n      image: '',\n      aux: '',\n      errors: {}\n    };\n    this.showModal = this.showModal.bind(this);\n    this.hideModal = this.hideModal.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addArea = this.addArea.bind(this);\n  }\n\n  componentDidMount() {\n    //Es como el initComponents\n    if (!cookies.get('nombre')) {\n      window.location.href = '/';\n    }\n\n    this.getAreas(); //Para que inicie la pantalla de tareas\n  }\n\n  getAreas() {\n    axios.get(`${REACT_APP_HOST}/api/areas`).then(response => {\n      this.setState({\n        areas: response.data\n      });\n      console.log(response.data);\n    });\n  }\n\n  addArea(e) {\n    e.preventDefault();\n    const {\n      errors,\n      ...sinErrors\n    } = this.state;\n    const result = validation(sinErrors);\n    this.setState({\n      errors: result\n    });\n\n    if (!Object.keys(result).length) {\n      let datos = new FormData();\n      datos.append('title', this.state.title);\n      datos.append('description', this.state.description); //            datos.append('image', this.state.image.name);\n\n      if (this.state._id && this.state.aux === '') {\n        console.log('modifico');\n        datos.append('image', this.state.image);\n      } else if (this.state._id && this.state.aux.name) {\n        console.log('modifico imagen');\n        datos.append('image', this.state.image.name);\n      } else {\n        console.log('guardo');\n        datos.append('image', this.state.image.name);\n      }\n\n      if (this.state._id) {\n        if (this.state.aux.name) {\n          this.deleteImage2();\n          this.uploadImage2();\n        }\n\n        axios.put(`${REACT_APP_HOST}/api/areas/` + this.state._id, datos).then(async response => {\n          Swal({\n            title: 'Tarea Actualizada',\n            icon: 'success',\n            timer: 2000,\n            button: false\n          });\n          this.getAreas();\n          this.setState({\n            title: '',\n            description: '',\n            _id: '',\n            textButton: 'REGISTRAR',\n            modalOpen: false,\n            image: null,\n            aux: '',\n            errors: {}\n          });\n        });\n      } else {\n        axios.post(`${REACT_APP_HOST}/api/areas`, datos).then(async response => {\n          let cargar = await this.uploadImage();\n          Swal({\n            title: 'Area registrada',\n            icon: 'success',\n            timer: 2000,\n            button: false\n          });\n          this.getAreas();\n          this.setState({\n            title: '',\n            description: '',\n            aux: '',\n            image: null\n          });\n        });\n      }\n    }\n  }\n\n  editArea(id) {\n    axios.get(`${REACT_APP_HOST}/api/areas/` + id).then(response => {\n      this.setState({\n        title: response.data.title,\n        description: response.data.description,\n        image: response.data.image,\n        img_temp: response.data.image,\n        _id: response.data._id,\n        textButton: 'ACTUALIZAR',\n        header: 'Actualizar Area'\n      });\n      console.log(this.state.image);\n    });\n  }\n\n  deleteArea(id, image) {\n    this.setState({\n      img_temp: image\n    });\n    Swal({\n      title: 'Esta seguro de eliminar el Area',\n      text: ' El area se eliminara definitivamente',\n      icon: 'warning',\n      buttons: ['Cancelar', 'SÃ­'],\n      dangerMode: true\n    }).then(value => {\n      if (value) {\n        axios.delete(`${REACT_APP_HOST}/api/areas/` + id).then(async response => {\n          console.log(response.data);\n          let eliminar = await this.deleteImage();\n          Swal({\n            title: 'Area eliminada',\n            icon: 'success',\n            timer: 1000,\n            button: false\n          });\n          this.getAreas();\n        });\n      }\n    });\n  }\n\n  showModal() {\n    this.setState({\n      modalOpen: true\n    });\n  }\n\n  hideModal() {\n    this.setState({\n      title: '',\n      description: '',\n      modalOpen: false,\n      textButton: 'REGISTRAR',\n      header: 'Insertar Area',\n      image: null\n    });\n  }\n\n  handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    this.setState({\n      [name]: value\n    });\n    console.log(e.target.value);\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"containerList\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: this.showModal,\n          children: \"Nueva Area\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }, this), this.state.areas.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"AREA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"DETALLE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"IMG_DIR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Acciones\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.areas.map(data => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: data.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 69\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: data.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 69\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: data.image\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 69\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    color: \"warning\",\n                    onClick: () => {\n                      this.showModal();\n                      this.editArea(data._id);\n                    },\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 73\n                  }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"danger\",\n                    onClick: () => {\n                      this.deleteArea(data._id, data.image);\n                    },\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 73\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 69\n                }, this)]\n              }, data._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 65\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 37\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"No hay Areas registrados\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: this.state.modalOpen,\n          children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: this.state.header\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: this.addArea,\n              className: \"container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"title\",\n                  onChange: this.handleChange,\n                  type: \"text\",\n                  className: \"form-control\",\n                  placeholder: \"Title\",\n                  value: this.state.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 41\n                }, this), errors.title && /*#__PURE__*/_jsxDEV(P, {\n                  errors: errors.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 58\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  name: \"description\",\n                  onChange: this.handleChange,\n                  type: \"text\",\n                  className: \"form-control\",\n                  placeholder: \"Description\",\n                  value: this.state.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n                  name: \"image\",\n                  type: \"file\",\n                  onChange: this.handleImageUpload,\n                  id: \"image\",\n                  label: \"Seleccione una Imagen\",\n                  accept: \"image/png, .jpeg, .jpg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 41\n                }, this), errors.image && /*#__PURE__*/_jsxDEV(P, {\n                  errors: errors.image\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 58\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                id: \"btnInsertar\",\n                children: this.state.textButton\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 37\n              }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n                id: \"btnCancelar\",\n                onClick: this.hideModal,\n                className: \"btn btn-danger\",\n                \"data-dismiss\": \"modal\",\n                \"aria-hidden\": \"true\",\n                children: \"CANCELAR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default AdminAreas;","map":{"version":3,"sources":["C:/Users/ADMIN DEP IT/Documents/NetBeansProjects/talleresfront/src/components/AdminAreas.js"],"names":["React","Component","render","Table","Button","Container","CustomInput","Modal","ModalHeader","ModalBody","ModalFooter","formGroup","Swal","axios","P","Styles","Navigation","Breadcrumb_nav","Cookies","firebase","cookies","REACT_APP_HOST","process","env","storage","app","validation","data","errors","title","image","AdminAreas","constructor","uploadImage","storageRef","ref","spaceRef","child","state","name","put","deleteImage","img_temp","delete","uploadImage2","deleteImage2","handleImageUpload","e","setState","target","files","aux","console","log","description","_id","areas","textButton","header","modalOpen","showModal","bind","hideModal","handleChange","addArea","componentDidMount","get","window","location","href","getAreas","then","response","preventDefault","sinErrors","result","Object","keys","length","datos","FormData","append","icon","timer","button","post","cargar","editArea","id","deleteArea","text","buttons","dangerMode","value","eliminar","map"],"mappings":"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","sourcesContent":["import React, {Component}from'react';\nimport {render}from'react-dom';\nimport {Table, Button, Container, CustomInput, Modal, ModalHeader, ModalBody, ModalFooter, formGroup} from 'reactstrap';\nimport Swal from 'sweetalert';\nimport axios from 'axios'\nimport P from '../components/P';\nimport Styles from '../index.css'\n\nimport Navigation from '../components/Navigation';\nimport Breadcrumb_nav from '../components/Breadcrumb_nav';\nimport Cookies from 'universal-cookie';\nimport firebase from '../../src/setting/server_firebase';\n\n\nconst cookies = new Cookies();\n\nconst {REACT_APP_HOST} = process.env;\nvar storage = firebase.app().storage(\"gs://talleres-1b6d0.appspot.com\");\n\nconst validation = data => {\n    const errors = {};\n    if (!data.title) {\n        errors.title = 'El campo title es obligatorio';\n    }\n    if (!data.image) {\n        errors.image = 'La imagen es obligatorio';\n    }\n    return errors;\n}\nclass AdminAreas extends Component {\n    constructor() {\n        super();\n        this.state = {\n            title: '',\n            description: '',\n            _id: '',\n            areas: [],\n            textButton: 'REGISTRAR',\n            header: 'Insertar Area',\n            modalOpen: false,\n            img_temp:'',\n            image: '',\n            aux:'',\n            errors: {}\n\n        }\n\n        this.showModal = this.showModal.bind(this);\n        this.hideModal = this.hideModal.bind(this);\n        this.handleChange = this.handleChange.bind(this)\n        this.addArea = this.addArea.bind(this)\n    }\n    componentDidMount() {//Es como el initComponents\n        if (!cookies.get('nombre')) {\n            window.location.href = '/'\n        }\n        this.getAreas();//Para que inicie la pantalla de tareas\n    }\n    getAreas() {\n        axios.get(`${REACT_APP_HOST}/api/areas`).then((response) => {\n            this.setState({areas: response.data})\n            console.log(response.data);\n        })\n    }\n\n    addArea(e) {\n        e.preventDefault();\n\n        const {errors, ...sinErrors} = this.state;\n        const result = validation(sinErrors);\n        this.setState({errors: result});\n\n        if (!Object.keys(result).length) {\n            let datos = new FormData();\n            datos.append('title', this.state.title);\n            datos.append('description', this.state.description);\n//            datos.append('image', this.state.image.name);\n            \n            if (this.state._id && this.state.aux==='') {\n                console.log('modifico');\n                datos.append('image', this.state.image);\n            } else if(this.state._id && this.state.aux.name) {\n                 console.log('modifico imagen');\n                datos.append('image', this.state.image.name);\n            }else{\n                 console.log('guardo');\n                datos.append('image', this.state.image.name); \n            }\n            \n            if (this.state._id) {\n                \n                if (this.state.aux.name) {\n                    this.deleteImage2();\n                    this.uploadImage2();\n                }\n                \n                axios.put(`${REACT_APP_HOST}/api/areas/` + this.state._id, datos).then(async(response) => {\n                  \n                    Swal({\n                        title: 'Tarea Actualizada',\n                        icon: 'success',\n                        timer: 2000,\n                        button: false\n                    });\n                    this.getAreas();\n                    this.setState({title: '', description: '', _id: '', textButton: 'REGISTRAR', modalOpen: false, image: null,aux:'', errors: {}});\n                })\n            } else {\n                axios.post(`${REACT_APP_HOST}/api/areas`, datos).then(async(response) => {\n                    let cargar = await this.uploadImage();\n                    Swal({\n                        title: 'Area registrada',\n                        icon: 'success',\n                        timer: 2000,\n                        button: false\n                    });\n                    this.getAreas();\n                    this.setState({title: '', description: '',aux:'', image: null})\n                })\n            }\n        }\n\n    }\n\n    editArea(id) {\n        axios.get(`${REACT_APP_HOST}/api/areas/` + id).then((response) => {\n            this.setState({\n                title: response.data.title,\n                description: response.data.description,\n                image: response.data.image,\n                img_temp: response.data.image,\n                _id: response.data._id,\n                textButton: 'ACTUALIZAR',\n                header: 'Actualizar Area',\n            })\n            console.log(this.state.image)\n        })\n    }\n\n    deleteArea(id, image) {\n         this.setState({img_temp:image});\n        Swal({\n            title: 'Esta seguro de eliminar el Area',\n            text: ' El area se eliminara definitivamente',\n            icon: 'warning',\n            buttons: ['Cancelar', 'SÃ­'],\n            dangerMode: true\n        }).then((value) => {\n            if (value) {\n                axios.delete(`${REACT_APP_HOST}/api/areas/` + id).then(async(response) => {\n                    console.log(response.data);\n                     let eliminar = await this.deleteImage();\n                    Swal({\n                        title: 'Area eliminada',\n                        icon: 'success',\n                        timer: 1000,\n                        button: false\n                    });\n                    this.getAreas();\n                });\n            }\n        });\n    }\n\n    showModal() {\n        this.setState({modalOpen: true});\n    }\n    hideModal() {\n        this.setState({title: '', description: '', modalOpen: false, textButton: 'REGISTRAR', header: 'Insertar Area', image: null})\n    }\n\n    handleChange(e) {\n        const{name, value} = e.target;\n        this.setState({[name]: value});\n        console.log(e.target.value);\n    }\n    \n     uploadImage = async() => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`images/imgareas/${this.state.image.name}`);\n        return await spaceRef.put(this.state.image)\n\n    }\n    deleteImage = async() => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`images/imgareas/${this.state.img_temp}`);\n        return await  spaceRef.delete();\n\n    }\n    \n      uploadImage2 = () => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`images/imgtaller/${this.state.image.name}`);\n        return spaceRef.put(this.state.image);\n\n    }\n    deleteImage2 = () => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`images/imgtaller/${this.state.img_temp}`);\n        return  spaceRef.delete();\n\n    }\n\n\n    handleImageUpload = (e) => {\n        this.setState({image: e.target.files[0],aux: e.target.files[0]});\n        console.log(e.target.files[0]);\n    }\n    \n    \n\n    render() {\n\n        const {errors} = this.state;\n        return (\n                <div>\n                    <Navigation />\n                    <div className=\"containerList\">\n                        <br/>\n                        <Button color=\"primary\" onClick={this.showModal}>Nueva Area</Button>\n                        <br/>\n                        <br/>\n                        {this.state.areas.length > 0 ?\n                                    <Table>\n                                        <thead>\n                                            <tr>\n                                                <th>AREA</th>\n                                                <th>DETALLE</th>\n                                                <th>IMG_DIR</th>\n                                                <th>Acciones</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                        this.state.areas.map(data => {\n                                                            return(\n                                                                <tr key={data._id}>\n                                                                    <td>{data.title}</td>\n                                                                    <td>{data.description}</td>\n                                                                    <td>{data.image}</td>\n                                                                    <td>\n                                                                        <Button color=\"warning\" onClick={() => {\n                                                                                                this.showModal();\n                                                                                                this.editArea(data._id);\n                                                                                                    }}>Edit</Button>{' '}\n                                                \n                                                                        <Button color=\"danger\" onClick={ () => {\n                                                                                                this.deleteArea(data._id,data.image)\n                                                                                                    }}>Delete</Button>\n                                                                    </td>\n                                                                </tr>\n                                                                    )\n                                                        })\n                                            }\n                                        </tbody>\n                                    </Table>\n                                    : <h1>No hay Areas registrados</h1>}\n                        <Modal isOpen={this.state.modalOpen}>\n                            <ModalHeader>\n                                <div><h3>{this.state.header}</h3></div>\n                            </ModalHeader>\n                \n                            <ModalBody>\n                                <form onSubmit={this.addArea} className=\"container\">\n                                    <div className=\"row\">\n                                        <input name=\"title\" onChange={this.handleChange} type=\"text\" className=\"form-control\" placeholder=\"Title\" value={this.state.title}/>\n                                        {errors.title && <P errors={errors.title} />}\n                                    </div>\n                                    <br/>\n                                    <div className=\"row\">\n                                        <textarea name=\"description\" onChange={this.handleChange} type=\"text\" className=\"form-control\" placeholder=\"Description\" value={this.state.description}/>\n                \n                                    </div>                            \n                                    <br/>\n                                    <div className=\"row\">\n                                        <CustomInput name=\"image\" type=\"file\" onChange={this.handleImageUpload} id=\"image\" label='Seleccione una Imagen' accept=\"image/png, .jpeg, .jpg\"/>\n                                        {errors.image && <P errors={errors.image} />}\n                                    </div>\n                                    <br/>\n                \n                                    <Button id=\"btnInsertar\">{this.state.textButton}</Button>{' '}\n                                    <Button id=\"btnCancelar\" onClick={this.hideModal} className=\"btn btn-danger\" data-dismiss=\"modal\" aria-hidden=\"true\">CANCELAR</Button>\n                                </form>\n                            </ModalBody>               \n                        </Modal>\n                    </div>\n                </div>\n\n                );\n    }\n\n}\n\nexport default  AdminAreas\n"]},"metadata":{},"sourceType":"module"}