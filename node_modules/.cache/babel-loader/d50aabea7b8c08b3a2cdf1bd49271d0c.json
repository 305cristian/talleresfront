{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN DEP IT\\\\Documents\\\\NetBeansProjects\\\\talleresfront\\\\src\\\\components\\\\AdminTask.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { Table, Button, Container, Modal, ModalHeader, ModalBody, ModalFooter, formGroup } from 'reactstrap';\nimport Swal from 'sweetalert';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class AdminTask extends Component {\n  constructor() {\n    super();\n    this.state = {\n      title: '',\n      description: '',\n      tasks: [],\n      _id: '',\n      textButton: 'REGISTRAR',\n      modalOpen: false\n    };\n    this.addTask = this.addTask.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.showModal = this.showModal.bind(this);\n    this.hideModal = this.hideModal.bind(this);\n  }\n\n  componentDidMount() {\n    this.getTasks();\n  }\n\n  getTasks() {\n    fetch('/api/task').then(resp => resp.json()).then(data => {\n      console.log(data);\n      this.setState({\n        tasks: data\n      }); //console.log(this.state.tasks)\n    });\n    axios.get().then(response => {\n      console.log(response.data);\n      this.setState({\n        tasks: response.data\n      });\n    });\n  }\n\n  addTask(e) {\n    if (this.state._id) {\n      e.preventDefault();\n      fetch(`/api/task/${this.state._id}`, {\n        method: 'PUT',\n        body: JSON.stringify(this.state),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(resp => resp.json()).then(data => {\n        console.log(data);\n        Swal({\n          title: 'Tarea Actualizada',\n          text: 'ok',\n          icon: 'success',\n          timer: 2000,\n          button: false\n        });\n        this.getTasks();\n        this.setState({\n          title: '',\n          description: '',\n          _id: '',\n          textButton: 'REGISTRAR',\n          modalOpen: false\n        });\n      }).catch(err => console.error(err)); //        console.log(this.state);\n    } else {\n      e.preventDefault();\n      fetch('/api/task', {\n        method: 'POST',\n        body: JSON.stringify(this.state),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(resp => resp.json()).then(data => {\n        console.log(data);\n        Swal({\n          title: 'Tarea Registrada',\n          text: 'ok',\n          icon: 'success',\n          timer: 2000,\n          button: false\n        });\n        this.getTasks();\n        this.setState({\n          title: '',\n          description: ''\n        });\n      }).catch(err => console.error(err)); //        console.log(this.state);\n    }\n  }\n\n  deleteTask(id) {\n    Swal({\n      title: 'Esta seguro de eliminar la tarea',\n      text: ' La tarea se eliminara definitivamente',\n      icon: 'warning',\n      buttons: ['Cancelar', 'SÃ­'],\n      dangerMode: true\n    }).then(value => {\n      if (value) {\n        fetch(`/api/task/${id}`, {\n          method: 'DELETE',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }\n        }).then(resp => resp.json()).then(data => {\n          console.log(data);\n          Swal({\n            title: 'Tarea eliminada',\n            icon: 'success',\n            timer: 1000,\n            button: false\n          });\n          this.getTasks();\n        });\n      }\n    });\n  }\n\n  editTask(id) {\n    fetch(`api/task/${id}`, {}).then(resp => resp.json()).then(data => {\n      console.log(data);\n      this.setState({\n        title: data.title,\n        description: data.description,\n        _id: data._id,\n        textButton: 'ACTUALIZAR'\n      });\n    });\n  }\n\n  hideModal() {\n    this.setState({\n      title: '',\n      description: '',\n      _id: '',\n      textButton: 'REGISTRAR',\n      modalOpen: false\n    });\n  }\n\n  showModal() {\n    this.setState({\n      modalOpen: true\n    });\n  }\n\n  handleChange(e) {\n    //        console.log(e.target);\n    const {\n      name,\n      value\n    } = e.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: this.showModal,\n          children: \"Nueva Tarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Tarea\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Descripcion\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Acciones\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.tasks.map(data => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: data.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: data.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    color: \"warning\",\n                    onClick: () => {\n                      this.showModal();\n                      this.editTask(data._id);\n                    },\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 49\n                  }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"danger\",\n                    onClick: () => {\n                      this.deleteTask(data._id);\n                    },\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 45\n                }, this)]\n              }, data._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: this.state.modalOpen,\n          children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Insertar Tarea\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: this.addTask,\n              className: \"container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"title\",\n                  onChange: this.handleChange,\n                  type: \"text\",\n                  className: \"form-control\",\n                  placeholder: \"Title\",\n                  value: this.state.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  name: \"description\",\n                  onChange: this.handleChange,\n                  type: \"text\",\n                  className: \"form-control\",\n                  placeholder: \"Description\",\n                  value: this.state.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                id: \"btnInsertar\",\n                children: this.state.textButton\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 37\n              }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n                id: \"btnCancelar\",\n                onClick: this.hideModal,\n                className: \"btn btn-danger\",\n                \"data-dismiss\": \"modal\",\n                \"aria-hidden\": \"true\",\n                children: \"CANCELAR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n;","map":{"version":3,"sources":["C:/Users/ADMIN DEP IT/Documents/NetBeansProjects/talleresfront/src/components/AdminTask.js"],"names":["React","Component","render","Table","Button","Container","Modal","ModalHeader","ModalBody","ModalFooter","formGroup","Swal","axios","AdminTask","constructor","state","title","description","tasks","_id","textButton","modalOpen","addTask","bind","handleChange","showModal","hideModal","componentDidMount","getTasks","fetch","then","resp","json","data","console","log","setState","get","response","e","preventDefault","method","body","JSON","stringify","headers","text","icon","timer","button","catch","err","error","deleteTask","id","buttons","dangerMode","value","editTask","name","target","map"],"mappings":"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","sourcesContent":["import React, {Component} from'react';\nimport {render}from'react-dom';\nimport {Table, Button, Container, Modal, ModalHeader, ModalBody, ModalFooter, formGroup}from 'reactstrap';\nimport Swal from 'sweetalert';\nimport axios from 'axios'\n\nexport default class AdminTask extends Component {\n    constructor() {\n        super();\n        this.state = {\n            title: '',\n            description: '',\n            tasks: [],\n            _id: '',\n            textButton: 'REGISTRAR',\n            modalOpen: false\n        };\n        this.addTask = this.addTask.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.showModal = this.showModal.bind(this);\n        this.hideModal = this.hideModal.bind(this);\n    }\n\n    componentDidMount() {\n        this.getTasks();\n    }\n\n    getTasks() {\n        fetch('/api/task')\n                .then(resp => resp.json())\n                .then(data => {\n                    console.log(data)\n                    this.setState({tasks: data})\n                    //console.log(this.state.tasks)\n                });\n                \n    axios.get().then((response)=>{\n        console.log(response.data)\n       this.setState({tasks: response.data}) \n    })\n    }\n    addTask(e) {\n        if (this.state._id) {\n            e.preventDefault();\n            fetch(`/api/task/${this.state._id}`, {\n                method: 'PUT',\n                body: JSON.stringify(this.state),\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            }).then(resp => resp.json())\n                    .then(data => {\n                        console.log(data);\n                        Swal({\n                            title: 'Tarea Actualizada',\n                            text: 'ok',\n                            icon: 'success',\n                            timer: 2000,\n                            button: false\n                        });\n                        this.getTasks();\n                        this.setState({title: '', description: '', _id: '', textButton: 'REGISTRAR', modalOpen:false});\n                        \n                    })\n                    .catch(err => console.error(err));\n//        console.log(this.state);\n        } else {\n            e.preventDefault();\n            fetch('/api/task', {\n                method: 'POST',\n                body: JSON.stringify(this.state),\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            }).then(resp => resp.json())\n                    .then(data => {\n                        console.log(data);\n                        Swal({\n                            title: 'Tarea Registrada',\n                            text: 'ok',\n                            icon: 'success',\n                            timer: 2000,\n                            button: false\n                        });\n                        this.getTasks()\n                        this.setState({title: '', description: ''})\n                    })\n                    .catch(err => console.error(err));\n//        console.log(this.state);\n        }\n\n\n\n    }\n    deleteTask(id) {\n        Swal({\n            title: 'Esta seguro de eliminar la tarea',\n            text: ' La tarea se eliminara definitivamente',\n            icon: 'warning',\n            buttons: ['Cancelar','SÃ­'],           \n            dangerMode: true\n        }).then((value) => {\n            if (value) {\n                fetch(`/api/task/${id}`, {\n                    method: 'DELETE',\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    }\n                })\n                        .then(resp => resp.json())\n                        .then(data => {\n                            console.log(data);\n                            Swal({\n                                title: 'Tarea eliminada',\n                                icon: 'success',\n                                timer: 1000,\n                                button: false\n                            });\n                            this.getTasks();\n                        });\n            }\n        });\n\n\n    }\n\n    editTask(id) {\n        fetch(`api/task/${id}`, {\n\n        })\n                .then(resp => resp.json())\n                .then(data => {\n                    console.log(data);\n                    this.setState({\n                        title: data.title,\n                        description: data.description,\n                        _id: data._id,\n                        textButton: 'ACTUALIZAR'\n                    });\n                });\n\n\n    }\n    hideModal() {\n        this.setState({title: '', description: '', _id: '', textButton: 'REGISTRAR', modalOpen: false});\n    }\n    showModal() {\n        this.setState({modalOpen: true});\n    }\n\n    handleChange(e) {\n//        console.log(e.target);\n        const{name, value} = e.target;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    render() {\n        return (\n                <div>                   \n                \n                    <Container>\n                        <br/>\n                        <Button color=\"primary\" onClick={this.showModal}>Nueva Tarea</Button>\n                        <br/>\n                        <br/>\n                        <Table>\n                            <thead>\n                                <tr>\n                                    <th>Tarea</th>\n                                    <th>Descripcion</th>\n                                    <th>Acciones</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    this.state.tasks.map(data => {\n                                        return(\n                                        <tr key={data._id}>\n                                            <td>{data.title}</td>\n                                            <td>{data.description}</td>\n                                            <td>\n                                                <Button color=\"warning\" onClick={() => {\n                                                                        this.showModal();\n                                                                        this.editTask(data._id);\n\n                                                                            }}>Edit</Button>{' '}\n                                                <Button color=\"danger\" onClick={ () => {\n                                                                        this.deleteTask(data._id)\n                                                                            }}>Delete</Button>\n                                            </td>\n                                        </tr>\n                                                )\n                                    })\n                                }\n                            </tbody>\n                        </Table>\n                \n                        <Modal isOpen={this.state.modalOpen}>\n                            <ModalHeader>\n                                <div><h3>Insertar Tarea</h3></div>\n                            </ModalHeader>\n                \n                            <ModalBody>\n                                <form onSubmit={this.addTask} className=\"container\">\n                                    <div className=\"row\">\n                                        <input name=\"title\" onChange={this.handleChange} type=\"text\" className=\"form-control\" placeholder=\"Title\" value={this.state.title}/>\n                                    </div>\n                                    <br/>\n                                    <div className=\"row\">\n                                        <textarea name=\"description\" onChange={this.handleChange} type=\"text\" className=\"form-control\" placeholder=\"Description\" value={this.state.description}/>\n                                    </div>\n                                    <br/>\n                                    <Button id=\"btnInsertar\">{this.state.textButton}</Button>{' '}\n                                    <Button id=\"btnCancelar\" onClick={this.hideModal} className=\"btn btn-danger\" data-dismiss=\"modal\" aria-hidden=\"true\">CANCELAR</Button>\n                                </form>\n                            </ModalBody>               \n                        </Modal>\n                    </Container>                                                                                             \n                \n                </div>\n                );\n    }\n\n}\n;\n\n"]},"metadata":{},"sourceType":"module"}