{"ast":null,"code":"/*! Buttons for DataTables 2.0.1\n * Â©2016-2021 SpryMedia Ltd - datatables.net/license\n */\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['jquery', 'datatables.net'], function ($) {\n      return factory($, window, document);\n    });\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = function (root, $) {\n      if (!root) {\n        root = window;\n      }\n\n      if (!$ || !$.fn.dataTable) {\n        $ = require('datatables.net')(root, $).$;\n      }\n\n      return factory($, root, root.document);\n    };\n  } else {\n    // Browser\n    factory(jQuery, window, document);\n  }\n})(function ($, window, document, undefined) {\n  'use strict';\n\n  var DataTable = $.fn.dataTable; // Used for namespacing events added to the document by each instance, so they\n  // can be removed on destroy\n\n  var _instCounter = 0; // Button namespacing counter for namespacing events on individual buttons\n\n  var _buttonCounter = 0;\n  var _dtButtons = DataTable.ext.buttons; // Allow for jQuery slim\n\n  function _fadeIn(el, duration, fn) {\n    if ($.fn.animate) {\n      el.stop().fadeIn(duration, fn);\n    } else {\n      el.css('display', 'block');\n\n      if (fn) {\n        fn.call(el);\n      }\n    }\n  }\n\n  function _fadeOut(el, duration, fn) {\n    if ($.fn.animate) {\n      el.stop().fadeOut(duration, fn);\n    } else {\n      el.css('display', 'none');\n\n      if (fn) {\n        fn.call(el);\n      }\n    }\n  }\n  /**\n   * [Buttons description]\n   * @param {[type]}\n   * @param {[type]}\n   */\n\n\n  var Buttons = function (dt, config) {\n    // If not created with a `new` keyword then we return a wrapper function that\n    // will take the settings object for a DT. This allows easy use of new instances\n    // with the `layout` option - e.g. `topLeft: $.fn.dataTable.Buttons( ... )`.\n    if (!(this instanceof Buttons)) {\n      return function (settings) {\n        return new Buttons(settings, dt).container();\n      };\n    } // If there is no config set it to an empty object\n\n\n    if (typeof config === 'undefined') {\n      config = {};\n    } // Allow a boolean true for defaults\n\n\n    if (config === true) {\n      config = {};\n    } // For easy configuration of buttons an array can be given\n\n\n    if (Array.isArray(config)) {\n      config = {\n        buttons: config\n      };\n    }\n\n    this.c = $.extend(true, {}, Buttons.defaults, config); // Don't want a deep copy for the buttons\n\n    if (config.buttons) {\n      this.c.buttons = config.buttons;\n    }\n\n    this.s = {\n      dt: new DataTable.Api(dt),\n      buttons: [],\n      listenKeys: '',\n      namespace: 'dtb' + _instCounter++\n    };\n    this.dom = {\n      container: $('<' + this.c.dom.container.tag + '/>').addClass(this.c.dom.container.className)\n    };\n\n    this._constructor();\n  };\n\n  $.extend(Buttons.prototype, {\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     * Public methods\n     */\n\n    /**\n     * Get the action of a button\n     * @param  {int|string} Button index\n     * @return {function}\n     */\n\n    /**\n    * Set the action of a button\n    * @param  {node} node Button element\n    * @param  {function} action Function to set\n    * @return {Buttons} Self for chaining\n    */\n    action: function (node, action) {\n      var button = this._nodeToButton(node);\n\n      if (action === undefined) {\n        return button.conf.action;\n      }\n\n      button.conf.action = action;\n      return this;\n    },\n\n    /**\n     * Add an active class to the button to make to look active or get current\n     * active state.\n     * @param  {node} node Button element\n     * @param  {boolean} [flag] Enable / disable flag\n     * @return {Buttons} Self for chaining or boolean for getter\n     */\n    active: function (node, flag) {\n      var button = this._nodeToButton(node);\n\n      var klass = this.c.dom.button.active;\n      var jqNode = $(button.node);\n\n      if (flag === undefined) {\n        return jqNode.hasClass(klass);\n      }\n\n      jqNode.toggleClass(klass, flag === undefined ? true : flag);\n      return this;\n    },\n\n    /**\n     * Add a new button\n     * @param {object} config Button configuration object, base string name or function\n     * @param {int|string} [idx] Button index for where to insert the button\n     * @return {Buttons} Self for chaining\n     */\n    add: function (config, idx) {\n      var buttons = this.s.buttons;\n\n      if (typeof idx === 'string') {\n        var split = idx.split('-');\n        var base = this.s;\n\n        for (var i = 0, ien = split.length - 1; i < ien; i++) {\n          base = base.buttons[split[i] * 1];\n        }\n\n        buttons = base.buttons;\n        idx = split[split.length - 1] * 1;\n      }\n\n      this._expandButton(buttons, config, config !== undefined ? config.split : undefined, (config === undefined || config.split === undefined || config.split.length === 0) && base !== undefined, false, idx);\n\n      this._draw();\n\n      return this;\n    },\n\n    /**\n     * Clear buttons from a collection and then insert new buttons\n     */\n    collectionRebuild: function (node, newButtons) {\n      var button = this._nodeToButton(node);\n\n      if (newButtons !== undefined) {\n        var i; // Need to reverse the array\n\n        for (i = button.buttons.length - 1; i >= 0; i--) {\n          this.remove(button.buttons[i].node);\n        }\n\n        for (i = 0; i < newButtons.length; i++) {\n          this._expandButton(button.buttons, newButtons[i], newButtons[i] !== undefined && newButtons[i].config !== undefined && newButtons[i].config.split !== undefined, true, newButtons[i].parentConf !== undefined && newButtons[i].parentConf.split !== undefined, i, newButtons[i].parentConf);\n        }\n      }\n\n      this._draw(button.collection, button.buttons);\n    },\n\n    /**\n     * Get the container node for the buttons\n     * @return {jQuery} Buttons node\n     */\n    container: function () {\n      return this.dom.container;\n    },\n\n    /**\n     * Disable a button\n     * @param  {node} node Button node\n     * @return {Buttons} Self for chaining\n     */\n    disable: function (node) {\n      var button = this._nodeToButton(node);\n\n      $(button.node).addClass(this.c.dom.button.disabled).attr('disabled', true);\n      return this;\n    },\n\n    /**\n     * Destroy the instance, cleaning up event handlers and removing DOM\n     * elements\n     * @return {Buttons} Self for chaining\n     */\n    destroy: function () {\n      // Key event listener\n      $('body').off('keyup.' + this.s.namespace); // Individual button destroy (so they can remove their own events if\n      // needed). Take a copy as the array is modified by `remove`\n\n      var buttons = this.s.buttons.slice();\n      var i, ien;\n\n      for (i = 0, ien = buttons.length; i < ien; i++) {\n        this.remove(buttons[i].node);\n      } // Container\n\n\n      this.dom.container.remove(); // Remove from the settings object collection\n\n      var buttonInsts = this.s.dt.settings()[0];\n\n      for (i = 0, ien = buttonInsts.length; i < ien; i++) {\n        if (buttonInsts.inst === this) {\n          buttonInsts.splice(i, 1);\n          break;\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Enable / disable a button\n     * @param  {node} node Button node\n     * @param  {boolean} [flag=true] Enable / disable flag\n     * @return {Buttons} Self for chaining\n     */\n    enable: function (node, flag) {\n      if (flag === false) {\n        return this.disable(node);\n      }\n\n      var button = this._nodeToButton(node);\n\n      $(button.node).removeClass(this.c.dom.button.disabled).removeAttr('disabled');\n      return this;\n    },\n\n    /**\n     * Get the instance name for the button set selector\n     * @return {string} Instance name\n     */\n    name: function () {\n      return this.c.name;\n    },\n\n    /**\n     * Get a button's node of the buttons container if no button is given\n     * @param  {node} [node] Button node\n     * @return {jQuery} Button element, or container\n     */\n    node: function (node) {\n      if (!node) {\n        return this.dom.container;\n      }\n\n      var button = this._nodeToButton(node);\n\n      return $(button.node);\n    },\n\n    /**\n     * Set / get a processing class on the selected button\n     * @param {element} node Triggering button node\n     * @param  {boolean} flag true to add, false to remove, undefined to get\n     * @return {boolean|Buttons} Getter value or this if a setter.\n     */\n    processing: function (node, flag) {\n      var dt = this.s.dt;\n\n      var button = this._nodeToButton(node);\n\n      if (flag === undefined) {\n        return $(button.node).hasClass('processing');\n      }\n\n      $(button.node).toggleClass('processing', flag);\n      $(dt.table().node()).triggerHandler('buttons-processing.dt', [flag, dt.button(node), dt, $(node), button.conf]);\n      return this;\n    },\n\n    /**\n     * Remove a button.\n     * @param  {node} node Button node\n     * @return {Buttons} Self for chaining\n     */\n    remove: function (node) {\n      var button = this._nodeToButton(node);\n\n      var host = this._nodeToHost(node);\n\n      var dt = this.s.dt; // Remove any child buttons first\n\n      if (button.buttons.length) {\n        for (var i = button.buttons.length - 1; i >= 0; i--) {\n          this.remove(button.buttons[i].node);\n        }\n      }\n\n      button.conf.destroying = true; // Allow the button to remove event handlers, etc\n\n      if (button.conf.destroy) {\n        button.conf.destroy.call(dt.button(node), dt, $(node), button.conf);\n      }\n\n      this._removeKey(button.conf);\n\n      $(button.node).remove();\n      var idx = $.inArray(button, host);\n      host.splice(idx, 1);\n      return this;\n    },\n\n    /**\n     * Get the text for a button\n     * @param  {int|string} node Button index\n     * @return {string} Button text\n     */\n\n    /**\n    * Set the text for a button\n    * @param  {int|string|function} node Button index\n    * @param  {string} label Text\n    * @return {Buttons} Self for chaining\n    */\n    text: function (node, label) {\n      var button = this._nodeToButton(node);\n\n      var buttonLiner = this.c.dom.collection.buttonLiner;\n      var linerTag = button.inCollection && buttonLiner && buttonLiner.tag ? buttonLiner.tag : this.c.dom.buttonLiner.tag;\n      var dt = this.s.dt;\n      var jqNode = $(button.node);\n\n      var text = function (opt) {\n        return typeof opt === 'function' ? opt(dt, jqNode, button.conf) : opt;\n      };\n\n      if (label === undefined) {\n        return text(button.conf.text);\n      }\n\n      button.conf.text = label;\n\n      if (linerTag) {\n        jqNode.children(linerTag).filter(':not(.dt-down-arrow)').html(text(label));\n      } else {\n        jqNode.html(text(label));\n      }\n\n      return this;\n    },\n\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     * Constructor\n     */\n\n    /**\n     * Buttons constructor\n     * @private\n     */\n    _constructor: function () {\n      var that = this;\n      var dt = this.s.dt;\n      var dtSettings = dt.settings()[0];\n      var buttons = this.c.buttons;\n\n      if (!dtSettings._buttons) {\n        dtSettings._buttons = [];\n      }\n\n      dtSettings._buttons.push({\n        inst: this,\n        name: this.c.name\n      });\n\n      for (var i = 0, ien = buttons.length; i < ien; i++) {\n        this.add(buttons[i]);\n      }\n\n      dt.on('destroy', function (e, settings) {\n        if (settings === dtSettings) {\n          that.destroy();\n        }\n      }); // Global key event binding to listen for button keys\n\n      $('body').on('keyup.' + this.s.namespace, function (e) {\n        if (!document.activeElement || document.activeElement === document.body) {\n          // SUse a string of characters for fast lookup of if we need to\n          // handle this\n          var character = String.fromCharCode(e.keyCode).toLowerCase();\n\n          if (that.s.listenKeys.toLowerCase().indexOf(character) !== -1) {\n            that._keypress(character, e);\n          }\n        }\n      });\n    },\n\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     * Private methods\n     */\n\n    /**\n     * Add a new button to the key press listener\n     * @param {object} conf Resolved button configuration object\n     * @private\n     */\n    _addKey: function (conf) {\n      if (conf.key) {\n        this.s.listenKeys += $.isPlainObject(conf.key) ? conf.key.key : conf.key;\n      }\n    },\n\n    /**\n     * Insert the buttons into the container. Call without parameters!\n     * @param  {node} [container] Recursive only - Insert point\n     * @param  {array} [buttons] Recursive only - Buttons array\n     * @private\n     */\n    _draw: function (container, buttons) {\n      if (!container) {\n        container = this.dom.container;\n        buttons = this.s.buttons;\n      }\n\n      container.children().detach();\n\n      for (var i = 0, ien = buttons.length; i < ien; i++) {\n        container.append(buttons[i].inserter);\n        container.append(' ');\n\n        if (buttons[i].buttons && buttons[i].buttons.length) {\n          this._draw(buttons[i].collection, buttons[i].buttons);\n        }\n      }\n    },\n\n    /**\n     * Create buttons from an array of buttons\n     * @param  {array} attachTo Buttons array to attach to\n     * @param  {object} button Button definition\n     * @param  {boolean} inCollection true if the button is in a collection\n     * @private\n     */\n    _expandButton: function (attachTo, button, split, inCollection, inSplit, attachPoint, parentConf) {\n      var dt = this.s.dt;\n      var buttonCounter = 0;\n      var isSplit = false;\n      var buttons = !Array.isArray(button) ? [button] : button;\n\n      if (button === undefined) {\n        buttons = !Array.isArray(split) ? [split] : split;\n      }\n\n      if (button !== undefined && button.split !== undefined) {\n        isSplit = true;\n      }\n\n      for (var i = 0, ien = buttons.length; i < ien; i++) {\n        var conf = this._resolveExtends(buttons[i]);\n\n        if (!conf) {\n          continue;\n        }\n\n        if (conf.config !== undefined && conf.config.split) {\n          isSplit = true;\n        } else {\n          isSplit = false;\n        } // If the configuration is an array, then expand the buttons at this\n        // point\n\n\n        if (Array.isArray(conf)) {\n          this._expandButton(attachTo, conf, built !== undefined && built.conf !== undefined ? built.conf.split : undefined, inCollection, parentConf !== undefined && parentConf.split !== undefined, attachPoint, parentConf);\n\n          continue;\n        }\n\n        var built = this._buildButton(conf, inCollection, conf.split !== undefined || conf.config !== undefined && conf.config.split !== undefined, inSplit);\n\n        if (!built) {\n          continue;\n        }\n\n        if (attachPoint !== undefined && attachPoint !== null) {\n          attachTo.splice(attachPoint, 0, built);\n          attachPoint++;\n        } else {\n          attachTo.push(built);\n        }\n\n        if (built.conf.buttons || built.conf.split) {\n          built.collection = $('<' + (isSplit ? this.c.dom.splitCollection.tag : this.c.dom.collection.tag) + '/>');\n          built.conf._collection = built.collection;\n\n          if (built.conf.split) {\n            for (var j = 0; j < built.conf.split.length; j++) {\n              if (typeof built.conf.split[j] === \"object\") {\n                built.conf.split[i].parent = parentConf;\n\n                if (built.conf.split[j].collectionLayout === undefined) {\n                  built.conf.split[j].collectionLayout = built.conf.collectionLayout;\n                }\n\n                if (built.conf.split[j].dropup === undefined) {\n                  built.conf.split[j].dropup = built.conf.dropup;\n                }\n\n                if (built.conf.split[j].fade === undefined) {\n                  built.conf.split[j].fade = built.conf.fade;\n                }\n              }\n            }\n          } else {\n            $(built.node).append($('<span class=\"dt-down-arrow\">' + this.c.dom.splitDropdown.text + '</span>'));\n          }\n\n          this._expandButton(built.buttons, built.conf.buttons, built.conf.split, !isSplit, isSplit, attachPoint, built.conf);\n        }\n\n        built.conf.parent = parentConf; // init call is made here, rather than buildButton as it needs to\n        // be selectable, and for that it needs to be in the buttons array\n\n        if (conf.init) {\n          conf.init.call(dt.button(built.node), dt, $(built.node), conf);\n        }\n\n        buttonCounter++;\n      }\n    },\n\n    /**\n     * Create an individual button\n     * @param  {object} config            Resolved button configuration\n     * @param  {boolean} inCollection `true` if a collection button\n     * @return {jQuery} Created button node (jQuery)\n     * @private\n     */\n    _buildButton: function (config, inCollection, isSplit, inSplit) {\n      var buttonDom = this.c.dom.button;\n      var linerDom = this.c.dom.buttonLiner;\n      var collectionDom = this.c.dom.collection;\n      var splitDom = this.c.dom.split;\n      var splitCollectionDom = this.c.dom.splitCollection;\n      var splitDropdownButton = this.c.dom.splitDropdownButton;\n      var dt = this.s.dt;\n\n      var text = function (opt) {\n        return typeof opt === 'function' ? opt(dt, button, config) : opt;\n      };\n\n      if (!isSplit && inSplit && splitCollectionDom) {\n        buttonDom = splitDropdownButton;\n      } else if (!isSplit && inCollection && collectionDom.button) {\n        buttonDom = collectionDom.button;\n      }\n\n      if (!isSplit && inSplit && splitCollectionDom.buttonLiner) {\n        linerDom = splitCollectionDom.buttonLiner;\n      } else if (!isSplit && inCollection && collectionDom.buttonLiner) {\n        linerDom = collectionDom.buttonLiner;\n      } // Make sure that the button is available based on whatever requirements\n      // it has. For example, PDF button require pdfmake\n\n\n      if (config.available && !config.available(dt, config) && !config.hasOwnProperty('html')) {\n        return false;\n      }\n\n      var button;\n\n      if (!config.hasOwnProperty('html')) {\n        var action = function (e, dt, button, config) {\n          config.action.call(dt.button(button), e, dt, button, config);\n          $(dt.table().node()).triggerHandler('buttons-action.dt', [dt.button(button), dt, button, config]);\n        };\n\n        var tag = config.tag || buttonDom.tag;\n        var clickBlurs = config.clickBlurs === undefined ? false : config.clickBlurs;\n        button = $('<' + tag + '/>').addClass(buttonDom.className).addClass(inSplit ? this.c.dom.splitDropdownButton.className : '').attr('tabindex', this.s.dt.settings()[0].iTabIndex).attr('aria-controls', this.s.dt.table().node().id).on('click.dtb', function (e) {\n          e.preventDefault();\n\n          if (!button.hasClass(buttonDom.disabled) && config.action) {\n            action(e, dt, button, config);\n          }\n\n          if (clickBlurs) {\n            button.trigger('blur');\n          }\n        }).on('keyup.dtb', function (e) {\n          if (e.keyCode === 13) {\n            if (!button.hasClass(buttonDom.disabled) && config.action) {\n              action(e, dt, button, config);\n            }\n          }\n        }); // Make `a` tags act like a link\n\n        if (tag.toLowerCase() === 'a') {\n          button.attr('href', '#');\n        } // Button tags should have `type=button` so they don't have any default behaviour\n\n\n        if (tag.toLowerCase() === 'button') {\n          button.attr('type', 'button');\n        }\n\n        if (linerDom.tag) {\n          var liner = $('<' + linerDom.tag + '/>').html(text(config.text)).addClass(linerDom.className);\n\n          if (linerDom.tag.toLowerCase() === 'a') {\n            liner.attr('href', '#');\n          }\n\n          button.append(liner);\n        } else {\n          button.html(text(config.text));\n        }\n\n        if (config.enabled === false) {\n          button.addClass(buttonDom.disabled);\n        }\n\n        if (config.className) {\n          button.addClass(config.className);\n        }\n\n        if (config.titleAttr) {\n          button.attr('title', text(config.titleAttr));\n        }\n\n        if (config.attr) {\n          button.attr(config.attr);\n        }\n\n        if (!config.namespace) {\n          config.namespace = '.dt-button-' + _buttonCounter++;\n        }\n\n        if (config.config !== undefined && config.config.split) {\n          config.split = config.config.split;\n        }\n      } else {\n        button = $(config.html);\n      }\n\n      var buttonContainer = this.c.dom.buttonContainer;\n      var inserter;\n\n      if (buttonContainer && buttonContainer.tag) {\n        inserter = $('<' + buttonContainer.tag + '/>').addClass(buttonContainer.className).append(button);\n      } else {\n        inserter = button;\n      }\n\n      this._addKey(config); // Style integration callback for DOM manipulation\n      // Note that this is _not_ documented. It is currently\n      // for style integration only\n\n\n      if (this.c.buttonCreated) {\n        inserter = this.c.buttonCreated(config, inserter);\n      }\n\n      var splitDiv;\n\n      if (isSplit) {\n        splitDiv = $('<div/>').addClass(this.c.dom.splitWrapper.className);\n        splitDiv.append(button);\n        var dropButtonConfig = $.extend(config, {\n          text: this.c.dom.splitDropdown.text,\n          className: this.c.dom.splitDropdown.className,\n          attr: {\n            'aria-haspopup': true,\n            'aria-expanded': false\n          },\n          align: this.c.dom.splitDropdown.align,\n          splitAlignClass: this.c.dom.splitDropdown.splitAlignClass\n        });\n\n        this._addKey(dropButtonConfig);\n\n        var splitAction = function (e, dt, button, config) {\n          _dtButtons.split.action.call(dt.button($('div.dt-btn-split-wrapper')[0]), e, dt, button, config);\n\n          $(dt.table().node()).triggerHandler('buttons-action.dt', [dt.button(button), dt, button, config]);\n          button.attr('aria-expanded', true);\n        };\n\n        var dropButton = $('<button class=\"' + this.c.dom.splitDropdown.className + ' dt-button\"><span class=\"dt-btn-split-drop-arrow\">' + this.c.dom.splitDropdown.text + '</span></button>').on('click.dtb', function (e) {\n          e.preventDefault();\n          e.stopPropagation();\n\n          if (!dropButton.hasClass(buttonDom.disabled) && dropButtonConfig.action) {\n            splitAction(e, dt, dropButton, dropButtonConfig);\n          }\n\n          if (clickBlurs) {\n            dropButton.trigger('blur');\n          }\n        }).on('keyup.dtb', function (e) {\n          if (e.keyCode === 13) {\n            if (!dropButton.hasClass(buttonDom.disabled) && dropButtonConfig.action) {\n              splitAction(e, dt, dropButton, dropButtonConfig);\n            }\n          }\n        });\n\n        if (config.split.length === 0) {\n          dropButton.addClass('dtb-hide-drop');\n        }\n\n        splitDiv.append(dropButton).attr(dropButtonConfig.attr);\n      }\n\n      return {\n        conf: config,\n        node: isSplit ? splitDiv.get(0) : button.get(0),\n        inserter: isSplit ? splitDiv : inserter,\n        buttons: [],\n        inCollection: inCollection,\n        isSplit: isSplit,\n        inSplit: inSplit,\n        collection: null\n      };\n    },\n\n    /**\n     * Get the button object from a node (recursive)\n     * @param  {node} node Button node\n     * @param  {array} [buttons] Button array, uses base if not defined\n     * @return {object} Button object\n     * @private\n     */\n    _nodeToButton: function (node, buttons) {\n      if (!buttons) {\n        buttons = this.s.buttons;\n      }\n\n      for (var i = 0, ien = buttons.length; i < ien; i++) {\n        if (buttons[i].node === node) {\n          return buttons[i];\n        }\n\n        if (buttons[i].buttons.length) {\n          var ret = this._nodeToButton(node, buttons[i].buttons);\n\n          if (ret) {\n            return ret;\n          }\n        }\n      }\n    },\n\n    /**\n     * Get container array for a button from a button node (recursive)\n     * @param  {node} node Button node\n     * @param  {array} [buttons] Button array, uses base if not defined\n     * @return {array} Button's host array\n     * @private\n     */\n    _nodeToHost: function (node, buttons) {\n      if (!buttons) {\n        buttons = this.s.buttons;\n      }\n\n      for (var i = 0, ien = buttons.length; i < ien; i++) {\n        if (buttons[i].node === node) {\n          return buttons;\n        }\n\n        if (buttons[i].buttons.length) {\n          var ret = this._nodeToHost(node, buttons[i].buttons);\n\n          if (ret) {\n            return ret;\n          }\n        }\n      }\n    },\n\n    /**\n     * Handle a key press - determine if any button's key configured matches\n     * what was typed and trigger the action if so.\n     * @param  {string} character The character pressed\n     * @param  {object} e Key event that triggered this call\n     * @private\n     */\n    _keypress: function (character, e) {\n      // Check if this button press already activated on another instance of Buttons\n      if (e._buttonsHandled) {\n        return;\n      }\n\n      var run = function (conf, node) {\n        if (!conf.key) {\n          return;\n        }\n\n        if (conf.key === character) {\n          e._buttonsHandled = true;\n          $(node).click();\n        } else if ($.isPlainObject(conf.key)) {\n          if (conf.key.key !== character) {\n            return;\n          }\n\n          if (conf.key.shiftKey && !e.shiftKey) {\n            return;\n          }\n\n          if (conf.key.altKey && !e.altKey) {\n            return;\n          }\n\n          if (conf.key.ctrlKey && !e.ctrlKey) {\n            return;\n          }\n\n          if (conf.key.metaKey && !e.metaKey) {\n            return;\n          } // Made it this far - it is good\n\n\n          e._buttonsHandled = true;\n          $(node).click();\n        }\n      };\n\n      var recurse = function (a) {\n        for (var i = 0, ien = a.length; i < ien; i++) {\n          run(a[i].conf, a[i].node);\n\n          if (a[i].buttons.length) {\n            recurse(a[i].buttons);\n          }\n        }\n      };\n\n      recurse(this.s.buttons);\n    },\n\n    /**\n     * Remove a key from the key listener for this instance (to be used when a\n     * button is removed)\n     * @param  {object} conf Button configuration\n     * @private\n     */\n    _removeKey: function (conf) {\n      if (conf.key) {\n        var character = $.isPlainObject(conf.key) ? conf.key.key : conf.key; // Remove only one character, as multiple buttons could have the\n        // same listening key\n\n        var a = this.s.listenKeys.split('');\n        var idx = $.inArray(character, a);\n        a.splice(idx, 1);\n        this.s.listenKeys = a.join('');\n      }\n    },\n\n    /**\n     * Resolve a button configuration\n     * @param  {string|function|object} conf Button config to resolve\n     * @return {object} Button configuration\n     * @private\n     */\n    _resolveExtends: function (conf) {\n      var dt = this.s.dt;\n      var i, ien;\n\n      var toConfObject = function (base) {\n        var loop = 0; // Loop until we have resolved to a button configuration, or an\n        // array of button configurations (which will be iterated\n        // separately)\n\n        while (!$.isPlainObject(base) && !Array.isArray(base)) {\n          if (base === undefined) {\n            return;\n          }\n\n          if (typeof base === 'function') {\n            base = base(dt, conf);\n\n            if (!base) {\n              return false;\n            }\n          } else if (typeof base === 'string') {\n            if (!_dtButtons[base]) {\n              return {\n                html: base\n              };\n            }\n\n            base = _dtButtons[base];\n          }\n\n          loop++;\n\n          if (loop > 30) {\n            // Protect against misconfiguration killing the browser\n            throw 'Buttons: Too many iterations';\n          }\n        }\n\n        return Array.isArray(base) ? base : $.extend({}, base);\n      };\n\n      conf = toConfObject(conf);\n\n      while (conf && conf.extend) {\n        // Use `toConfObject` in case the button definition being extended\n        // is itself a string or a function\n        if (!_dtButtons[conf.extend]) {\n          throw 'Cannot extend unknown button type: ' + conf.extend;\n        }\n\n        var objArray = toConfObject(_dtButtons[conf.extend]);\n\n        if (Array.isArray(objArray)) {\n          return objArray;\n        } else if (!objArray) {\n          // This is a little brutal as it might be possible to have a\n          // valid button without the extend, but if there is no extend\n          // then the host button would be acting in an undefined state\n          return false;\n        } // Stash the current class name\n\n\n        var originalClassName = objArray.className;\n\n        if (conf.config !== undefined && objArray.config !== undefined) {\n          conf.config = $.extend({}, objArray.config, conf.config);\n        }\n\n        conf = $.extend({}, objArray, conf); // The extend will have overwritten the original class name if the\n        // `conf` object also assigned a class, but we want to concatenate\n        // them so they are list that is combined from all extended buttons\n\n        if (originalClassName && conf.className !== originalClassName) {\n          conf.className = originalClassName + ' ' + conf.className;\n        } // Buttons to be added to a collection  -gives the ability to define\n        // if buttons should be added to the start or end of a collection\n\n\n        var postfixButtons = conf.postfixButtons;\n\n        if (postfixButtons) {\n          if (!conf.buttons) {\n            conf.buttons = [];\n          }\n\n          for (i = 0, ien = postfixButtons.length; i < ien; i++) {\n            conf.buttons.push(postfixButtons[i]);\n          }\n\n          conf.postfixButtons = null;\n        }\n\n        var prefixButtons = conf.prefixButtons;\n\n        if (prefixButtons) {\n          if (!conf.buttons) {\n            conf.buttons = [];\n          }\n\n          for (i = 0, ien = prefixButtons.length; i < ien; i++) {\n            conf.buttons.splice(i, 0, prefixButtons[i]);\n          }\n\n          conf.prefixButtons = null;\n        } // Although we want the `conf` object to overwrite almost all of\n        // the properties of the object being extended, the `extend`\n        // property should come from the object being extended\n\n\n        conf.extend = objArray.extend;\n      }\n\n      return conf;\n    },\n\n    /**\n     * Display (and replace if there is an existing one) a popover attached to a button\n     * @param {string|node} content Content to show\n     * @param {DataTable.Api} hostButton DT API instance of the button\n     * @param {object} inOpts Options (see object below for all options)\n     */\n    _popover: function (content, hostButton, inOpts, e) {\n      var dt = hostButton;\n      var buttonsSettings = this.c;\n      var closed = false;\n      var options = $.extend({\n        align: 'button-left',\n        // button-right, dt-container, split-left, split-right\n        autoClose: false,\n        background: true,\n        backgroundClassName: 'dt-button-background',\n        contentClassName: buttonsSettings.dom.collection.className,\n        collectionLayout: '',\n        collectionTitle: '',\n        dropup: false,\n        fade: 400,\n        popoverTitle: '',\n        rightAlignClassName: 'dt-button-right',\n        splitRightAlignClassName: 'dt-button-split-right',\n        splitLeftAlignClassName: 'dt-button-split-left',\n        tag: buttonsSettings.dom.collection.tag\n      }, inOpts);\n      var hostNode = hostButton.node();\n\n      var close = function () {\n        closed = true;\n\n        _fadeOut($('.dt-button-collection'), options.fade, function () {\n          $(this).detach();\n        });\n\n        $(dt.buttons('[aria-haspopup=\"true\"][aria-expanded=\"true\"]').nodes()).attr('aria-expanded', 'false');\n        $('div.dt-button-background').off('click.dtb-collection');\n        Buttons.background(false, options.backgroundClassName, options.fade, hostNode);\n        $('body').off('.dtb-collection');\n        dt.off('buttons-action.b-internal');\n        dt.off('destroy');\n      };\n\n      if (content === false) {\n        close();\n      }\n\n      var existingExpanded = $(dt.buttons('[aria-haspopup=\"true\"][aria-expanded=\"true\"]').nodes());\n\n      if (existingExpanded.length) {\n        hostNode = existingExpanded.eq(0);\n        close();\n      }\n\n      var display = $('<div/>').addClass('dt-button-collection').addClass(options.collectionLayout).addClass(options.splitAlignClass).css('display', 'none');\n      content = $(content).addClass(options.contentClassName).attr('role', 'menu').appendTo(display);\n      hostNode.attr('aria-expanded', 'true');\n\n      if (hostNode.parents('body')[0] !== document.body) {\n        hostNode = document.body.lastChild;\n      }\n\n      if (options.popoverTitle) {\n        display.prepend('<div class=\"dt-button-collection-title\">' + options.popoverTitle + '</div>');\n      } else if (options.collectionTitle) {\n        display.prepend('<div class=\"dt-button-collection-title\">' + options.collectionTitle + '</div>');\n      }\n\n      _fadeIn(display.insertAfter(hostNode), options.fade);\n\n      var tableContainer = $(hostButton.table().container());\n      var position = display.css('position');\n\n      if (options.align === 'dt-container') {\n        hostNode = hostNode.parent();\n        display.css('width', tableContainer.width());\n      } // Align the popover relative to the DataTables container\n      // Useful for wide popovers such as SearchPanes\n\n\n      if (position === 'absolute') {\n        // Align relative to the host button\n        var hostPosition = hostNode.position();\n        var buttonPosition = $(hostButton.node()).position();\n        display.css({\n          top: $($(hostButton[0].node).parent()[0]).hasClass('dt-buttons') ? buttonPosition.top + hostNode.outerHeight() : hostPosition.top + hostNode.outerHeight(),\n          left: hostPosition.left\n        }); // calculate overflow when positioned beneath\n\n        var collectionHeight = display.outerHeight();\n        var tableBottom = tableContainer.offset().top + tableContainer.height();\n        var listBottom = buttonPosition.top + hostNode.outerHeight() + collectionHeight;\n        var bottomOverflow = listBottom - tableBottom; // calculate overflow when positioned above\n\n        var listTop = buttonPosition.top - collectionHeight;\n        var tableTop = tableContainer.offset().top;\n        var topOverflow = tableTop - listTop; // if bottom overflow is larger, move to the top because it fits better, or if dropup is requested\n\n        var moveTop = buttonPosition.top - collectionHeight - 5;\n\n        if ((bottomOverflow > topOverflow || options.dropup) && -moveTop < tableTop) {\n          display.css('top', moveTop);\n        } // Get the size of the container (left and width - and thus also right)\n\n\n        var tableLeft = tableContainer.offset().left;\n        var tableWidth = tableContainer.width();\n        var tableRight = tableLeft + tableWidth; // Get the size of the popover (left and width - and ...)\n\n        var popoverLeft = display.offset().left;\n        var popoverWidth = display.outerWidth(); // Foundations display dom element has a width of 0 - the true width is within the child\n\n        if (popoverWidth === 0) {\n          if (display.children().length > 0) {\n            popoverWidth = $(display.children()[0]).outerWidth();\n          }\n        }\n\n        var popoverRight = popoverLeft + popoverWidth; // Get the size of the host buttons (left and width - and ...)\n\n        var buttonsLeft = hostNode.offset().left;\n        var buttonsWidth = hostNode.outerWidth();\n        var buttonsRight = buttonsLeft + buttonsWidth;\n\n        if (display.hasClass(options.rightAlignClassName) || display.hasClass(options.leftAlignClassName) || display.hasClass(options.splitAlignClass) || options.align === 'dt-container') {\n          // default to the other buttons values\n          var splitButtonLeft = buttonsLeft;\n          var splitButtonWidth = buttonsWidth;\n          var splitButtonRight = buttonsRight; // If the button is a split button then need to calculate some more values\n\n          if (hostNode.hasClass('dt-btn-split-wrapper') && hostNode.children('button.dt-btn-split-drop').length > 0) {\n            splitButtonLeft = hostNode.children('button.dt-btn-split-drop').offset().left;\n            splitButtonWidth = hostNode.children('button.dt-btn-split-drop').outerWidth();\n            splitButtonRight = splitButtonLeft + splitButtonWidth;\n          } // You've then got all the numbers you need to do some calculations and if statements,\n          //  so we can do some quick JS maths and apply it only once\n          // If it has the right align class OR the buttons are right aligned OR the button container is floated right,\n          //  then calculate left position for the popover to align the popover to the right hand\n          //  side of the button - check to see if the left of the popover is inside the table container.\n          // If not, move the popover so it is, but not more than it means that the popover is to the right of the table container\n\n\n          var popoverShuffle = 0;\n\n          if (display.hasClass(options.rightAlignClassName)) {\n            popoverShuffle = buttonsRight - popoverRight;\n\n            if (tableLeft > popoverLeft + popoverShuffle) {\n              var leftGap = tableLeft - (popoverLeft + popoverShuffle);\n              var rightGap = tableRight - (popoverRight + popoverShuffle);\n\n              if (leftGap > rightGap) {\n                popoverShuffle += rightGap;\n              } else {\n                popoverShuffle += leftGap;\n              }\n            }\n          } else if (display.hasClass(options.splitRightAlignClassName)) {\n            popoverShuffle = splitButtonRight - popoverRight;\n\n            if (tableLeft > popoverLeft + popoverShuffle) {\n              var leftGap = tableLeft - (popoverLeft + popoverShuffle);\n              var rightGap = tableRight - (popoverRight + popoverShuffle);\n\n              if (leftGap > rightGap) {\n                popoverShuffle += rightGap;\n              } else {\n                popoverShuffle += leftGap;\n              }\n            }\n          } else if (display.hasClass(options.splitLeftAlignClassName)) {\n            popoverShuffle = splitButtonLeft - popoverLeft;\n\n            if (tableRight < popoverRight + popoverShuffle || tableLeft > popoverLeft + popoverShuffle) {\n              var leftGap = tableLeft - (popoverLeft + popoverShuffle);\n              var rightGap = tableRight - (popoverRight + popoverShuffle);\n\n              if (leftGap > rightGap) {\n                popoverShuffle += rightGap;\n              } else {\n                popoverShuffle += leftGap;\n              }\n            }\n          } // else attempt to left align the popover to the button. Similar to above, if the popover's right goes past the table container's right,\n          //  then move it back, but not so much that it goes past the left of the table container\n          else {\n              popoverShuffle = tableLeft - popoverLeft;\n\n              if (tableRight < popoverRight + popoverShuffle) {\n                var leftGap = tableLeft - (popoverLeft + popoverShuffle);\n                var rightGap = tableRight - (popoverRight + popoverShuffle);\n\n                if (leftGap > rightGap) {\n                  popoverShuffle += rightGap;\n                } else {\n                  popoverShuffle += leftGap;\n                }\n              }\n            }\n\n          display.css('left', display.position().left + popoverShuffle);\n        } else {\n          var top = hostNode.offset().top;\n          var popoverShuffle = 0;\n          popoverShuffle = options.align === 'button-right' ? buttonsRight - popoverRight : buttonsLeft - popoverLeft;\n          display.css('left', display.position().left + popoverShuffle);\n        }\n      } else {\n        // Fix position - centre on screen\n        var top = display.height() / 2;\n\n        if (top > $(window).height() / 2) {\n          top = $(window).height() / 2;\n        }\n\n        display.css('marginTop', top * -1);\n      }\n\n      if (options.background) {\n        Buttons.background(true, options.backgroundClassName, options.fade, hostNode);\n      } // This is bonkers, but if we don't have a click listener on the\n      // background element, iOS Safari will ignore the body click\n      // listener below. An empty function here is all that is\n      // required to make it work...\n\n\n      $('div.dt-button-background').on('click.dtb-collection', function () {});\n\n      if (options.autoClose) {\n        setTimeout(function () {\n          dt.on('buttons-action.b-internal', function (e, btn, dt, node) {\n            if (node[0] === hostNode[0]) {\n              return;\n            }\n\n            close();\n          });\n        }, 0);\n      }\n\n      $(display).trigger('buttons-popover.dt');\n      dt.on('destroy', close);\n      setTimeout(function () {\n        closed = false;\n        $('body').on('click.dtb-collection', function (e) {\n          if (closed) {\n            return;\n          } // andSelf is deprecated in jQ1.8, but we want 1.7 compat\n\n\n          var back = $.fn.addBack ? 'addBack' : 'andSelf';\n          var parent = $(e.target).parent()[0];\n\n          if (!$(e.target).parents()[back]().filter(content).length && !$(parent).hasClass('dt-buttons') || $(e.target).hasClass('dt-button-background')) {\n            close();\n          }\n        }).on('keyup.dtb-collection', function (e) {\n          if (e.keyCode === 27) {\n            close();\n          }\n        });\n      }, 0);\n    }\n  });\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * Statics\n   */\n\n  /**\n   * Show / hide a background layer behind a collection\n   * @param  {boolean} Flag to indicate if the background should be shown or\n   *   hidden \n   * @param  {string} Class to assign to the background\n   * @static\n   */\n\n  Buttons.background = function (show, className, fade, insertPoint) {\n    if (fade === undefined) {\n      fade = 400;\n    }\n\n    if (!insertPoint) {\n      insertPoint = document.body;\n    }\n\n    if (show) {\n      _fadeIn($('<div/>').addClass(className).css('display', 'none').insertAfter(insertPoint), fade);\n    } else {\n      _fadeOut($('div.' + className), fade, function () {\n        $(this).removeClass(className).remove();\n      });\n    }\n  };\n  /**\n   * Instance selector - select Buttons instances based on an instance selector\n   * value from the buttons assigned to a DataTable. This is only useful if\n   * multiple instances are attached to a DataTable.\n   * @param  {string|int|array} Instance selector - see `instance-selector`\n   *   documentation on the DataTables site\n   * @param  {array} Button instance array that was attached to the DataTables\n   *   settings object\n   * @return {array} Buttons instances\n   * @static\n   */\n\n\n  Buttons.instanceSelector = function (group, buttons) {\n    if (group === undefined || group === null) {\n      return $.map(buttons, function (v) {\n        return v.inst;\n      });\n    }\n\n    var ret = [];\n    var names = $.map(buttons, function (v) {\n      return v.name;\n    }); // Flatten the group selector into an array of single options\n\n    var process = function (input) {\n      if (Array.isArray(input)) {\n        for (var i = 0, ien = input.length; i < ien; i++) {\n          process(input[i]);\n        }\n\n        return;\n      }\n\n      if (typeof input === 'string') {\n        if (input.indexOf(',') !== -1) {\n          // String selector, list of names\n          process(input.split(','));\n        } else {\n          // String selector individual name\n          var idx = $.inArray(input.trim(), names);\n\n          if (idx !== -1) {\n            ret.push(buttons[idx].inst);\n          }\n        }\n      } else if (typeof input === 'number') {\n        // Index selector\n        ret.push(buttons[input].inst);\n      }\n    };\n\n    process(group);\n    return ret;\n  };\n  /**\n   * Button selector - select one or more buttons from a selector input so some\n   * operation can be performed on them.\n   * @param  {array} Button instances array that the selector should operate on\n   * @param  {string|int|node|jQuery|array} Button selector - see\n   *   `button-selector` documentation on the DataTables site\n   * @return {array} Array of objects containing `inst` and `idx` properties of\n   *   the selected buttons so you know which instance each button belongs to.\n   * @static\n   */\n\n\n  Buttons.buttonSelector = function (insts, selector) {\n    var ret = [];\n\n    var nodeBuilder = function (a, buttons, baseIdx) {\n      var button;\n      var idx;\n\n      for (var i = 0, ien = buttons.length; i < ien; i++) {\n        button = buttons[i];\n\n        if (button) {\n          idx = baseIdx !== undefined ? baseIdx + i : i + '';\n          a.push({\n            node: button.node,\n            name: button.conf.name,\n            idx: idx\n          });\n\n          if (button.buttons) {\n            nodeBuilder(a, button.buttons, idx + '-');\n          }\n        }\n      }\n    };\n\n    var run = function (selector, inst) {\n      var i, ien;\n      var buttons = [];\n      nodeBuilder(buttons, inst.s.buttons);\n      var nodes = $.map(buttons, function (v) {\n        return v.node;\n      });\n\n      if (Array.isArray(selector) || selector instanceof $) {\n        for (i = 0, ien = selector.length; i < ien; i++) {\n          run(selector[i], inst);\n        }\n\n        return;\n      }\n\n      if (selector === null || selector === undefined || selector === '*') {\n        // Select all\n        for (i = 0, ien = buttons.length; i < ien; i++) {\n          ret.push({\n            inst: inst,\n            node: buttons[i].node\n          });\n        }\n      } else if (typeof selector === 'number') {\n        // Main button index selector\n        ret.push({\n          inst: inst,\n          node: inst.s.buttons[selector].node\n        });\n      } else if (typeof selector === 'string') {\n        if (selector.indexOf(',') !== -1) {\n          // Split\n          var a = selector.split(',');\n\n          for (i = 0, ien = a.length; i < ien; i++) {\n            run(a[i].trim(), inst);\n          }\n        } else if (selector.match(/^\\d+(\\-\\d+)*$/)) {\n          // Sub-button index selector\n          var indexes = $.map(buttons, function (v) {\n            return v.idx;\n          });\n          ret.push({\n            inst: inst,\n            node: buttons[$.inArray(selector, indexes)].node\n          });\n        } else if (selector.indexOf(':name') !== -1) {\n          // Button name selector\n          var name = selector.replace(':name', '');\n\n          for (i = 0, ien = buttons.length; i < ien; i++) {\n            if (buttons[i].name === name) {\n              ret.push({\n                inst: inst,\n                node: buttons[i].node\n              });\n            }\n          }\n        } else {\n          // jQuery selector on the nodes\n          $(nodes).filter(selector).each(function () {\n            ret.push({\n              inst: inst,\n              node: this\n            });\n          });\n        }\n      } else if (typeof selector === 'object' && selector.nodeName) {\n        // Node selector\n        var idx = $.inArray(selector, nodes);\n\n        if (idx !== -1) {\n          ret.push({\n            inst: inst,\n            node: nodes[idx]\n          });\n        }\n      }\n    };\n\n    for (var i = 0, ien = insts.length; i < ien; i++) {\n      var inst = insts[i];\n      run(selector, inst);\n    }\n\n    return ret;\n  };\n  /**\n   * Default function used for formatting output data.\n   * @param {*} str Data to strip\n   */\n\n\n  Buttons.stripData = function (str, config) {\n    if (typeof str !== 'string') {\n      return str;\n    } // Always remove script tags\n\n\n    str = str.replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, ''); // Always remove comments\n\n    str = str.replace(/<!\\-\\-.*?\\-\\->/g, '');\n\n    if (!config || config.stripHtml) {\n      str = str.replace(/<[^>]*>/g, '');\n    }\n\n    if (!config || config.trim) {\n      str = str.replace(/^\\s+|\\s+$/g, '');\n    }\n\n    if (!config || config.stripNewlines) {\n      str = str.replace(/\\n/g, ' ');\n    }\n\n    if (!config || config.decodeEntities) {\n      _exportTextarea.innerHTML = str;\n      str = _exportTextarea.value;\n    }\n\n    return str;\n  };\n  /**\n   * Buttons defaults. For full documentation, please refer to the docs/option\n   * directory or the DataTables site.\n   * @type {Object}\n   * @static\n   */\n\n\n  Buttons.defaults = {\n    buttons: ['copy', 'excel', 'csv', 'pdf', 'print'],\n    name: 'main',\n    tabIndex: 0,\n    dom: {\n      container: {\n        tag: 'div',\n        className: 'dt-buttons'\n      },\n      collection: {\n        tag: 'div',\n        className: ''\n      },\n      button: {\n        tag: 'button',\n        className: 'dt-button',\n        active: 'active',\n        disabled: 'disabled'\n      },\n      buttonLiner: {\n        tag: 'span',\n        className: ''\n      },\n      split: {\n        tag: 'div',\n        className: 'dt-button-split'\n      },\n      splitWrapper: {\n        tag: 'div',\n        className: 'dt-btn-split-wrapper'\n      },\n      splitDropdown: {\n        tag: 'button',\n        text: '&#x25BC;',\n        className: 'dt-btn-split-drop',\n        align: 'split-right',\n        splitAlignClass: 'dt-button-split-left'\n      },\n      splitDropdownButton: {\n        tag: 'button',\n        className: 'dt-btn-split-drop-button dt-button'\n      },\n      splitCollection: {\n        tag: 'div',\n        className: 'dt-button-split-collection'\n      }\n    }\n  };\n  /**\n   * Version information\n   * @type {string}\n   * @static\n   */\n\n  Buttons.version = '2.0.1';\n  $.extend(_dtButtons, {\n    collection: {\n      text: function (dt) {\n        return dt.i18n('buttons.collection', 'Collection');\n      },\n      className: 'buttons-collection',\n      init: function (dt, button, config) {\n        button.attr('aria-expanded', false);\n      },\n      action: function (e, dt, button, config) {\n        if (config._collection.parents('body').length) {\n          this.popover(false, config);\n        } else {\n          this.popover(config._collection, config);\n        }\n      },\n      attr: {\n        'aria-haspopup': true\n      } // Also the popover options, defined in Buttons.popover\n\n    },\n    split: {\n      text: function (dt) {\n        return dt.i18n('buttons.split', 'Split');\n      },\n      className: 'buttons-split',\n      init: function (dt, button, config) {\n        return button.attr('aria-expanded', false);\n      },\n      action: function (e, dt, button, config) {\n        this.popover(config._collection, config);\n      },\n      attr: {\n        'aria-haspopup': true\n      } // Also the popover options, defined in Buttons.popover\n\n    },\n    copy: function (dt, conf) {\n      if (_dtButtons.copyHtml5) {\n        return 'copyHtml5';\n      }\n    },\n    csv: function (dt, conf) {\n      if (_dtButtons.csvHtml5 && _dtButtons.csvHtml5.available(dt, conf)) {\n        return 'csvHtml5';\n      }\n    },\n    excel: function (dt, conf) {\n      if (_dtButtons.excelHtml5 && _dtButtons.excelHtml5.available(dt, conf)) {\n        return 'excelHtml5';\n      }\n    },\n    pdf: function (dt, conf) {\n      if (_dtButtons.pdfHtml5 && _dtButtons.pdfHtml5.available(dt, conf)) {\n        return 'pdfHtml5';\n      }\n    },\n    pageLength: function (dt) {\n      var lengthMenu = dt.settings()[0].aLengthMenu;\n      var vals = [];\n      var lang = [];\n\n      var text = function (dt) {\n        return dt.i18n('buttons.pageLength', {\n          \"-1\": 'Show all rows',\n          _: 'Show %d rows'\n        }, dt.page.len());\n      }; // Support for DataTables 1.x 2D array\n\n\n      if (Array.isArray(lengthMenu[0])) {\n        vals = lengthMenu[0];\n        lang = lengthMenu[1];\n      } else {\n        for (var i = 0; i < lengthMenu.length; i++) {\n          var option = lengthMenu[i]; // Support for DataTables 2 object in the array\n\n          if ($.isPlainObject(option)) {\n            vals.push(option.value);\n            lang.push(option.label);\n          } else {\n            vals.push(option);\n            lang.push(option);\n          }\n        }\n      }\n\n      return {\n        extend: 'collection',\n        text: text,\n        className: 'buttons-page-length',\n        autoClose: true,\n        buttons: $.map(vals, function (val, i) {\n          return {\n            text: lang[i],\n            className: 'button-page-length',\n            action: function (e, dt) {\n              dt.page.len(val).draw();\n            },\n            init: function (dt, node, conf) {\n              var that = this;\n\n              var fn = function () {\n                that.active(dt.page.len() === val);\n              };\n\n              dt.on('length.dt' + conf.namespace, fn);\n              fn();\n            },\n            destroy: function (dt, node, conf) {\n              dt.off('length.dt' + conf.namespace);\n            }\n          };\n        }),\n        init: function (dt, node, conf) {\n          var that = this;\n          dt.on('length.dt' + conf.namespace, function () {\n            that.text(conf.text);\n          });\n        },\n        destroy: function (dt, node, conf) {\n          dt.off('length.dt' + conf.namespace);\n        }\n      };\n    }\n  });\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * DataTables API\n   *\n   * For complete documentation, please refer to the docs/api directory or the\n   * DataTables site\n   */\n  // Buttons group and individual button selector\n\n  DataTable.Api.register('buttons()', function (group, selector) {\n    // Argument shifting\n    if (selector === undefined) {\n      selector = group;\n      group = undefined;\n    }\n\n    this.selector.buttonGroup = group;\n    var res = this.iterator(true, 'table', function (ctx) {\n      if (ctx._buttons) {\n        return Buttons.buttonSelector(Buttons.instanceSelector(group, ctx._buttons), selector);\n      }\n    }, true);\n    res._groupSelector = group;\n    return res;\n  }); // Individual button selector\n\n  DataTable.Api.register('button()', function (group, selector) {\n    // just run buttons() and truncate\n    var buttons = this.buttons(group, selector);\n\n    if (buttons.length > 1) {\n      buttons.splice(1, buttons.length);\n    }\n\n    return buttons;\n  }); // Active buttons\n\n  DataTable.Api.registerPlural('buttons().active()', 'button().active()', function (flag) {\n    if (flag === undefined) {\n      return this.map(function (set) {\n        return set.inst.active(set.node);\n      });\n    }\n\n    return this.each(function (set) {\n      set.inst.active(set.node, flag);\n    });\n  }); // Get / set button action\n\n  DataTable.Api.registerPlural('buttons().action()', 'button().action()', function (action) {\n    if (action === undefined) {\n      return this.map(function (set) {\n        return set.inst.action(set.node);\n      });\n    }\n\n    return this.each(function (set) {\n      set.inst.action(set.node, action);\n    });\n  }); // Collection control\n\n  DataTable.Api.registerPlural('buttons().collectionRebuild()', 'button().collectionRebuild()', function (buttons) {\n    return this.each(function (set) {\n      for (var i = 0; i < buttons.length; i++) {\n        if (typeof buttons[i] === 'object') {\n          buttons[i].parentConf = set;\n        }\n      }\n\n      set.inst.collectionRebuild(set.node, buttons);\n    });\n  }); // Enable / disable buttons\n\n  DataTable.Api.register(['buttons().enable()', 'button().enable()'], function (flag) {\n    return this.each(function (set) {\n      set.inst.enable(set.node, flag);\n    });\n  }); // Disable buttons\n\n  DataTable.Api.register(['buttons().disable()', 'button().disable()'], function () {\n    return this.each(function (set) {\n      set.inst.disable(set.node);\n    });\n  }); // Get button nodes\n\n  DataTable.Api.registerPlural('buttons().nodes()', 'button().node()', function () {\n    var jq = $(); // jQuery will automatically reduce duplicates to a single entry\n\n    $(this.each(function (set) {\n      jq = jq.add(set.inst.node(set.node));\n    }));\n    return jq;\n  }); // Get / set button processing state\n\n  DataTable.Api.registerPlural('buttons().processing()', 'button().processing()', function (flag) {\n    if (flag === undefined) {\n      return this.map(function (set) {\n        return set.inst.processing(set.node);\n      });\n    }\n\n    return this.each(function (set) {\n      set.inst.processing(set.node, flag);\n    });\n  }); // Get / set button text (i.e. the button labels)\n\n  DataTable.Api.registerPlural('buttons().text()', 'button().text()', function (label) {\n    if (label === undefined) {\n      return this.map(function (set) {\n        return set.inst.text(set.node);\n      });\n    }\n\n    return this.each(function (set) {\n      set.inst.text(set.node, label);\n    });\n  }); // Trigger a button's action\n\n  DataTable.Api.registerPlural('buttons().trigger()', 'button().trigger()', function () {\n    return this.each(function (set) {\n      set.inst.node(set.node).trigger('click');\n    });\n  }); // Button resolver to the popover\n\n  DataTable.Api.register('button().popover()', function (content, options) {\n    return this.map(function (set) {\n      return set.inst._popover(content, this.button(this[0].node), options);\n    });\n  }); // Get the container elements\n\n  DataTable.Api.register('buttons().containers()', function () {\n    var jq = $();\n    var groupSelector = this._groupSelector; // We need to use the group selector directly, since if there are no buttons\n    // the result set will be empty\n\n    this.iterator(true, 'table', function (ctx) {\n      if (ctx._buttons) {\n        var insts = Buttons.instanceSelector(groupSelector, ctx._buttons);\n\n        for (var i = 0, ien = insts.length; i < ien; i++) {\n          jq = jq.add(insts[i].container());\n        }\n      }\n    });\n    return jq;\n  });\n  DataTable.Api.register('buttons().container()', function () {\n    // API level of nesting is `buttons()` so we can zip into the containers method\n    return this.containers().eq(0);\n  }); // Add a new button\n\n  DataTable.Api.register('button().add()', function (idx, conf) {\n    var ctx = this.context; // Don't use `this` as it could be empty - select the instances directly\n\n    if (ctx.length) {\n      var inst = Buttons.instanceSelector(this._groupSelector, ctx[0]._buttons);\n\n      if (inst.length) {\n        inst[0].add(conf, idx);\n      }\n    }\n\n    return this.button(this._groupSelector, idx);\n  }); // Destroy the button sets selected\n\n  DataTable.Api.register('buttons().destroy()', function () {\n    this.pluck('inst').unique().each(function (inst) {\n      inst.destroy();\n    });\n    return this;\n  }); // Remove a button\n\n  DataTable.Api.registerPlural('buttons().remove()', 'buttons().remove()', function () {\n    this.each(function (set) {\n      set.inst.remove(set.node);\n    });\n    return this;\n  }); // Information box that can be used by buttons\n\n  var _infoTimer;\n\n  DataTable.Api.register('buttons.info()', function (title, message, time) {\n    var that = this;\n\n    if (title === false) {\n      this.off('destroy.btn-info');\n\n      _fadeOut($('#datatables_buttons_info'), 400, function () {\n        $(this).remove();\n      });\n\n      clearTimeout(_infoTimer);\n      _infoTimer = null;\n      return this;\n    }\n\n    if (_infoTimer) {\n      clearTimeout(_infoTimer);\n    }\n\n    if ($('#datatables_buttons_info').length) {\n      $('#datatables_buttons_info').remove();\n    }\n\n    title = title ? '<h2>' + title + '</h2>' : '';\n\n    _fadeIn($('<div id=\"datatables_buttons_info\" class=\"dt-button-info\"/>').html(title).append($('<div/>')[typeof message === 'string' ? 'html' : 'append'](message)).css('display', 'none').appendTo('body'));\n\n    if (time !== undefined && time !== 0) {\n      _infoTimer = setTimeout(function () {\n        that.buttons.info(false);\n      }, time);\n    }\n\n    this.on('destroy.btn-info', function () {\n      that.buttons.info(false);\n    });\n    return this;\n  }); // Get data from the table for export - this is common to a number of plug-in\n  // buttons so it is included in the Buttons core library\n\n  DataTable.Api.register('buttons.exportData()', function (options) {\n    if (this.context.length) {\n      return _exportData(new DataTable.Api(this.context[0]), options);\n    }\n  }); // Get information about the export that is common to many of the export data\n  // types (DRY)\n\n  DataTable.Api.register('buttons.exportInfo()', function (conf) {\n    if (!conf) {\n      conf = {};\n    }\n\n    return {\n      filename: _filename(conf),\n      title: _title(conf),\n      messageTop: _message(this, conf.message || conf.messageTop, 'top'),\n      messageBottom: _message(this, conf.messageBottom, 'bottom')\n    };\n  });\n  /**\n   * Get the file name for an exported file.\n   *\n   * @param {object}\tconfig Button configuration\n   * @param {boolean} incExtension Include the file name extension\n   */\n\n  var _filename = function (config) {\n    // Backwards compatibility\n    var filename = config.filename === '*' && config.title !== '*' && config.title !== undefined && config.title !== null && config.title !== '' ? config.title : config.filename;\n\n    if (typeof filename === 'function') {\n      filename = filename();\n    }\n\n    if (filename === undefined || filename === null) {\n      return null;\n    }\n\n    if (filename.indexOf('*') !== -1) {\n      filename = filename.replace('*', $('head > title').text()).trim();\n    } // Strip characters which the OS will object to\n\n\n    filename = filename.replace(/[^a-zA-Z0-9_\\u00A1-\\uFFFF\\.,\\-_ !\\(\\)]/g, \"\");\n\n    var extension = _stringOrFunction(config.extension);\n\n    if (!extension) {\n      extension = '';\n    }\n\n    return filename + extension;\n  };\n  /**\n   * Simply utility method to allow parameters to be given as a function\n   *\n   * @param {undefined|string|function} option Option\n   * @return {null|string} Resolved value\n   */\n\n\n  var _stringOrFunction = function (option) {\n    if (option === null || option === undefined) {\n      return null;\n    } else if (typeof option === 'function') {\n      return option();\n    }\n\n    return option;\n  };\n  /**\n   * Get the title for an exported file.\n   *\n   * @param {object} config\tButton configuration\n   */\n\n\n  var _title = function (config) {\n    var title = _stringOrFunction(config.title);\n\n    return title === null ? null : title.indexOf('*') !== -1 ? title.replace('*', $('head > title').text() || 'Exported data') : title;\n  };\n\n  var _message = function (dt, option, position) {\n    var message = _stringOrFunction(option);\n\n    if (message === null) {\n      return null;\n    }\n\n    var caption = $('caption', dt.table().container()).eq(0);\n\n    if (message === '*') {\n      var side = caption.css('caption-side');\n\n      if (side !== position) {\n        return null;\n      }\n\n      return caption.length ? caption.text() : '';\n    }\n\n    return message;\n  };\n\n  var _exportTextarea = $('<textarea/>')[0];\n\n  var _exportData = function (dt, inOpts) {\n    var config = $.extend(true, {}, {\n      rows: null,\n      columns: '',\n      modifier: {\n        search: 'applied',\n        order: 'applied'\n      },\n      orthogonal: 'display',\n      stripHtml: true,\n      stripNewlines: true,\n      decodeEntities: true,\n      trim: true,\n      format: {\n        header: function (d) {\n          return Buttons.stripData(d, config);\n        },\n        footer: function (d) {\n          return Buttons.stripData(d, config);\n        },\n        body: function (d) {\n          return Buttons.stripData(d, config);\n        }\n      },\n      customizeData: null\n    }, inOpts);\n    var header = dt.columns(config.columns).indexes().map(function (idx) {\n      var el = dt.column(idx).header();\n      return config.format.header(el.innerHTML, idx, el);\n    }).toArray();\n    var footer = dt.table().footer() ? dt.columns(config.columns).indexes().map(function (idx) {\n      var el = dt.column(idx).footer();\n      return config.format.footer(el ? el.innerHTML : '', idx, el);\n    }).toArray() : null; // If Select is available on this table, and any rows are selected, limit the export\n    // to the selected rows. If no rows are selected, all rows will be exported. Specify\n    // a `selected` modifier to control directly.\n\n    var modifier = $.extend({}, config.modifier);\n\n    if (dt.select && typeof dt.select.info === 'function' && modifier.selected === undefined) {\n      if (dt.rows(config.rows, $.extend({\n        selected: true\n      }, modifier)).any()) {\n        $.extend(modifier, {\n          selected: true\n        });\n      }\n    }\n\n    var rowIndexes = dt.rows(config.rows, modifier).indexes().toArray();\n    var selectedCells = dt.cells(rowIndexes, config.columns);\n    var cells = selectedCells.render(config.orthogonal).toArray();\n    var cellNodes = selectedCells.nodes().toArray();\n    var columns = header.length;\n    var rows = columns > 0 ? cells.length / columns : 0;\n    var body = [];\n    var cellCounter = 0;\n\n    for (var i = 0, ien = rows; i < ien; i++) {\n      var row = [columns];\n\n      for (var j = 0; j < columns; j++) {\n        row[j] = config.format.body(cells[cellCounter], i, j, cellNodes[cellCounter]);\n        cellCounter++;\n      }\n\n      body[i] = row;\n    }\n\n    var data = {\n      header: header,\n      footer: footer,\n      body: body\n    };\n\n    if (config.customizeData) {\n      config.customizeData(data);\n    }\n\n    return data;\n  };\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * DataTables interface\n   */\n  // Attach to DataTables objects for global access\n\n\n  $.fn.dataTable.Buttons = Buttons;\n  $.fn.DataTable.Buttons = Buttons; // DataTables creation - check if the buttons have been defined for this table,\n  // they will have been if the `B` option was used in `dom`, otherwise we should\n  // create the buttons instance here so they can be inserted into the document\n  // using the API. Listen for `init` for compatibility with pre 1.10.10, but to\n  // be removed in future.\n\n  $(document).on('init.dt plugin-init.dt', function (e, settings) {\n    if (e.namespace !== 'dt') {\n      return;\n    }\n\n    var opts = settings.oInit.buttons || DataTable.defaults.buttons;\n\n    if (opts && !settings._buttons) {\n      new Buttons(settings, opts).container();\n    }\n  });\n\n  function _init(settings, options) {\n    var api = new DataTable.Api(settings);\n    var opts = options ? options : api.init().buttons || DataTable.defaults.buttons;\n    return new Buttons(api, opts).container();\n  } // DataTables `dom` feature option\n\n\n  DataTable.ext.feature.push({\n    fnInit: _init,\n    cFeature: \"B\"\n  }); // DataTables 2 layout feature\n\n  if (DataTable.ext.features) {\n    DataTable.ext.features.register('buttons', _init);\n  }\n\n  return Buttons;\n});","map":{"version":3,"sources":["C:/Users/ADMIN DEP IT/Documents/NetBeansProjects/talleresfront/node_modules/datatables.net-buttons/js/dataTables.buttons.js"],"names":["factory","define","amd","$","window","document","exports","module","root","fn","dataTable","require","jQuery","undefined","DataTable","_instCounter","_buttonCounter","_dtButtons","ext","buttons","_fadeIn","el","duration","animate","stop","fadeIn","css","call","_fadeOut","fadeOut","Buttons","dt","config","settings","container","Array","isArray","c","extend","defaults","s","Api","listenKeys","namespace","dom","tag","addClass","className","_constructor","prototype","action","node","button","_nodeToButton","conf","active","flag","klass","jqNode","hasClass","toggleClass","add","idx","split","base","i","ien","length","_expandButton","_draw","collectionRebuild","newButtons","remove","parentConf","collection","disable","disabled","attr","destroy","off","slice","buttonInsts","inst","splice","enable","removeClass","removeAttr","name","processing","table","triggerHandler","host","_nodeToHost","destroying","_removeKey","inArray","text","label","buttonLiner","linerTag","inCollection","opt","children","filter","html","that","dtSettings","_buttons","push","on","e","activeElement","body","character","String","fromCharCode","keyCode","toLowerCase","indexOf","_keypress","_addKey","key","isPlainObject","detach","append","inserter","attachTo","inSplit","attachPoint","buttonCounter","isSplit","_resolveExtends","built","_buildButton","splitCollection","_collection","j","parent","collectionLayout","dropup","fade","splitDropdown","init","buttonDom","linerDom","collectionDom","splitDom","splitCollectionDom","splitDropdownButton","available","hasOwnProperty","clickBlurs","iTabIndex","id","preventDefault","trigger","liner","enabled","titleAttr","buttonContainer","buttonCreated","splitDiv","splitWrapper","dropButtonConfig","align","splitAlignClass","splitAction","dropButton","stopPropagation","get","ret","_buttonsHandled","run","click","shiftKey","altKey","ctrlKey","metaKey","recurse","a","join","toConfObject","loop","objArray","originalClassName","postfixButtons","prefixButtons","_popover","content","hostButton","inOpts","buttonsSettings","closed","options","autoClose","background","backgroundClassName","contentClassName","collectionTitle","popoverTitle","rightAlignClassName","splitRightAlignClassName","splitLeftAlignClassName","hostNode","close","nodes","existingExpanded","eq","display","appendTo","parents","lastChild","prepend","insertAfter","tableContainer","position","width","hostPosition","buttonPosition","top","outerHeight","left","collectionHeight","tableBottom","offset","height","listBottom","bottomOverflow","listTop","tableTop","topOverflow","moveTop","tableLeft","tableWidth","tableRight","popoverLeft","popoverWidth","outerWidth","popoverRight","buttonsLeft","buttonsWidth","buttonsRight","leftAlignClassName","splitButtonLeft","splitButtonWidth","splitButtonRight","popoverShuffle","leftGap","rightGap","setTimeout","btn","back","addBack","target","show","insertPoint","instanceSelector","group","map","v","names","process","input","trim","buttonSelector","insts","selector","nodeBuilder","baseIdx","match","indexes","replace","each","nodeName","stripData","str","stripHtml","stripNewlines","decodeEntities","_exportTextarea","innerHTML","value","tabIndex","version","i18n","popover","copy","copyHtml5","csv","csvHtml5","excel","excelHtml5","pdf","pdfHtml5","pageLength","lengthMenu","aLengthMenu","vals","lang","_","page","len","option","val","draw","register","buttonGroup","res","iterator","ctx","_groupSelector","registerPlural","set","jq","groupSelector","containers","context","pluck","unique","_infoTimer","title","message","time","clearTimeout","info","_exportData","filename","_filename","_title","messageTop","_message","messageBottom","extension","_stringOrFunction","caption","side","rows","columns","modifier","search","order","orthogonal","format","header","d","footer","customizeData","column","toArray","select","selected","any","rowIndexes","selectedCells","cells","render","cellNodes","cellCounter","row","data","opts","oInit","_init","api","feature","fnInit","cFeature","features"],"mappings":"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","sourcesContent":["/*! Buttons for DataTables 2.0.1\n * Â©2016-2021 SpryMedia Ltd - datatables.net/license\n */\n\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'datatables.net'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ || ! $.fn.dataTable ) {\n\t\t\t\t$ = require('datatables.net')(root, $).$;\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\n// Used for namespacing events added to the document by each instance, so they\n// can be removed on destroy\nvar _instCounter = 0;\n\n// Button namespacing counter for namespacing events on individual buttons\nvar _buttonCounter = 0;\n\nvar _dtButtons = DataTable.ext.buttons;\n\n// Allow for jQuery slim\nfunction _fadeIn(el, duration, fn) {\n\tif ($.fn.animate) {\n\t\tel\n\t\t\t.stop()\n\t\t\t.fadeIn( duration, fn );\n\n\t}\n\telse {\n\t\tel.css('display', 'block');\n\n\t\tif (fn) {\n\t\t\tfn.call(el);\n\t\t}\n\t}\n}\n\nfunction _fadeOut(el, duration, fn) {\n\tif ($.fn.animate) {\n\t\tel\n\t\t\t.stop()\n\t\t\t.fadeOut( duration, fn );\n\t}\n\telse {\n\t\tel.css('display', 'none');\n\t\t\n\t\tif (fn) {\n\t\t\tfn.call(el);\n\t\t}\n\t}\n}\n\n/**\n * [Buttons description]\n * @param {[type]}\n * @param {[type]}\n */\nvar Buttons = function( dt, config )\n{\n\t// If not created with a `new` keyword then we return a wrapper function that\n\t// will take the settings object for a DT. This allows easy use of new instances\n\t// with the `layout` option - e.g. `topLeft: $.fn.dataTable.Buttons( ... )`.\n\tif ( !(this instanceof Buttons) ) {\n\t\treturn function (settings) {\n\t\t\treturn new Buttons( settings, dt ).container();\n\t\t};\n\t}\n\n\t// If there is no config set it to an empty object\n\tif ( typeof( config ) === 'undefined' ) {\n\t\tconfig = {};\t\n\t}\n\t\n\t// Allow a boolean true for defaults\n\tif ( config === true ) {\n\t\tconfig = {};\n\t}\n\n\t// For easy configuration of buttons an array can be given\n\tif ( Array.isArray( config ) ) {\n\t\tconfig = { buttons: config };\n\t}\n\n\tthis.c = $.extend( true, {}, Buttons.defaults, config );\n\n\t// Don't want a deep copy for the buttons\n\tif ( config.buttons ) {\n\t\tthis.c.buttons = config.buttons;\n\t}\n\n\tthis.s = {\n\t\tdt: new DataTable.Api( dt ),\n\t\tbuttons: [],\n\t\tlistenKeys: '',\n\t\tnamespace: 'dtb'+(_instCounter++)\n\t};\n\n\tthis.dom = {\n\t\tcontainer: $('<'+this.c.dom.container.tag+'/>')\n\t\t\t.addClass( this.c.dom.container.className )\n\t};\n\n\tthis._constructor();\n};\n\n\n$.extend( Buttons.prototype, {\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Public methods\n\t */\n\n\t/**\n\t * Get the action of a button\n\t * @param  {int|string} Button index\n\t * @return {function}\n\t *//**\n\t * Set the action of a button\n\t * @param  {node} node Button element\n\t * @param  {function} action Function to set\n\t * @return {Buttons} Self for chaining\n\t */\n\taction: function ( node, action )\n\t{\n\t\tvar button = this._nodeToButton( node );\n\n\t\tif ( action === undefined ) {\n\t\t\treturn button.conf.action;\n\t\t}\n\n\t\tbutton.conf.action = action;\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Add an active class to the button to make to look active or get current\n\t * active state.\n\t * @param  {node} node Button element\n\t * @param  {boolean} [flag] Enable / disable flag\n\t * @return {Buttons} Self for chaining or boolean for getter\n\t */\n\tactive: function ( node, flag ) {\n\t\tvar button = this._nodeToButton( node );\n\t\tvar klass = this.c.dom.button.active;\n\t\tvar jqNode = $(button.node);\n\n\t\tif ( flag === undefined ) {\n\t\t\treturn jqNode.hasClass( klass );\n\t\t}\n\n\t\tjqNode.toggleClass( klass, flag === undefined ? true : flag );\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Add a new button\n\t * @param {object} config Button configuration object, base string name or function\n\t * @param {int|string} [idx] Button index for where to insert the button\n\t * @return {Buttons} Self for chaining\n\t */\n\tadd: function ( config, idx )\n\t{\n\t\tvar buttons = this.s.buttons;\n\n\t\tif ( typeof idx === 'string' ) {\n\t\t\tvar split = idx.split('-');\n\t\t\tvar base = this.s;\n\n\t\t\tfor ( var i=0, ien=split.length-1 ; i<ien ; i++ ) {\n\t\t\t\tbase = base.buttons[ split[i]*1 ];\n\t\t\t}\n\n\t\t\tbuttons = base.buttons;\n\t\t\tidx = split[ split.length-1 ]*1;\n\t\t}\n\n\t\tthis._expandButton(\n\t\t\tbuttons,\n\t\t\tconfig,\n\t\t\tconfig !== undefined ? config.split : undefined,\n\t\t\t(config === undefined || config.split === undefined || config.split.length === 0) && base !== undefined,\n\t\t\tfalse,\n\t\t\tidx );\n\t\tthis._draw();\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Clear buttons from a collection and then insert new buttons\n\t */\n\tcollectionRebuild: function ( node, newButtons )\n\t{\n\t\tvar button = this._nodeToButton( node );\n\t\t\n\t\tif(newButtons !== undefined) {\n\t\t\tvar i;\n\t\t\t// Need to reverse the array\n\t\t\tfor (i=button.buttons.length-1; i>=0; i--) {\n\t\t\t\tthis.remove(button.buttons[i].node);\n\t\t\t}\n\t\n\t\t\tfor (i=0; i<newButtons.length; i++) {\n\t\t\t\tthis._expandButton(\n\t\t\t\t\tbutton.buttons,\n\t\t\t\t\tnewButtons[i],\n\t\t\t\t\tnewButtons[i] !== undefined && newButtons[i].config !== undefined && newButtons[i].config.split !== undefined,\n\t\t\t\t\ttrue,\n\t\t\t\t\tnewButtons[i].parentConf !== undefined && newButtons[i].parentConf.split !== undefined,\n\t\t\t\t\ti,\n\t\t\t\t\tnewButtons[i].parentConf\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tthis._draw(button.collection, button.buttons);\n\t},\n\n\t/**\n\t * Get the container node for the buttons\n\t * @return {jQuery} Buttons node\n\t */\n\tcontainer: function ()\n\t{\n\t\treturn this.dom.container;\n\t},\n\n\t/**\n\t * Disable a button\n\t * @param  {node} node Button node\n\t * @return {Buttons} Self for chaining\n\t */\n\tdisable: function ( node ) {\n\t\tvar button = this._nodeToButton( node );\n\n\t\t$(button.node)\n\t\t\t.addClass( this.c.dom.button.disabled )\n\t\t\t.attr('disabled', true);\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Destroy the instance, cleaning up event handlers and removing DOM\n\t * elements\n\t * @return {Buttons} Self for chaining\n\t */\n\tdestroy: function ()\n\t{\n\t\t// Key event listener\n\t\t$('body').off( 'keyup.'+this.s.namespace );\n\n\t\t// Individual button destroy (so they can remove their own events if\n\t\t// needed). Take a copy as the array is modified by `remove`\n\t\tvar buttons = this.s.buttons.slice();\n\t\tvar i, ien;\n\t\t\n\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tthis.remove( buttons[i].node );\n\t\t}\n\n\t\t// Container\n\t\tthis.dom.container.remove();\n\n\t\t// Remove from the settings object collection\n\t\tvar buttonInsts = this.s.dt.settings()[0];\n\n\t\tfor ( i=0, ien=buttonInsts.length ; i<ien ; i++ ) {\n\t\t\tif ( buttonInsts.inst === this ) {\n\t\t\t\tbuttonInsts.splice( i, 1 );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Enable / disable a button\n\t * @param  {node} node Button node\n\t * @param  {boolean} [flag=true] Enable / disable flag\n\t * @return {Buttons} Self for chaining\n\t */\n\tenable: function ( node, flag )\n\t{\n\t\tif ( flag === false ) {\n\t\t\treturn this.disable( node );\n\t\t}\n\n\t\tvar button = this._nodeToButton( node );\n\t\t$(button.node)\n\t\t\t.removeClass( this.c.dom.button.disabled )\n\t\t\t.removeAttr('disabled');\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Get the instance name for the button set selector\n\t * @return {string} Instance name\n\t */\n\tname: function ()\n\t{\n\t\treturn this.c.name;\n\t},\n\n\t/**\n\t * Get a button's node of the buttons container if no button is given\n\t * @param  {node} [node] Button node\n\t * @return {jQuery} Button element, or container\n\t */\n\tnode: function ( node )\n\t{\n\t\tif ( ! node ) {\n\t\t\treturn this.dom.container;\n\t\t}\n\n\t\tvar button = this._nodeToButton( node );\n\t\treturn $(button.node);\n\t},\n\n\t/**\n\t * Set / get a processing class on the selected button\n\t * @param {element} node Triggering button node\n\t * @param  {boolean} flag true to add, false to remove, undefined to get\n\t * @return {boolean|Buttons} Getter value or this if a setter.\n\t */\n\tprocessing: function ( node, flag )\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar button = this._nodeToButton( node );\n\n\t\tif ( flag === undefined ) {\n\t\t\treturn $(button.node).hasClass( 'processing' );\n\t\t}\n\n\t\t$(button.node).toggleClass( 'processing', flag );\n\n\t\t$(dt.table().node()).triggerHandler( 'buttons-processing.dt', [\n\t\t\tflag, dt.button( node ), dt, $(node), button.conf\n\t\t] );\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Remove a button.\n\t * @param  {node} node Button node\n\t * @return {Buttons} Self for chaining\n\t */\n\tremove: function ( node )\n\t{\n\t\tvar button = this._nodeToButton( node );\n\t\tvar host = this._nodeToHost( node );\n\t\tvar dt = this.s.dt;\n\n\t\t// Remove any child buttons first\n\t\tif ( button.buttons.length ) {\n\t\t\tfor ( var i=button.buttons.length-1 ; i>=0 ; i-- ) {\n\t\t\t\tthis.remove( button.buttons[i].node );\n\t\t\t}\n\t\t}\n\n\t\tbutton.conf.destroying = true;\n\n\t\t// Allow the button to remove event handlers, etc\n\t\tif ( button.conf.destroy ) {\n\t\t\tbutton.conf.destroy.call( dt.button(node), dt, $(node), button.conf );\n\t\t}\n\n\t\tthis._removeKey( button.conf );\n\n\t\t$(button.node).remove();\n\n\t\tvar idx = $.inArray( button, host );\n\t\thost.splice( idx, 1 );\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Get the text for a button\n\t * @param  {int|string} node Button index\n\t * @return {string} Button text\n\t *//**\n\t * Set the text for a button\n\t * @param  {int|string|function} node Button index\n\t * @param  {string} label Text\n\t * @return {Buttons} Self for chaining\n\t */\n\ttext: function ( node, label )\n\t{\n\t\tvar button = this._nodeToButton( node );\n\t\tvar buttonLiner = this.c.dom.collection.buttonLiner;\n\t\tvar linerTag = button.inCollection && buttonLiner && buttonLiner.tag ?\n\t\t\tbuttonLiner.tag :\n\t\t\tthis.c.dom.buttonLiner.tag;\n\t\tvar dt = this.s.dt;\n\t\tvar jqNode = $(button.node);\n\t\tvar text = function ( opt ) {\n\t\t\treturn typeof opt === 'function' ?\n\t\t\t\topt( dt, jqNode, button.conf ) :\n\t\t\t\topt;\n\t\t};\n\n\t\tif ( label === undefined ) {\n\t\t\treturn text( button.conf.text );\n\t\t}\n\n\t\tbutton.conf.text = label;\n\n\t\tif ( linerTag ) {\n\t\t\tjqNode\n\t\t\t\t.children( linerTag )\n\t\t\t\t.filter(':not(.dt-down-arrow)')\n\t\t\t\t.html( text(label) );\n\t\t}\n\t\telse {\n\t\t\tjqNode.html( text(label) );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Constructor\n\t */\n\n\t/**\n\t * Buttons constructor\n\t * @private\n\t */\n\t_constructor: function ()\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar dtSettings = dt.settings()[0];\n\t\tvar buttons =  this.c.buttons;\n\n\t\tif ( ! dtSettings._buttons ) {\n\t\t\tdtSettings._buttons = [];\n\t\t}\n\n\t\tdtSettings._buttons.push( {\n\t\t\tinst: this,\n\t\t\tname: this.c.name\n\t\t} );\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tthis.add( buttons[i] );\n\t\t}\n\n\t\tdt.on( 'destroy', function ( e, settings ) {\n\t\t\tif ( settings === dtSettings ) {\n\t\t\t\tthat.destroy();\n\t\t\t}\n\t\t} );\n\n\t\t// Global key event binding to listen for button keys\n\t\t$('body').on( 'keyup.'+this.s.namespace, function ( e ) {\n\t\t\tif ( ! document.activeElement || document.activeElement === document.body ) {\n\t\t\t\t// SUse a string of characters for fast lookup of if we need to\n\t\t\t\t// handle this\n\t\t\t\tvar character = String.fromCharCode(e.keyCode).toLowerCase();\n\n\t\t\t\tif ( that.s.listenKeys.toLowerCase().indexOf( character ) !== -1 ) {\n\t\t\t\t\tthat._keypress( character, e );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Private methods\n\t */\n\n\t/**\n\t * Add a new button to the key press listener\n\t * @param {object} conf Resolved button configuration object\n\t * @private\n\t */\n\t_addKey: function ( conf )\n\t{\n\t\tif ( conf.key ) {\n\t\t\tthis.s.listenKeys += $.isPlainObject( conf.key ) ?\n\t\t\t\tconf.key.key :\n\t\t\t\tconf.key;\n\t\t}\n\t},\n\n\t/**\n\t * Insert the buttons into the container. Call without parameters!\n\t * @param  {node} [container] Recursive only - Insert point\n\t * @param  {array} [buttons] Recursive only - Buttons array\n\t * @private\n\t */\n\t_draw: function ( container, buttons )\n\t{\n\t\tif ( ! container ) {\n\t\t\tcontainer = this.dom.container;\n\t\t\tbuttons = this.s.buttons;\n\t\t}\n\n\t\tcontainer.children().detach();\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tcontainer.append( buttons[i].inserter );\n\t\t\tcontainer.append( ' ' );\n\n\t\t\tif ( buttons[i].buttons && buttons[i].buttons.length ) {\n\t\t\t\tthis._draw( buttons[i].collection, buttons[i].buttons );\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Create buttons from an array of buttons\n\t * @param  {array} attachTo Buttons array to attach to\n\t * @param  {object} button Button definition\n\t * @param  {boolean} inCollection true if the button is in a collection\n\t * @private\n\t */\n\t_expandButton: function ( attachTo, button, split, inCollection, inSplit, attachPoint, parentConf )\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar buttonCounter = 0;\n\t\tvar isSplit = false;\n\t\tvar buttons = ! Array.isArray( button ) ?\n\t\t\t[ button ] :\n\t\t\tbutton;\n\t\t\n\t\tif(button === undefined ) {\n\t\t\tbuttons = !Array.isArray(split) ?\n\t\t\t\t[ split ] :\n\t\t\t\tsplit;\n\t\t}\n\n\t\tif (button !== undefined && button.split !== undefined) {\n\t\t\tisSplit = true;\n\t\t}\n\t\t\t\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tvar conf = this._resolveExtends( buttons[i] );\n\n\t\t\tif ( ! conf ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( conf.config !== undefined && conf.config.split) {\n\t\t\t\tisSplit = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tisSplit = false;\n\t\t\t}\n\t\t\t\n\t\t\t// If the configuration is an array, then expand the buttons at this\n\t\t\t// point\n\t\t\tif ( Array.isArray( conf ) ) {\n\t\t\t\tthis._expandButton( attachTo, conf, built !== undefined && built.conf !== undefined ? built.conf.split : undefined, inCollection, parentConf !== undefined && parentConf.split !== undefined, attachPoint, parentConf );\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar built = this._buildButton( conf, inCollection, conf.split !== undefined || (conf.config !== undefined && conf.config.split !== undefined), inSplit );\n\t\t\tif ( ! built ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( attachPoint !== undefined && attachPoint !== null ) {\n\t\t\t\tattachTo.splice( attachPoint, 0, built );\n\t\t\t\tattachPoint++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tattachTo.push( built );\n\t\t\t}\n\n\t\t\t\n\t\t\tif ( built.conf.buttons || built.conf.split ) {\n\t\t\t\tbuilt.collection = $('<'+(isSplit ? this.c.dom.splitCollection.tag : this.c.dom.collection.tag)+'/>');\n\n\t\t\t\tbuilt.conf._collection = built.collection;\n\n\t\t\t\tif(built.conf.split) {\n\t\t\t\t\tfor(var j = 0; j < built.conf.split.length; j++) {\n\t\t\t\t\t\tif(typeof built.conf.split[j] === \"object\") {\n\t\t\t\t\t\t\tbuilt.conf.split[i].parent = parentConf;\n\t\t\t\t\t\t\tif(built.conf.split[j].collectionLayout === undefined) {\n\t\t\t\t\t\t\t\tbuilt.conf.split[j].collectionLayout = built.conf.collectionLayout;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(built.conf.split[j].dropup === undefined) {\n\t\t\t\t\t\t\t\tbuilt.conf.split[j].dropup = built.conf.dropup;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(built.conf.split[j].fade === undefined) {\n\t\t\t\t\t\t\t\tbuilt.conf.split[j].fade = built.conf.fade;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$(built.node).append($('<span class=\"dt-down-arrow\">'+this.c.dom.splitDropdown.text+'</span>'))\n\t\t\t\t}\n\n\t\t\t\tthis._expandButton( built.buttons, built.conf.buttons, built.conf.split, !isSplit, isSplit, attachPoint, built.conf );\n\t\t\t}\n\t\t\tbuilt.conf.parent = parentConf;\n\n\t\t\t// init call is made here, rather than buildButton as it needs to\n\t\t\t// be selectable, and for that it needs to be in the buttons array\n\t\t\tif ( conf.init ) {\n\t\t\t\tconf.init.call( dt.button( built.node ), dt, $(built.node), conf );\n\t\t\t}\n\n\t\t\tbuttonCounter++;\n\t\t}\n\t},\n\n\t/**\n\t * Create an individual button\n\t * @param  {object} config            Resolved button configuration\n\t * @param  {boolean} inCollection `true` if a collection button\n\t * @return {jQuery} Created button node (jQuery)\n\t * @private\n\t */\n\t_buildButton: function ( config, inCollection, isSplit, inSplit )\n\t{\n\t\tvar buttonDom = this.c.dom.button;\n\t\tvar linerDom = this.c.dom.buttonLiner;\n\t\tvar collectionDom = this.c.dom.collection;\n\t\tvar splitDom = this.c.dom.split;\n\t\tvar splitCollectionDom = this.c.dom.splitCollection;\n\t\tvar splitDropdownButton = this.c.dom.splitDropdownButton;\n\t\tvar dt = this.s.dt;\n\t\tvar text = function ( opt ) {\n\t\t\treturn typeof opt === 'function' ?\n\t\t\t\topt( dt, button, config ) :\n\t\t\t\topt;\n\t\t};\n\n\t\tif ( !isSplit && inSplit && splitCollectionDom ) {\n\t\t\tbuttonDom = splitDropdownButton;\n\t\t}\n\t\telse if ( !isSplit && inCollection && collectionDom.button ) {\n\t\t\tbuttonDom = collectionDom.button;\n\t\t} \n\n\t\tif ( !isSplit && inSplit && splitCollectionDom.buttonLiner ) {\n\t\t\tlinerDom = splitCollectionDom.buttonLiner\n\t\t}\n\t\telse if ( !isSplit && inCollection && collectionDom.buttonLiner ) {\n\t\t\tlinerDom = collectionDom.buttonLiner;\n\t\t}\n\n\t\t// Make sure that the button is available based on whatever requirements\n\t\t// it has. For example, PDF button require pdfmake\n\t\tif ( config.available && ! config.available( dt, config ) && !config.hasOwnProperty('html') ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar button;\n\t\tif(!config.hasOwnProperty('html')) {\n\t\t\tvar action = function ( e, dt, button, config ) {\n\t\t\t\tconfig.action.call( dt.button( button ), e, dt, button, config );\n\t\n\t\t\t\t$(dt.table().node()).triggerHandler( 'buttons-action.dt', [\n\t\t\t\t\tdt.button( button ), dt, button, config \n\t\t\t\t] );\n\t\t\t};\n\n\t\t\tvar tag = config.tag || buttonDom.tag;\n\t\t\tvar clickBlurs = config.clickBlurs === undefined ? false : config.clickBlurs\n\t\t\tbutton = $('<'+tag+'/>')\n\t\t\t\t.addClass( buttonDom.className )\n\t\t\t\t.addClass( inSplit ? this.c.dom.splitDropdownButton.className : '')\n\t\t\t\t.attr( 'tabindex', this.s.dt.settings()[0].iTabIndex )\n\t\t\t\t.attr( 'aria-controls', this.s.dt.table().node().id )\n\t\t\t\t.on( 'click.dtb', function (e) {\n\t\t\t\t\te.preventDefault();\n\t\n\t\t\t\t\tif ( ! button.hasClass( buttonDom.disabled ) && config.action ) {\n\t\t\t\t\t\taction( e, dt, button, config );\n\t\t\t\t\t}\n\t\t\t\t\tif( clickBlurs ) {\n\t\t\t\t\t\tbutton.trigger('blur');\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t\t.on( 'keyup.dtb', function (e) {\n\t\t\t\t\tif ( e.keyCode === 13 ) {\n\t\t\t\t\t\tif ( ! button.hasClass( buttonDom.disabled ) && config.action ) {\n\t\t\t\t\t\t\taction( e, dt, button, config );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\n\t\t\t// Make `a` tags act like a link\n\t\t\tif ( tag.toLowerCase() === 'a' ) {\n\t\t\t\tbutton.attr( 'href', '#' );\n\t\t\t}\n\t\n\t\t\t// Button tags should have `type=button` so they don't have any default behaviour\n\t\t\tif ( tag.toLowerCase() === 'button' ) {\n\t\t\t\tbutton.attr( 'type', 'button' );\n\t\t\t}\n\t\n\t\t\tif ( linerDom.tag ) {\n\t\t\t\tvar liner = $('<'+linerDom.tag+'/>')\n\t\t\t\t\t.html( text( config.text ) )\n\t\t\t\t\t.addClass( linerDom.className );\n\t\n\t\t\t\tif ( linerDom.tag.toLowerCase() === 'a' ) {\n\t\t\t\t\tliner.attr( 'href', '#' );\n\t\t\t\t}\n\t\n\t\t\t\tbutton.append( liner );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbutton.html( text( config.text ) );\n\t\t\t}\n\t\n\t\t\tif ( config.enabled === false ) {\n\t\t\t\tbutton.addClass( buttonDom.disabled );\n\t\t\t}\n\t\n\t\t\tif ( config.className ) {\n\t\t\t\tbutton.addClass( config.className );\n\t\t\t}\n\t\n\t\t\tif ( config.titleAttr ) {\n\t\t\t\tbutton.attr( 'title', text( config.titleAttr ) );\n\t\t\t}\n\t\n\t\t\tif ( config.attr ) {\n\t\t\t\tbutton.attr( config.attr );\n\t\t\t}\n\t\n\t\t\tif ( ! config.namespace ) {\n\t\t\t\tconfig.namespace = '.dt-button-'+(_buttonCounter++);\n\t\t\t}\n\n\t\t\tif  ( config.config !== undefined && config.config.split ) {\n\t\t\t\tconfig.split = config.config.split;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tbutton = $(config.html)\n\t\t}\n\t\n\t\tvar buttonContainer = this.c.dom.buttonContainer;\n\t\tvar inserter;\n\t\tif ( buttonContainer && buttonContainer.tag ) {\n\t\t\tinserter = $('<'+buttonContainer.tag+'/>')\n\t\t\t\t.addClass( buttonContainer.className )\n\t\t\t\t.append( button );\n\t\t}\n\t\telse {\n\t\t\tinserter = button;\n\t\t}\n\n\t\tthis._addKey( config );\n\n\t\t// Style integration callback for DOM manipulation\n\t\t// Note that this is _not_ documented. It is currently\n\t\t// for style integration only\n\t\tif( this.c.buttonCreated ) {\n\t\t\tinserter = this.c.buttonCreated( config, inserter );\n\t\t}\n\n\t\tvar splitDiv;\n\t\tif(isSplit) {\n\t\t\tsplitDiv = $('<div/>').addClass(this.c.dom.splitWrapper.className)\n\t\t\tsplitDiv.append(button);\n\t\t\tvar dropButtonConfig = $.extend(config, {\n\t\t\t\ttext: this.c.dom.splitDropdown.text,\n\t\t\t\tclassName: this.c.dom.splitDropdown.className,\n\t\t\t\tattr: {\n\t\t\t\t\t'aria-haspopup': true,\n\t\t\t\t\t'aria-expanded': false\n\t\t\t\t},\n\t\t\t\talign: this.c.dom.splitDropdown.align,\n\t\t\t\tsplitAlignClass: this.c.dom.splitDropdown.splitAlignClass\n\t\t\t\t\n\t\t\t})\n\n\t\t\tthis._addKey(dropButtonConfig);\n\n\t\t\tvar splitAction = function ( e, dt, button, config ) {\n\t\t\t\t_dtButtons.split.action.call( dt.button($('div.dt-btn-split-wrapper')[0] ), e, dt, button, config );\n\t\n\t\t\t\t$(dt.table().node()).triggerHandler( 'buttons-action.dt', [\n\t\t\t\t\tdt.button( button ), dt, button, config \n\t\t\t\t] );\n\t\t\t\tbutton.attr('aria-expanded', true)\n\t\t\t};\n\t\t\t\n\t\t\tvar dropButton = $('<button class=\"' + this.c.dom.splitDropdown.className + ' dt-button\"><span class=\"dt-btn-split-drop-arrow\">'+this.c.dom.splitDropdown.text+'</span></button>')\n\t\t\t\t.on( 'click.dtb', function (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\tif ( ! dropButton.hasClass( buttonDom.disabled ) && dropButtonConfig.action ) {\n\t\t\t\t\t\tsplitAction( e, dt, dropButton, dropButtonConfig );\n\t\t\t\t\t}\n\t\t\t\t\tif ( clickBlurs ) {\n\t\t\t\t\t\tdropButton.trigger('blur');\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t\t.on( 'keyup.dtb', function (e) {\n\t\t\t\t\tif ( e.keyCode === 13 ) {\n\t\t\t\t\t\tif ( ! dropButton.hasClass( buttonDom.disabled ) && dropButtonConfig.action ) {\n\t\t\t\t\t\t\tsplitAction( e, dt, dropButton, dropButtonConfig );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\tif(config.split.length === 0) {\n\t\t\t\tdropButton.addClass('dtb-hide-drop');\n\t\t\t}\n\n\t\t\tsplitDiv.append(dropButton).attr(dropButtonConfig.attr);\n\t\t}\n\n\t\treturn {\n\t\t\tconf:         config,\n\t\t\tnode:         isSplit ? splitDiv.get(0) : button.get(0),\n\t\t\tinserter:     isSplit ? splitDiv : inserter,\n\t\t\tbuttons:      [],\n\t\t\tinCollection: inCollection,\n\t\t\tisSplit:\t  isSplit,\n\t\t\tinSplit:\t  inSplit,\n\t\t\tcollection:   null\n\t\t};\n\t},\n\n\t/**\n\t * Get the button object from a node (recursive)\n\t * @param  {node} node Button node\n\t * @param  {array} [buttons] Button array, uses base if not defined\n\t * @return {object} Button object\n\t * @private\n\t */\n\t_nodeToButton: function ( node, buttons )\n\t{\n\t\tif ( ! buttons ) {\n\t\t\tbuttons = this.s.buttons;\n\t\t}\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tif ( buttons[i].node === node ) {\n\t\t\t\treturn buttons[i];\n\t\t\t}\n\n\t\t\tif ( buttons[i].buttons.length ) {\n\t\t\t\tvar ret = this._nodeToButton( node, buttons[i].buttons );\n\n\t\t\t\tif ( ret ) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Get container array for a button from a button node (recursive)\n\t * @param  {node} node Button node\n\t * @param  {array} [buttons] Button array, uses base if not defined\n\t * @return {array} Button's host array\n\t * @private\n\t */\n\t_nodeToHost: function ( node, buttons )\n\t{\n\t\tif ( ! buttons ) {\n\t\t\tbuttons = this.s.buttons;\n\t\t}\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tif ( buttons[i].node === node ) {\n\t\t\t\treturn buttons;\n\t\t\t}\n\n\t\t\tif ( buttons[i].buttons.length ) {\n\t\t\t\tvar ret = this._nodeToHost( node, buttons[i].buttons );\n\n\t\t\t\tif ( ret ) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Handle a key press - determine if any button's key configured matches\n\t * what was typed and trigger the action if so.\n\t * @param  {string} character The character pressed\n\t * @param  {object} e Key event that triggered this call\n\t * @private\n\t */\n\t_keypress: function ( character, e )\n\t{\n\t\t// Check if this button press already activated on another instance of Buttons\n\t\tif ( e._buttonsHandled ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar run = function ( conf, node ) {\n\t\t\tif ( ! conf.key ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( conf.key === character ) {\n\t\t\t\te._buttonsHandled = true;\n\t\t\t\t$(node).click();\n\t\t\t}\n\t\t\telse if ( $.isPlainObject( conf.key ) ) {\n\t\t\t\tif ( conf.key.key !== character ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( conf.key.shiftKey && ! e.shiftKey ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( conf.key.altKey && ! e.altKey ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( conf.key.ctrlKey && ! e.ctrlKey ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( conf.key.metaKey && ! e.metaKey ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Made it this far - it is good\n\t\t\t\te._buttonsHandled = true;\n\t\t\t\t$(node).click();\n\t\t\t}\n\t\t};\n\n\t\tvar recurse = function ( a ) {\n\t\t\tfor ( var i=0, ien=a.length ; i<ien ; i++ ) {\n\t\t\t\trun( a[i].conf, a[i].node );\n\n\t\t\t\tif ( a[i].buttons.length ) {\n\t\t\t\t\trecurse( a[i].buttons );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\trecurse( this.s.buttons );\n\t},\n\n\t/**\n\t * Remove a key from the key listener for this instance (to be used when a\n\t * button is removed)\n\t * @param  {object} conf Button configuration\n\t * @private\n\t */\n\t_removeKey: function ( conf )\n\t{\n\t\tif ( conf.key ) {\n\t\t\tvar character = $.isPlainObject( conf.key ) ?\n\t\t\t\tconf.key.key :\n\t\t\t\tconf.key;\n\n\t\t\t// Remove only one character, as multiple buttons could have the\n\t\t\t// same listening key\n\t\t\tvar a = this.s.listenKeys.split('');\n\t\t\tvar idx = $.inArray( character, a );\n\t\t\ta.splice( idx, 1 );\n\t\t\tthis.s.listenKeys = a.join('');\n\t\t}\n\t},\n\n\t/**\n\t * Resolve a button configuration\n\t * @param  {string|function|object} conf Button config to resolve\n\t * @return {object} Button configuration\n\t * @private\n\t */\n\t_resolveExtends: function ( conf )\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar i, ien;\n\t\tvar toConfObject = function ( base ) {\n\t\t\tvar loop = 0;\n\n\t\t\t// Loop until we have resolved to a button configuration, or an\n\t\t\t// array of button configurations (which will be iterated\n\t\t\t// separately)\n\t\t\twhile ( ! $.isPlainObject(base) && ! Array.isArray(base) ) {\n\t\t\t\tif ( base === undefined ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( typeof base === 'function' ) {\n\t\t\t\t\tbase = base( dt, conf );\n\n\t\t\t\t\tif ( ! base ) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( typeof base === 'string' ) {\n\t\t\t\t\tif ( ! _dtButtons[ base ] ) {\n\t\t\t\t\t\treturn {html: base}\n\t\t\t\t\t}\n\n\t\t\t\t\tbase = _dtButtons[ base ];\n\t\t\t\t}\n\n\t\t\t\tloop++;\n\t\t\t\tif ( loop > 30 ) {\n\t\t\t\t\t// Protect against misconfiguration killing the browser\n\t\t\t\t\tthrow 'Buttons: Too many iterations';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn Array.isArray( base ) ?\n\t\t\t\tbase :\n\t\t\t\t$.extend( {}, base );\n\t\t};\n\n\t\tconf = toConfObject( conf );\n\n\t\twhile ( conf && conf.extend ) {\n\t\t\t// Use `toConfObject` in case the button definition being extended\n\t\t\t// is itself a string or a function\n\t\t\tif ( ! _dtButtons[ conf.extend ] ) {\n\t\t\t\tthrow 'Cannot extend unknown button type: '+conf.extend;\n\t\t\t}\n\n\t\t\tvar objArray = toConfObject( _dtButtons[ conf.extend ] );\n\t\t\tif ( Array.isArray( objArray ) ) {\n\t\t\t\treturn objArray;\n\t\t\t}\n\t\t\telse if ( ! objArray ) {\n\t\t\t\t// This is a little brutal as it might be possible to have a\n\t\t\t\t// valid button without the extend, but if there is no extend\n\t\t\t\t// then the host button would be acting in an undefined state\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Stash the current class name\n\t\t\tvar originalClassName = objArray.className;\n\n\t\t\tif (conf.config !== undefined && objArray.config !== undefined) {\n\t\t\t\tconf.config = $.extend({}, objArray.config, conf.config)\n\t\t\t}\n\n\t\t\tconf = $.extend( {}, objArray, conf );\n\n\t\t\t// The extend will have overwritten the original class name if the\n\t\t\t// `conf` object also assigned a class, but we want to concatenate\n\t\t\t// them so they are list that is combined from all extended buttons\n\t\t\tif ( originalClassName && conf.className !== originalClassName ) {\n\t\t\t\tconf.className = originalClassName+' '+conf.className;\n\t\t\t}\n\n\t\t\t// Buttons to be added to a collection  -gives the ability to define\n\t\t\t// if buttons should be added to the start or end of a collection\n\t\t\tvar postfixButtons = conf.postfixButtons;\n\t\t\tif ( postfixButtons ) {\n\t\t\t\tif ( ! conf.buttons ) {\n\t\t\t\t\tconf.buttons = [];\n\t\t\t\t}\n\n\t\t\t\tfor ( i=0, ien=postfixButtons.length ; i<ien ; i++ ) {\n\t\t\t\t\tconf.buttons.push( postfixButtons[i] );\n\t\t\t\t}\n\n\t\t\t\tconf.postfixButtons = null;\n\t\t\t}\n\n\t\t\tvar prefixButtons = conf.prefixButtons;\n\t\t\tif ( prefixButtons ) {\n\t\t\t\tif ( ! conf.buttons ) {\n\t\t\t\t\tconf.buttons = [];\n\t\t\t\t}\n\n\t\t\t\tfor ( i=0, ien=prefixButtons.length ; i<ien ; i++ ) {\n\t\t\t\t\tconf.buttons.splice( i, 0, prefixButtons[i] );\n\t\t\t\t}\n\n\t\t\t\tconf.prefixButtons = null;\n\t\t\t}\n\n\t\t\t// Although we want the `conf` object to overwrite almost all of\n\t\t\t// the properties of the object being extended, the `extend`\n\t\t\t// property should come from the object being extended\n\t\t\tconf.extend = objArray.extend;\n\t\t}\n\n\t\treturn conf;\n\t},\n\n\t/**\n\t * Display (and replace if there is an existing one) a popover attached to a button\n\t * @param {string|node} content Content to show\n\t * @param {DataTable.Api} hostButton DT API instance of the button\n\t * @param {object} inOpts Options (see object below for all options)\n\t */\n\t_popover: function ( content, hostButton, inOpts, e ) {\n\t\tvar dt = hostButton;\n\t\tvar buttonsSettings = this.c;\n\t\tvar closed = false;\n\t\tvar options = $.extend( {\n\t\t\talign: 'button-left', // button-right, dt-container, split-left, split-right\n\t\t\tautoClose: false,\n\t\t\tbackground: true,\n\t\t\tbackgroundClassName: 'dt-button-background',\n\t\t\tcontentClassName: buttonsSettings.dom.collection.className,\n\t\t\tcollectionLayout: '',\n\t\t\tcollectionTitle: '',\n\t\t\tdropup: false,\n\t\t\tfade: 400,\n\t\t\tpopoverTitle: '',\n\t\t\trightAlignClassName: 'dt-button-right',\n\t\t\tsplitRightAlignClassName: 'dt-button-split-right',\n\t\t\tsplitLeftAlignClassName: 'dt-button-split-left',\n\t\t\ttag: buttonsSettings.dom.collection.tag\n\t\t}, inOpts );\n\n\t\tvar hostNode = hostButton.node();\n\n\t\tvar close = function () {\n\t\t\tclosed = true;\n\n\t\t\t_fadeOut(\n\t\t\t\t$('.dt-button-collection'),\n\t\t\t\toptions.fade,\n\t\t\t\tfunction () {\n\t\t\t\t\t$(this).detach();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t$(dt.buttons( '[aria-haspopup=\"true\"][aria-expanded=\"true\"]' ).nodes())\n\t\t\t\t.attr('aria-expanded', 'false');\n\n\t\t\t$('div.dt-button-background').off( 'click.dtb-collection' );\n\t\t\tButtons.background( false, options.backgroundClassName, options.fade, hostNode );\n\n\t\t\t$('body').off( '.dtb-collection' );\n\t\t\tdt.off( 'buttons-action.b-internal' );\n\t\t\tdt.off( 'destroy' );\n\t\t};\n\n\t\tif (content === false) {\n\t\t\tclose();\n\t\t}\n\n\t\tvar existingExpanded = $(dt.buttons( '[aria-haspopup=\"true\"][aria-expanded=\"true\"]' ).nodes());\n\t\tif ( existingExpanded.length ) {\n\t\t\thostNode = existingExpanded.eq(0);\n\n\t\t\tclose();\n\t\t}\n\n\t\tvar display = $('<div/>')\n\t\t\t.addClass('dt-button-collection')\n\t\t\t.addClass(options.collectionLayout)\n\t\t\t.addClass(options.splitAlignClass)\n\t\t\t.css('display', 'none');\n\n\t\tcontent = $(content)\n\t\t\t.addClass(options.contentClassName)\n\t\t\t.attr('role', 'menu')\n\t\t\t.appendTo(display);\n\n\t\thostNode.attr( 'aria-expanded', 'true' );\n\n\t\tif ( hostNode.parents('body')[0] !== document.body ) {\n\t\t\thostNode = document.body.lastChild;\n\t\t}\n\n\t\tif ( options.popoverTitle ) {\n\t\t\tdisplay.prepend('<div class=\"dt-button-collection-title\">'+options.popoverTitle+'</div>');\n\t\t}\n\t\telse if ( options.collectionTitle ) {\n\t\t\tdisplay.prepend('<div class=\"dt-button-collection-title\">'+options.collectionTitle+'</div>');\n\t\t}\n\n\t\t_fadeIn( display.insertAfter( hostNode ), options.fade );\n\n\t\tvar tableContainer = $( hostButton.table().container() );\n\t\tvar position = display.css( 'position' );\n\n\t\tif ( options.align === 'dt-container' ) {\n\t\t\thostNode = hostNode.parent();\n\t\t\tdisplay.css('width', tableContainer.width());\n\t\t}\n\n\t\t// Align the popover relative to the DataTables container\n\t\t// Useful for wide popovers such as SearchPanes\n\t\tif (position === 'absolute') {\n\t\t\t// Align relative to the host button\n\t\t\tvar hostPosition = hostNode.position();\n\t\t\tvar buttonPosition = $(hostButton.node()).position();\n\n\t\t\tdisplay.css( {\n\t\t\t\ttop: $($(hostButton[0].node).parent()[0]).hasClass('dt-buttons')\n\t\t\t\t\t? buttonPosition.top + hostNode.outerHeight()\n\t\t\t\t\t: hostPosition.top + hostNode.outerHeight(),\n\t\t\t\tleft: hostPosition.left\n\t\t\t} );\n\n\t\t\t// calculate overflow when positioned beneath\n\t\t\tvar collectionHeight = display.outerHeight();\n\t\t\tvar tableBottom = tableContainer.offset().top + tableContainer.height();\n\t\t\tvar listBottom = buttonPosition.top + hostNode.outerHeight() + collectionHeight;\n\t\t\tvar bottomOverflow = listBottom - tableBottom;\n\n\t\t\t// calculate overflow when positioned above\n\t\t\tvar listTop = buttonPosition.top - collectionHeight;\n\t\t\tvar tableTop = tableContainer.offset().top;\n\t\t\tvar topOverflow = tableTop - listTop;\n\n\t\t\t// if bottom overflow is larger, move to the top because it fits better, or if dropup is requested\n\t\t\tvar moveTop = buttonPosition.top - collectionHeight - 5;\n\t\t\tif ( (bottomOverflow > topOverflow || options.dropup) && -moveTop < tableTop ) {\n\t\t\t\tdisplay.css( 'top', moveTop);\n\t\t\t}\n\n\t\t\t// Get the size of the container (left and width - and thus also right)\n\t\t\tvar tableLeft = tableContainer.offset().left;\n\t\t\tvar tableWidth = tableContainer.width();\n\t\t\tvar tableRight = tableLeft + tableWidth;\n\n\t\t\t// Get the size of the popover (left and width - and ...)\n\t\t\tvar popoverLeft = display.offset().left;\n\t\t\tvar popoverWidth = display.outerWidth();\n\n\t\t\t// Foundations display dom element has a width of 0 - the true width is within the child\n\t\t\tif (popoverWidth === 0) {\n\t\t\t\tif (display.children().length > 0) {\n\t\t\t\t\tpopoverWidth = $(display.children()[0]).outerWidth();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar popoverRight = popoverLeft + popoverWidth;\n\n\t\t\t// Get the size of the host buttons (left and width - and ...)\n\t\t\tvar buttonsLeft = hostNode.offset().left;\n\t\t\tvar buttonsWidth = hostNode.outerWidth()\n\t\t\tvar buttonsRight = buttonsLeft + buttonsWidth;\n\n\t\t\tif (\n\t\t\t\tdisplay.hasClass( options.rightAlignClassName ) ||\n\t\t\t\tdisplay.hasClass( options.leftAlignClassName ) ||\n\t\t\t\tdisplay.hasClass( options.splitAlignClass ) ||\n\t\t\t\toptions.align === 'dt-container'\n\t\t\t){\n\t\t\t\t// default to the other buttons values\n\t\t\t\tvar splitButtonLeft = buttonsLeft;\n\t\t\t\tvar splitButtonWidth = buttonsWidth;\n\t\t\t\tvar splitButtonRight = buttonsRight;\n\n\t\t\t\t// If the button is a split button then need to calculate some more values\n\t\t\t\tif (hostNode.hasClass('dt-btn-split-wrapper') && hostNode.children('button.dt-btn-split-drop').length > 0) {\n\t\t\t\t\tsplitButtonLeft = hostNode.children('button.dt-btn-split-drop').offset().left;\n\t\t\t\t\tsplitButtonWidth = hostNode.children('button.dt-btn-split-drop').outerWidth();\n\t\t\t\t\tsplitButtonRight = splitButtonLeft + splitButtonWidth;\n\t\t\t\t}\n\t\t\t\t// You've then got all the numbers you need to do some calculations and if statements,\n\t\t\t\t//  so we can do some quick JS maths and apply it only once\n\t\t\t\t// If it has the right align class OR the buttons are right aligned OR the button container is floated right,\n\t\t\t\t//  then calculate left position for the popover to align the popover to the right hand\n\t\t\t\t//  side of the button - check to see if the left of the popover is inside the table container.\n\t\t\t\t// If not, move the popover so it is, but not more than it means that the popover is to the right of the table container\n\t\t\t\tvar popoverShuffle = 0;\n\t\t\t\tif ( display.hasClass( options.rightAlignClassName )) {\n\t\t\t\t\tpopoverShuffle = buttonsRight - popoverRight;\n\t\t\t\t\tif(tableLeft > (popoverLeft + popoverShuffle)){\n\t\t\t\t\t\tvar leftGap = tableLeft - (popoverLeft + popoverShuffle);\n\t\t\t\t\t\tvar rightGap = tableRight - (popoverRight + popoverShuffle);\n\t\t\n\t\t\t\t\t\tif(leftGap > rightGap){\n\t\t\t\t\t\t\tpopoverShuffle += rightGap; \n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpopoverShuffle += leftGap;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( display.hasClass( options.splitRightAlignClassName )) {\n\t\t\t\t\tpopoverShuffle = splitButtonRight - popoverRight;\n\t\t\t\t\tif(tableLeft > (popoverLeft + popoverShuffle)){\n\t\t\t\t\t\tvar leftGap = tableLeft - (popoverLeft + popoverShuffle);\n\t\t\t\t\t\tvar rightGap = tableRight - (popoverRight + popoverShuffle);\n\t\t\n\t\t\t\t\t\tif(leftGap > rightGap){\n\t\t\t\t\t\t\tpopoverShuffle += rightGap; \n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpopoverShuffle += leftGap;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( display.hasClass( options.splitLeftAlignClassName )) {\n\t\t\t\t\tpopoverShuffle = splitButtonLeft - popoverLeft;\n\n\t\t\t\t\tif(tableRight < (popoverRight + popoverShuffle) || tableLeft > (popoverLeft + popoverShuffle)){\n\t\t\t\t\t\tvar leftGap = tableLeft - (popoverLeft + popoverShuffle);\n\t\t\t\t\t\tvar rightGap = tableRight - (popoverRight + popoverShuffle);\n\t\n\t\t\t\t\t\tif(leftGap > rightGap ){\n\t\t\t\t\t\t\tpopoverShuffle += rightGap;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpopoverShuffle += leftGap;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// else attempt to left align the popover to the button. Similar to above, if the popover's right goes past the table container's right,\n\t\t\t\t//  then move it back, but not so much that it goes past the left of the table container\n\t\t\t\telse {\n\t\t\t\t\tpopoverShuffle = tableLeft - popoverLeft;\n\t\n\t\t\t\t\tif(tableRight < (popoverRight + popoverShuffle)){\n\t\t\t\t\t\tvar leftGap = tableLeft - (popoverLeft + popoverShuffle);\n\t\t\t\t\t\tvar rightGap = tableRight - (popoverRight + popoverShuffle);\n\t\n\t\t\t\t\t\tif(leftGap > rightGap ){\n\t\t\t\t\t\t\tpopoverShuffle += rightGap;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpopoverShuffle += leftGap;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tdisplay.css('left', display.position().left + popoverShuffle);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar top = hostNode.offset().top\n\t\t\t\tvar popoverShuffle = 0;\n\n\t\t\t\tpopoverShuffle = options.align === 'button-right'\n\t\t\t\t\t? buttonsRight - popoverRight\n\t\t\t\t\t: buttonsLeft - popoverLeft;\n\n\t\t\t\tdisplay.css('left', display.position().left + popoverShuffle);\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\t\telse {\n\t\t\t// Fix position - centre on screen\n\t\t\tvar top = display.height() / 2;\n\t\t\tif ( top > $(window).height() / 2 ) {\n\t\t\t\ttop = $(window).height() / 2;\n\t\t\t}\n\n\t\t\tdisplay.css( 'marginTop', top*-1 );\n\t\t}\n\n\t\tif ( options.background ) {\n\t\t\tButtons.background( true, options.backgroundClassName, options.fade, hostNode );\n\t\t}\n\n\t\t// This is bonkers, but if we don't have a click listener on the\n\t\t// background element, iOS Safari will ignore the body click\n\t\t// listener below. An empty function here is all that is\n\t\t// required to make it work...\n\t\t$('div.dt-button-background').on( 'click.dtb-collection', function () {} );\n\n\t\tif ( options.autoClose ) {\n\t\t\tsetTimeout( function () {\n\t\t\t\tdt.on( 'buttons-action.b-internal', function (e, btn, dt, node) {\n\t\t\t\t\tif ( node[0] === hostNode[0] ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tclose();\n\t\t\t\t} );\n\t\t\t}, 0);\n\t\t}\n\t\t\n\t\t$(display).trigger('buttons-popover.dt');\n\n\n\t\tdt.on('destroy', close);\n\n\t\tsetTimeout(function() {\n\t\t\tclosed = false;\n\t\t\t$('body')\n\t\t\t\t.on( 'click.dtb-collection', function (e) {\n\t\t\t\t\tif (closed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// andSelf is deprecated in jQ1.8, but we want 1.7 compat\n\t\t\t\t\tvar back = $.fn.addBack ? 'addBack' : 'andSelf';\n\t\t\t\t\tvar parent = $(e.target).parent()[0];\n\t\n\t\t\t\t\tif (( ! $(e.target).parents()[back]().filter( content ).length  && !$(parent).hasClass('dt-buttons')) || $(e.target).hasClass('dt-button-background')) {\n\t\t\t\t\t\tclose();\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t\t.on( 'keyup.dtb-collection', function (e) {\n\t\t\t\t\tif ( e.keyCode === 27 ) {\n\t\t\t\t\t\tclose();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, 0);\n\t}\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Statics\n */\n\n/**\n * Show / hide a background layer behind a collection\n * @param  {boolean} Flag to indicate if the background should be shown or\n *   hidden \n * @param  {string} Class to assign to the background\n * @static\n */\nButtons.background = function ( show, className, fade, insertPoint ) {\n\tif ( fade === undefined ) {\n\t\tfade = 400;\n\t}\n\tif ( ! insertPoint ) {\n\t\tinsertPoint = document.body;\n\t}\n\n\tif ( show ) {\n\t\t_fadeIn(\n\t\t\t$('<div/>')\n\t\t\t\t.addClass( className )\n\t\t\t\t.css( 'display', 'none' )\n\t\t\t\t.insertAfter( insertPoint ),\n\t\t\tfade\n\t\t);\n\t}\n\telse {\n\t\t_fadeOut(\n\t\t\t$('div.'+className),\n\t\t\tfade,\n\t\t\tfunction () {\n\t\t\t\t$(this)\n\t\t\t\t\t.removeClass( className )\n\t\t\t\t\t.remove();\n\t\t\t}\n\t\t);\n\t}\n};\n\n/**\n * Instance selector - select Buttons instances based on an instance selector\n * value from the buttons assigned to a DataTable. This is only useful if\n * multiple instances are attached to a DataTable.\n * @param  {string|int|array} Instance selector - see `instance-selector`\n *   documentation on the DataTables site\n * @param  {array} Button instance array that was attached to the DataTables\n *   settings object\n * @return {array} Buttons instances\n * @static\n */\nButtons.instanceSelector = function ( group, buttons )\n{\n\tif ( group === undefined || group === null ) {\n\t\treturn $.map( buttons, function ( v ) {\n\t\t\treturn v.inst;\n\t\t} );\n\t}\n\n\tvar ret = [];\n\tvar names = $.map( buttons, function ( v ) {\n\t\treturn v.name;\n\t} );\n\n\t// Flatten the group selector into an array of single options\n\tvar process = function ( input ) {\n\t\tif ( Array.isArray( input ) ) {\n\t\t\tfor ( var i=0, ien=input.length ; i<ien ; i++ ) {\n\t\t\t\tprocess( input[i] );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif ( typeof input === 'string' ) {\n\t\t\tif ( input.indexOf( ',' ) !== -1 ) {\n\t\t\t\t// String selector, list of names\n\t\t\t\tprocess( input.split(',') );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// String selector individual name\n\t\t\t\tvar idx = $.inArray( input.trim(), names );\n\n\t\t\t\tif ( idx !== -1 ) {\n\t\t\t\t\tret.push( buttons[ idx ].inst );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if ( typeof input === 'number' ) {\n\t\t\t// Index selector\n\t\t\tret.push( buttons[ input ].inst );\n\t\t}\n\t};\n\t\n\tprocess( group );\n\n\treturn ret;\n};\n\n/**\n * Button selector - select one or more buttons from a selector input so some\n * operation can be performed on them.\n * @param  {array} Button instances array that the selector should operate on\n * @param  {string|int|node|jQuery|array} Button selector - see\n *   `button-selector` documentation on the DataTables site\n * @return {array} Array of objects containing `inst` and `idx` properties of\n *   the selected buttons so you know which instance each button belongs to.\n * @static\n */\nButtons.buttonSelector = function ( insts, selector )\n{\n\tvar ret = [];\n\tvar nodeBuilder = function ( a, buttons, baseIdx ) {\n\t\tvar button;\n\t\tvar idx;\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tbutton = buttons[i];\n\n\t\t\tif ( button ) {\n\t\t\t\tidx = baseIdx !== undefined ?\n\t\t\t\t\tbaseIdx+i :\n\t\t\t\t\ti+'';\n\n\t\t\t\ta.push( {\n\t\t\t\t\tnode: button.node,\n\t\t\t\t\tname: button.conf.name,\n\t\t\t\t\tidx:  idx\n\t\t\t\t} );\n\n\t\t\t\tif ( button.buttons ) {\n\t\t\t\t\tnodeBuilder( a, button.buttons, idx+'-' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tvar run = function ( selector, inst ) {\n\t\tvar i, ien;\n\t\tvar buttons = [];\n\t\tnodeBuilder( buttons, inst.s.buttons );\n\n\t\tvar nodes = $.map( buttons, function (v) {\n\t\t\treturn v.node;\n\t\t} );\n\n\t\tif ( Array.isArray( selector ) || selector instanceof $ ) {\n\t\t\tfor ( i=0, ien=selector.length ; i<ien ; i++ ) {\n\t\t\t\trun( selector[i], inst );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif ( selector === null || selector === undefined || selector === '*' ) {\n\t\t\t// Select all\n\t\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\t\tret.push( {\n\t\t\t\t\tinst: inst,\n\t\t\t\t\tnode: buttons[i].node\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\telse if ( typeof selector === 'number' ) {\n\t\t\t// Main button index selector\n\t\t\tret.push( {\n\t\t\t\tinst: inst,\n\t\t\t\tnode: inst.s.buttons[ selector ].node\n\t\t\t} );\n\t\t}\n\t\telse if ( typeof selector === 'string' ) {\n\t\t\tif ( selector.indexOf( ',' ) !== -1 ) {\n\t\t\t\t// Split\n\t\t\t\tvar a = selector.split(',');\n\n\t\t\t\tfor ( i=0, ien=a.length ; i<ien ; i++ ) {\n\t\t\t\t\trun( a[i].trim(), inst );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( selector.match( /^\\d+(\\-\\d+)*$/ ) ) {\n\t\t\t\t// Sub-button index selector\n\t\t\t\tvar indexes = $.map( buttons, function (v) {\n\t\t\t\t\treturn v.idx;\n\t\t\t\t} );\n\n\t\t\t\tret.push( {\n\t\t\t\t\tinst: inst,\n\t\t\t\t\tnode: buttons[ $.inArray( selector, indexes ) ].node\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse if ( selector.indexOf( ':name' ) !== -1 ) {\n\t\t\t\t// Button name selector\n\t\t\t\tvar name = selector.replace( ':name', '' );\n\n\t\t\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( buttons[i].name === name ) {\n\t\t\t\t\t\tret.push( {\n\t\t\t\t\t\t\tinst: inst,\n\t\t\t\t\t\t\tnode: buttons[i].node\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// jQuery selector on the nodes\n\t\t\t\t$( nodes ).filter( selector ).each( function () {\n\t\t\t\t\tret.push( {\n\t\t\t\t\t\tinst: inst,\n\t\t\t\t\t\tnode: this\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\telse if ( typeof selector === 'object' && selector.nodeName ) {\n\t\t\t// Node selector\n\t\t\tvar idx = $.inArray( selector, nodes );\n\n\t\t\tif ( idx !== -1 ) {\n\t\t\t\tret.push( {\n\t\t\t\t\tinst: inst,\n\t\t\t\t\tnode: nodes[ idx ]\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t};\n\n\n\tfor ( var i=0, ien=insts.length ; i<ien ; i++ ) {\n\t\tvar inst = insts[i];\n\n\t\trun( selector, inst );\n\t}\n\n\treturn ret;\n};\n\n/**\n * Default function used for formatting output data.\n * @param {*} str Data to strip\n */\nButtons.stripData = function ( str, config ) {\n\tif ( typeof str !== 'string' ) {\n\t\treturn str;\n\t}\n\n\t// Always remove script tags\n\tstr = str.replace( /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '' );\n\n\t// Always remove comments\n\tstr = str.replace( /<!\\-\\-.*?\\-\\->/g, '' );\n\n\tif ( ! config || config.stripHtml ) {\n\t\tstr = str.replace( /<[^>]*>/g, '' );\n\t}\n\n\tif ( ! config || config.trim ) {\n\t\tstr = str.replace( /^\\s+|\\s+$/g, '' );\n\t}\n\n\tif ( ! config || config.stripNewlines ) {\n\t\tstr = str.replace( /\\n/g, ' ' );\n\t}\n\n\tif ( ! config || config.decodeEntities ) {\n\t\t_exportTextarea.innerHTML = str;\n\t\tstr = _exportTextarea.value;\n\t}\n\n\treturn str;\n};\n\n\n/**\n * Buttons defaults. For full documentation, please refer to the docs/option\n * directory or the DataTables site.\n * @type {Object}\n * @static\n */\nButtons.defaults = {\n\tbuttons: [ 'copy', 'excel', 'csv', 'pdf', 'print' ],\n\tname: 'main',\n\ttabIndex: 0,\n\tdom: {\n\t\tcontainer: {\n\t\t\ttag: 'div',\n\t\t\tclassName: 'dt-buttons'\n\t\t},\n\t\tcollection: {\n\t\t\ttag: 'div',\n\t\t\tclassName: ''\n\t\t},\n\t\tbutton: {\n\t\t\ttag: 'button',\n\t\t\tclassName: 'dt-button',\n\t\t\tactive: 'active',\n\t\t\tdisabled: 'disabled'\n\t\t},\n\t\tbuttonLiner: {\n\t\t\ttag: 'span',\n\t\t\tclassName: ''\n\t\t},\n\t\tsplit: {\n\t\t\ttag: 'div',\n\t\t\tclassName: 'dt-button-split',\n\t\t},\n\t\tsplitWrapper: {\n\t\t\ttag: 'div',\n\t\t\tclassName: 'dt-btn-split-wrapper',\n\t\t},\n\t\tsplitDropdown: {\n\t\t\ttag: 'button',\n\t\t\ttext: '&#x25BC;',\n\t\t\tclassName: 'dt-btn-split-drop',\n\t\t\talign: 'split-right',\n\t\t\tsplitAlignClass: 'dt-button-split-left'\n\t\t},\n\t\tsplitDropdownButton: {\n\t\t\ttag: 'button',\n\t\t\tclassName: 'dt-btn-split-drop-button dt-button',\n\t\t},\n\t\tsplitCollection: {\n\t\t\ttag: 'div',\n\t\t\tclassName: 'dt-button-split-collection',\n\t\t}\n\t}\n};\n\n/**\n * Version information\n * @type {string}\n * @static\n */\nButtons.version = '2.0.1';\n\n\n$.extend( _dtButtons, {\n\tcollection: {\n\t\ttext: function ( dt ) {\n\t\t\treturn dt.i18n( 'buttons.collection', 'Collection' );\n\t\t},\n\t\tclassName: 'buttons-collection',\n\t\tinit: function ( dt, button, config ) {\n\t\t\tbutton.attr( 'aria-expanded', false );\n\t\t},\n\t\taction: function ( e, dt, button, config ) {\n\t\t\tif ( config._collection.parents('body').length ) {\n\t\t\t\tthis.popover(false, config);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.popover(config._collection, config);\n\t\t\t}\n\t\t},\n\t\tattr: {\n\t\t\t'aria-haspopup': true\n\t\t}\n\t\t// Also the popover options, defined in Buttons.popover\n\t},\n\tsplit: {\n\t\ttext: function ( dt ) {\n\t\t\treturn dt.i18n( 'buttons.split', 'Split' );\n\t\t},\n\t\tclassName: 'buttons-split',\n\t\tinit: function ( dt, button, config ) {\n\t\t\treturn button.attr( 'aria-expanded', false );\n\t\t},\n\t\taction: function ( e, dt, button, config ) {\n\t\t\tthis.popover(config._collection, config);\n\t\t},\n\t\tattr: {\n\t\t\t'aria-haspopup': true\n\t\t}\n\t\t// Also the popover options, defined in Buttons.popover\n\t},\n\tcopy: function ( dt, conf ) {\n\t\tif ( _dtButtons.copyHtml5 ) {\n\t\t\treturn 'copyHtml5';\n\t\t}\n\t},\n\tcsv: function ( dt, conf ) {\n\t\tif ( _dtButtons.csvHtml5 && _dtButtons.csvHtml5.available( dt, conf ) ) {\n\t\t\treturn 'csvHtml5';\n\t\t}\n\t},\n\texcel: function ( dt, conf ) {\n\t\tif ( _dtButtons.excelHtml5 && _dtButtons.excelHtml5.available( dt, conf ) ) {\n\t\t\treturn 'excelHtml5';\n\t\t}\n\t},\n\tpdf: function ( dt, conf ) {\n\t\tif ( _dtButtons.pdfHtml5 && _dtButtons.pdfHtml5.available( dt, conf ) ) {\n\t\t\treturn 'pdfHtml5';\n\t\t}\n\t},\n\tpageLength: function ( dt ) {\n\t\tvar lengthMenu = dt.settings()[0].aLengthMenu;\n\t\tvar vals = [];\n\t\tvar lang = [];\n\t\tvar text = function ( dt ) {\n\t\t\treturn dt.i18n( 'buttons.pageLength', {\n\t\t\t\t\"-1\": 'Show all rows',\n\t\t\t\t_:    'Show %d rows'\n\t\t\t}, dt.page.len() );\n\t\t};\n\n\t\t// Support for DataTables 1.x 2D array\n\t\tif (Array.isArray( lengthMenu[0] )) {\n\t\t\tvals = lengthMenu[0];\n\t\t\tlang = lengthMenu[1];\n\t\t}\n\t\telse {\n\t\t\tfor (var i=0 ; i<lengthMenu.length ; i++) {\n\t\t\t\tvar option = lengthMenu[i];\n\n\t\t\t\t// Support for DataTables 2 object in the array\n\t\t\t\tif ($.isPlainObject(option)) {\n\t\t\t\t\tvals.push(option.value);\n\t\t\t\t\tlang.push(option.label);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvals.push(option);\n\t\t\t\t\tlang.push(option);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\textend: 'collection',\n\t\t\ttext: text,\n\t\t\tclassName: 'buttons-page-length',\n\t\t\tautoClose: true,\n\t\t\tbuttons: $.map( vals, function ( val, i ) {\n\t\t\t\treturn {\n\t\t\t\t\ttext: lang[i],\n\t\t\t\t\tclassName: 'button-page-length',\n\t\t\t\t\taction: function ( e, dt ) {\n\t\t\t\t\t\tdt.page.len( val ).draw();\n\t\t\t\t\t},\n\t\t\t\t\tinit: function ( dt, node, conf ) {\n\t\t\t\t\t\tvar that = this;\n\t\t\t\t\t\tvar fn = function () {\n\t\t\t\t\t\t\tthat.active( dt.page.len() === val );\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tdt.on( 'length.dt'+conf.namespace, fn );\n\t\t\t\t\t\tfn();\n\t\t\t\t\t},\n\t\t\t\t\tdestroy: function ( dt, node, conf ) {\n\t\t\t\t\t\tdt.off( 'length.dt'+conf.namespace );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t} ),\n\t\t\tinit: function ( dt, node, conf ) {\n\t\t\t\tvar that = this;\n\t\t\t\tdt.on( 'length.dt'+conf.namespace, function () {\n\t\t\t\t\tthat.text( conf.text );\n\t\t\t\t} );\n\t\t\t},\n\t\t\tdestroy: function ( dt, node, conf ) {\n\t\t\t\tdt.off( 'length.dt'+conf.namespace );\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables API\n *\n * For complete documentation, please refer to the docs/api directory or the\n * DataTables site\n */\n\n// Buttons group and individual button selector\nDataTable.Api.register( 'buttons()', function ( group, selector ) {\n\t// Argument shifting\n\tif ( selector === undefined ) {\n\t\tselector = group;\n\t\tgroup = undefined;\n\t}\n\n\tthis.selector.buttonGroup = group;\n\n\tvar res = this.iterator( true, 'table', function ( ctx ) {\n\t\tif ( ctx._buttons ) {\n\t\t\treturn Buttons.buttonSelector(\n\t\t\t\tButtons.instanceSelector( group, ctx._buttons ),\n\t\t\t\tselector\n\t\t\t);\n\t\t}\n\t}, true );\n\n\tres._groupSelector = group;\n\treturn res;\n} );\n\n// Individual button selector\nDataTable.Api.register( 'button()', function ( group, selector ) {\n\t// just run buttons() and truncate\n\tvar buttons = this.buttons( group, selector );\n\n\tif ( buttons.length > 1 ) {\n\t\tbuttons.splice( 1, buttons.length );\n\t}\n\n\treturn buttons;\n} );\n\n// Active buttons\nDataTable.Api.registerPlural( 'buttons().active()', 'button().active()', function ( flag ) {\n\tif ( flag === undefined ) {\n\t\treturn this.map( function ( set ) {\n\t\t\treturn set.inst.active( set.node );\n\t\t} );\n\t}\n\n\treturn this.each( function ( set ) {\n\t\tset.inst.active( set.node, flag );\n\t} );\n} );\n\n// Get / set button action\nDataTable.Api.registerPlural( 'buttons().action()', 'button().action()', function ( action ) {\n\tif ( action === undefined ) {\n\t\treturn this.map( function ( set ) {\n\t\t\treturn set.inst.action( set.node );\n\t\t} );\n\t}\n\n\treturn this.each( function ( set ) {\n\t\tset.inst.action( set.node, action );\n\t} );\n} );\n\n// Collection control\nDataTable.Api.registerPlural( 'buttons().collectionRebuild()', 'button().collectionRebuild()', function ( buttons ) {\n\treturn this.each( function ( set ) {\n\t\tfor(var i = 0; i < buttons.length; i++) {\n\t\t\tif(typeof buttons[i] === 'object') {\n\t\t\t\tbuttons[i].parentConf = set;\n\t\t\t}\n\t\t}\n\t\tset.inst.collectionRebuild( set.node, buttons );\n\t} );\n} );\n\n// Enable / disable buttons\nDataTable.Api.register( ['buttons().enable()', 'button().enable()'], function ( flag ) {\n\treturn this.each( function ( set ) {\n\t\tset.inst.enable( set.node, flag );\n\t} );\n} );\n\n// Disable buttons\nDataTable.Api.register( ['buttons().disable()', 'button().disable()'], function () {\n\treturn this.each( function ( set ) {\n\t\tset.inst.disable( set.node );\n\t} );\n} );\n\n// Get button nodes\nDataTable.Api.registerPlural( 'buttons().nodes()', 'button().node()', function () {\n\tvar jq = $();\n\n\t// jQuery will automatically reduce duplicates to a single entry\n\t$( this.each( function ( set ) {\n\t\tjq = jq.add( set.inst.node( set.node ) );\n\t} ) );\n\n\treturn jq;\n} );\n\n// Get / set button processing state\nDataTable.Api.registerPlural( 'buttons().processing()', 'button().processing()', function ( flag ) {\n\tif ( flag === undefined ) {\n\t\treturn this.map( function ( set ) {\n\t\t\treturn set.inst.processing( set.node );\n\t\t} );\n\t}\n\n\treturn this.each( function ( set ) {\n\t\tset.inst.processing( set.node, flag );\n\t} );\n} );\n\n// Get / set button text (i.e. the button labels)\nDataTable.Api.registerPlural( 'buttons().text()', 'button().text()', function ( label ) {\n\tif ( label === undefined ) {\n\t\treturn this.map( function ( set ) {\n\t\t\treturn set.inst.text( set.node );\n\t\t} );\n\t}\n\n\treturn this.each( function ( set ) {\n\t\tset.inst.text( set.node, label );\n\t} );\n} );\n\n// Trigger a button's action\nDataTable.Api.registerPlural( 'buttons().trigger()', 'button().trigger()', function () {\n\treturn this.each( function ( set ) {\n\t\tset.inst.node( set.node ).trigger( 'click' );\n\t} );\n} );\n\n// Button resolver to the popover\nDataTable.Api.register( 'button().popover()', function (content, options) {\n\treturn this.map( function ( set ) {\n\t\treturn set.inst._popover( content, this.button(this[0].node), options );\n\t} );\n} );\n\n// Get the container elements\nDataTable.Api.register( 'buttons().containers()', function () {\n\tvar jq = $();\n\tvar groupSelector = this._groupSelector;\n\n\t// We need to use the group selector directly, since if there are no buttons\n\t// the result set will be empty\n\tthis.iterator( true, 'table', function ( ctx ) {\n\t\tif ( ctx._buttons ) {\n\t\t\tvar insts = Buttons.instanceSelector( groupSelector, ctx._buttons );\n\n\t\t\tfor ( var i=0, ien=insts.length ; i<ien ; i++ ) {\n\t\t\t\tjq = jq.add( insts[i].container() );\n\t\t\t}\n\t\t}\n\t} );\n\n\treturn jq;\n} );\n\nDataTable.Api.register( 'buttons().container()', function () {\n\t// API level of nesting is `buttons()` so we can zip into the containers method\n\treturn this.containers().eq(0);\n} );\n\n// Add a new button\nDataTable.Api.register( 'button().add()', function ( idx, conf ) {\n\tvar ctx = this.context;\n\n\t// Don't use `this` as it could be empty - select the instances directly\n\tif ( ctx.length ) {\n\t\tvar inst = Buttons.instanceSelector( this._groupSelector, ctx[0]._buttons );\n\n\t\tif ( inst.length ) {\n\t\t\tinst[0].add( conf, idx );\n\t\t}\n\t}\n\n\treturn this.button( this._groupSelector, idx );\n} );\n\n// Destroy the button sets selected\nDataTable.Api.register( 'buttons().destroy()', function () {\n\tthis.pluck( 'inst' ).unique().each( function ( inst ) {\n\t\tinst.destroy();\n\t} );\n\n\treturn this;\n} );\n\n// Remove a button\nDataTable.Api.registerPlural( 'buttons().remove()', 'buttons().remove()', function () {\n\tthis.each( function ( set ) {\n\t\tset.inst.remove( set.node );\n\t} );\n\n\treturn this;\n} );\n\n// Information box that can be used by buttons\nvar _infoTimer;\nDataTable.Api.register( 'buttons.info()', function ( title, message, time ) {\n\tvar that = this;\n\n\tif ( title === false ) {\n\t\tthis.off('destroy.btn-info');\n\t\t_fadeOut(\n\t\t\t$('#datatables_buttons_info'),\n\t\t\t400,\n\t\t\tfunction () {\n\t\t\t\t$(this).remove();\n\t\t\t}\n\t\t);\n\t\tclearTimeout( _infoTimer );\n\t\t_infoTimer = null;\n\n\t\treturn this;\n\t}\n\n\tif ( _infoTimer ) {\n\t\tclearTimeout( _infoTimer );\n\t}\n\n\tif ( $('#datatables_buttons_info').length ) {\n\t\t$('#datatables_buttons_info').remove();\n\t}\n\n\ttitle = title ? '<h2>'+title+'</h2>' : '';\n\n\t_fadeIn(\n\t\t$('<div id=\"datatables_buttons_info\" class=\"dt-button-info\"/>')\n\t\t\t.html( title )\n\t\t\t.append( $('<div/>')[ typeof message === 'string' ? 'html' : 'append' ]( message ) )\n\t\t\t.css( 'display', 'none' )\n\t\t\t.appendTo( 'body' )\n\t);\n\n\tif ( time !== undefined && time !== 0 ) {\n\t\t_infoTimer = setTimeout( function () {\n\t\t\tthat.buttons.info( false );\n\t\t}, time );\n\t}\n\n\tthis.on('destroy.btn-info', function () {\n\t\tthat.buttons.info(false);\n\t});\n\n\treturn this;\n} );\n\n// Get data from the table for export - this is common to a number of plug-in\n// buttons so it is included in the Buttons core library\nDataTable.Api.register( 'buttons.exportData()', function ( options ) {\n\tif ( this.context.length ) {\n\t\treturn _exportData( new DataTable.Api( this.context[0] ), options );\n\t}\n} );\n\n// Get information about the export that is common to many of the export data\n// types (DRY)\nDataTable.Api.register( 'buttons.exportInfo()', function ( conf ) {\n\tif ( ! conf ) {\n\t\tconf = {};\n\t}\n\n\treturn {\n\t\tfilename: _filename( conf ),\n\t\ttitle: _title( conf ),\n\t\tmessageTop: _message(this, conf.message || conf.messageTop, 'top'),\n\t\tmessageBottom: _message(this, conf.messageBottom, 'bottom')\n\t};\n} );\n\n\n\n/**\n * Get the file name for an exported file.\n *\n * @param {object}\tconfig Button configuration\n * @param {boolean} incExtension Include the file name extension\n */\nvar _filename = function ( config )\n{\n\t// Backwards compatibility\n\tvar filename = config.filename === '*' && config.title !== '*' && config.title !== undefined && config.title !== null && config.title !== '' ?\n\t\tconfig.title :\n\t\tconfig.filename;\n\n\tif ( typeof filename === 'function' ) {\n\t\tfilename = filename();\n\t}\n\n\tif ( filename === undefined || filename === null ) {\n\t\treturn null;\n\t}\n\n\tif ( filename.indexOf( '*' ) !== -1 ) {\n\t\tfilename = filename.replace( '*', $('head > title').text() ).trim();\n\t}\n\n\t// Strip characters which the OS will object to\n\tfilename = filename.replace(/[^a-zA-Z0-9_\\u00A1-\\uFFFF\\.,\\-_ !\\(\\)]/g, \"\");\n\n\tvar extension = _stringOrFunction( config.extension );\n\tif ( ! extension ) {\n\t\textension = '';\n\t}\n\n\treturn filename + extension;\n};\n\n/**\n * Simply utility method to allow parameters to be given as a function\n *\n * @param {undefined|string|function} option Option\n * @return {null|string} Resolved value\n */\nvar _stringOrFunction = function ( option )\n{\n\tif ( option === null || option === undefined ) {\n\t\treturn null;\n\t}\n\telse if ( typeof option === 'function' ) {\n\t\treturn option();\n\t}\n\treturn option;\n};\n\n/**\n * Get the title for an exported file.\n *\n * @param {object} config\tButton configuration\n */\nvar _title = function ( config )\n{\n\tvar title = _stringOrFunction( config.title );\n\n\treturn title === null ?\n\t\tnull : title.indexOf( '*' ) !== -1 ?\n\t\t\ttitle.replace( '*', $('head > title').text() || 'Exported data' ) :\n\t\t\ttitle;\n};\n\nvar _message = function ( dt, option, position )\n{\n\tvar message = _stringOrFunction( option );\n\tif ( message === null ) {\n\t\treturn null;\n\t}\n\n\tvar caption = $('caption', dt.table().container()).eq(0);\n\tif ( message === '*' ) {\n\t\tvar side = caption.css( 'caption-side' );\n\t\tif ( side !== position ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn caption.length ?\n\t\t\tcaption.text() :\n\t\t\t'';\n\t}\n\n\treturn message;\n};\n\n\n\n\nvar _exportTextarea = $('<textarea/>')[0];\nvar _exportData = function ( dt, inOpts )\n{\n\tvar config = $.extend( true, {}, {\n\t\trows:           null,\n\t\tcolumns:        '',\n\t\tmodifier:       {\n\t\t\tsearch: 'applied',\n\t\t\torder:  'applied'\n\t\t},\n\t\torthogonal:     'display',\n\t\tstripHtml:      true,\n\t\tstripNewlines:  true,\n\t\tdecodeEntities: true,\n\t\ttrim:           true,\n\t\tformat:         {\n\t\t\theader: function ( d ) {\n\t\t\t\treturn Buttons.stripData( d, config );\n\t\t\t},\n\t\t\tfooter: function ( d ) {\n\t\t\t\treturn Buttons.stripData( d, config );\n\t\t\t},\n\t\t\tbody: function ( d ) {\n\t\t\t\treturn Buttons.stripData( d, config );\n\t\t\t}\n\t\t},\n\t\tcustomizeData: null\n\t}, inOpts );\n\n\tvar header = dt.columns( config.columns ).indexes().map( function (idx) {\n\t\tvar el = dt.column( idx ).header();\n\t\treturn config.format.header( el.innerHTML, idx, el );\n\t} ).toArray();\n\n\tvar footer = dt.table().footer() ?\n\t\tdt.columns( config.columns ).indexes().map( function (idx) {\n\t\t\tvar el = dt.column( idx ).footer();\n\t\t\treturn config.format.footer( el ? el.innerHTML : '', idx, el );\n\t\t} ).toArray() :\n\t\tnull;\n\t\n\t// If Select is available on this table, and any rows are selected, limit the export\n\t// to the selected rows. If no rows are selected, all rows will be exported. Specify\n\t// a `selected` modifier to control directly.\n\tvar modifier = $.extend( {}, config.modifier );\n\tif ( dt.select && typeof dt.select.info === 'function' && modifier.selected === undefined ) {\n\t\tif ( dt.rows( config.rows, $.extend( { selected: true }, modifier ) ).any() ) {\n\t\t\t$.extend( modifier, { selected: true } )\n\t\t}\n\t}\n\n\tvar rowIndexes = dt.rows( config.rows, modifier ).indexes().toArray();\n\tvar selectedCells = dt.cells( rowIndexes, config.columns );\n\tvar cells = selectedCells\n\t\t.render( config.orthogonal )\n\t\t.toArray();\n\tvar cellNodes = selectedCells\n\t\t.nodes()\n\t\t.toArray();\n\n\tvar columns = header.length;\n\tvar rows = columns > 0 ? cells.length / columns : 0;\n\tvar body = [];\n\tvar cellCounter = 0;\n\n\tfor ( var i=0, ien=rows ; i<ien ; i++ ) {\n\t\tvar row = [ columns ];\n\n\t\tfor ( var j=0 ; j<columns ; j++ ) {\n\t\t\trow[j] = config.format.body( cells[ cellCounter ], i, j, cellNodes[ cellCounter ] );\n\t\t\tcellCounter++;\n\t\t}\n\n\t\tbody[i] = row;\n\t}\n\n\tvar data = {\n\t\theader: header,\n\t\tfooter: footer,\n\t\tbody:   body\n\t};\n\n\tif ( config.customizeData ) {\n\t\tconfig.customizeData( data );\n\t}\n\n\treturn data;\n};\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables interface\n */\n\n// Attach to DataTables objects for global access\n$.fn.dataTable.Buttons = Buttons;\n$.fn.DataTable.Buttons = Buttons;\n\n\n\n// DataTables creation - check if the buttons have been defined for this table,\n// they will have been if the `B` option was used in `dom`, otherwise we should\n// create the buttons instance here so they can be inserted into the document\n// using the API. Listen for `init` for compatibility with pre 1.10.10, but to\n// be removed in future.\n$(document).on( 'init.dt plugin-init.dt', function (e, settings) {\n\tif ( e.namespace !== 'dt' ) {\n\t\treturn;\n\t}\n\n\tvar opts = settings.oInit.buttons || DataTable.defaults.buttons;\n\n\tif ( opts && ! settings._buttons ) {\n\t\tnew Buttons( settings, opts ).container();\n\t}\n} );\n\nfunction _init ( settings, options ) {\n\tvar api = new DataTable.Api( settings );\n\tvar opts = options\n\t\t? options\n\t\t: api.init().buttons || DataTable.defaults.buttons;\n\n\treturn new Buttons( api, opts ).container();\n}\n\n// DataTables `dom` feature option\nDataTable.ext.feature.push( {\n\tfnInit: _init,\n\tcFeature: \"B\"\n} );\n\n// DataTables 2 layout feature\nif ( DataTable.ext.features ) {\n\tDataTable.ext.features.register( 'buttons', _init );\n}\n\n\nreturn Buttons;\n}));\n"]},"metadata":{},"sourceType":"script"}