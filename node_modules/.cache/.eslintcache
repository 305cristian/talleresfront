[{"C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\index.js":"1","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\App.js":"2","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\Navigation.js":"3","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\AdminTalleres.js":"4","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\P.js":"5","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\Presentacion.js":"6","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\AdminAreas.js":"7","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\ListTalleres.js":"8","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\ListAreas.js":"9","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\Breadcrumb_nav.js":"10","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\AdminUsers.js":"11","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\Evaluacion.js":"12","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\libraries\\back.js":"13","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\Login.js":"14","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\Culminado.js":"15","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\Footer.js":"16","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\AdminResultados.js":"17","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\setting\\server_firebase.js":"18"},{"size":337,"mtime":1629503333986,"results":"19","hashOfConfig":"20"},{"size":1925,"mtime":1629530380437,"results":"21","hashOfConfig":"20"},{"size":7325,"mtime":1629515066227,"results":"22","hashOfConfig":"20"},{"size":42636,"mtime":1629557639177,"results":"23","hashOfConfig":"20"},{"size":233,"mtime":1616968636414,"results":"24","hashOfConfig":"20"},{"size":4351,"mtime":1629739635874,"results":"25","hashOfConfig":"20"},{"size":12241,"mtime":1629734930712,"results":"26","hashOfConfig":"20"},{"size":9897,"mtime":1629734763529,"results":"27","hashOfConfig":"20"},{"size":4981,"mtime":1629734622168,"results":"28","hashOfConfig":"20"},{"size":527,"mtime":1617243707080,"results":"29","hashOfConfig":"20"},{"size":15407,"mtime":1629954463798,"results":"30","hashOfConfig":"20"},{"size":18714,"mtime":1629955518076,"results":"31","hashOfConfig":"20"},{"size":153,"mtime":1629736270344,"results":"32","hashOfConfig":"20"},{"size":5131,"mtime":1626821283658,"results":"33","hashOfConfig":"20"},{"size":2646,"mtime":1626647553414,"results":"34","hashOfConfig":"20"},{"size":655,"mtime":1626807583868,"results":"35","hashOfConfig":"20"},{"size":4646,"mtime":1626894473862,"results":"36","hashOfConfig":"20"},{"size":1076,"mtime":1629504405129,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"ohsq4t",{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"41"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"41"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"41"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"41"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"41"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"41"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"41"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"41"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"41"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\index.js",["90","91"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport firebase from '../src/setting/server_firebase';\nimport App from './App';\nimport Login from './components/Login'\n\n\nReactDOM.render(\n//        React.StrictMode\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n",["92","93"],"C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\App.js",["94","95","96"],"import React, {Component} from'react';\nimport {render}from'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {BrowserRouter, Route, Switch} from'react-router-dom'\nimport Navigation from './components/Navigation';\nimport Breadcrumb_nav from './components/Breadcrumb_nav';\nimport ListTalleres from './components/ListTalleres';\nimport ListAreas from './components/ListAreas';\nimport AdminTalleres from './components/AdminTalleres';\nimport Presentacion from './components/Presentacion'\nimport Culminado from './components/Culminado'\nimport AdminAreas from './components/AdminAreas'\nimport AdminUsers from './components/AdminUsers'\nimport AdminResultados from './components/AdminResultados'\nimport Evaluacion from './components/Evaluacion'\nimport Login from './components/Login'\nimport Footer from './components/Footer'\n\n\n\n        class App extends Component {\n\n    render() {\n        return (\n                <BrowserRouter>   \n                \n                    <Switch>                  \n                    <Route path=\"/listTalleres/:id_ar\" component={ListTalleres}/>\n                    <Route path=\"/adminAreas\" component={AdminAreas}/>\n                    <Route path=\"/presentacion/:id\" component={Presentacion}/>\n                    <Route path=\"/adminTask\" component={AdminTalleres}/>    \n                    <Route path=\"/culminado/:id/:fecha\" component={Culminado}/>\n                    <Route path=\"/adminUsers/\" component={AdminUsers}/>\n                    <Route path=\"/adminResultados/\" component={AdminResultados}/>\n                    <Route path=\"/evaluacion/:id\" component={Evaluacion}/>\n                    <Route path=\"/home\" component={ListAreas}/>\n                    <Route path=\"/\" render={() => <Login name=\"Login\" />}/>\n                    </Switch>\n                    <Footer/>\n                \n                </BrowserRouter>\n\n                )\n    }\n\n}\n;\n\n\nexport default App;\n\n\n","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\Navigation.js",["97","98","99","100","101","102","103","104","105"],"import React, {Component}from 'react';\r\nimport{Link} from'react-router-dom';\r\nimport {render}from'react-dom';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faHeadset, faUserTie, faFeatherAlt} from '@fortawesome/free-solid-svg-icons';\r\nimport Cookies from 'universal-cookie';\r\nimport {Modal, Button, Dropdown, DropdownToggle, DropdownMenu, DropdownItem}from'reactstrap';\r\n\r\n\r\nconst cookies = new Cookies();\r\nconst {REACT_APP_HOST,REACT_APP_PATCH} = process.env;\r\n\r\nexport default class Navigation extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            modalopen: false,\r\n            dropdownOpen: false\r\n        }\r\n    }\r\n\r\n    modalShow() {\r\n        this.setState({modalopen: true})\r\n    }\r\n    hideModal() {\r\n        this.setState({modalopen: false})\r\n    }\r\n \r\n    toggle() {\r\n        this.state.dropdownOpen?this.setState({dropdownOpen:false}) :this.setState({dropdownOpen:true})\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!cookies.get('nombre')) {\r\n            window.location.href = '/'\r\n        }\r\n\r\n    }\r\n    cerrar_session() {\r\n        cookies.remove('id', {path: '/'});\r\n        cookies.remove('nombre', {path: '/'});\r\n        cookies.remove('apellido', {path: '/'});\r\n        cookies.remove('user', {path: '/'});\r\n        cookies.remove('rol', {path: '/'});\r\n        cookies.remove('cedula', {path: '/'});\r\n        cookies.remove('image', {path: '/'});\r\n        window.location.href = '/';\r\n    }\r\n    \r\n   hidden(){\r\n      const menu =document.querySelector('#navbarNav');\r\n      menu.classList.toggle('show')\r\n\r\n  }\r\n\r\n    render() {\r\n        return(\r\n                <div>\r\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-dark\">\r\n                        <Link className=\"navbar-brand text-white\" to=\"/home\"><FontAwesomeIcon icon={faFeatherAlt}/> TALLERES BY CC</Link>\r\n                        <button id=\"btn\" className=\"navbar-toggler bg-white\" type=\"button\" onClick={()=>{this.hidden()}} data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div className=\" collapse navbar-collapse\" id=\"navbarNav\">\r\n                            <ul className=\" navbar-nav\">\r\n                            \r\n                                <li className=\"nav-item active\">\r\n                                    <Link className=\"nav-link text-white\" to=\"/home\">Home</Link>\r\n                                </li>\r\n                                \r\n                                {cookies.get('rol')=='ADMINISTRADOR'?\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link text-white\"  to=\"/adminTask\">Talleres</Link>\r\n                                </li>\r\n                                :''}\r\n                                \r\n                                {cookies.get('rol')=='ADMINISTRADOR'?\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link text-white\"  to=\"/adminAreas\">Areas</Link>\r\n                                </li>\r\n                                 :''}\r\n                                 \r\n                                {cookies.get('rol')=='ADMINISTRADOR'?\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link text-white\" to=\"/adminUsers\">Users</Link>\r\n                                </li>\r\n                                 :''}\r\n                                {cookies.get('rol')=='ADMINISTRADOR'?\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link text-white\" to=\"/adminResultados\">Resultados</Link>\r\n                                </li>\r\n                                 :''}\r\n                \r\n                            </ul>\r\n                            <ul className=\"navbar-nav ml-auto\">\r\n                                <FontAwesomeIcon icon={faHeadset} style={{fontSize: 30}}/>\r\n                                <a className=\"mano nav-link support text-white mr-4\" onClick={() => {\r\n                                        this.modalShow()\r\n                                       }}>Soporte</a> \r\n                                       \r\n                                {cookies.get('image')!=='...' ?\r\n                                    <img className='border p-1 mr-1' width='35' height='38' src={`${REACT_APP_PATCH}imguser%2F` + cookies.get('image')+'?alt=media'} alt='Image'/>\r\n                                            :\r\n                                    <FontAwesomeIcon icon={faUserTie}  style={{fontSize: 30}}/>\r\n                                }\r\n                               \r\n                                <Dropdown isOpen={this.state.dropdownOpen} toggle={() => {this.toggle()}}>\r\n                                    <DropdownToggle color='dark' caret >\r\n                                    <span style={{fontSize:12, color:'white'}}>{cookies.get('nombre')} {cookies.get('apellido')} </span>\r\n                                    </DropdownToggle>\r\n                                    <DropdownMenu>\r\n                                       {cookies.get('rol')=='ADMINISTRADOR'? <DropdownItem>Setting</DropdownItem>:''}\r\n                                        <DropdownItem>Help</DropdownItem>\r\n                                        <DropdownItem divider />\r\n                                        <DropdownItem onClick={()=>{this.cerrar_session()}}> Log Out</DropdownItem>\r\n                                        \r\n                                    </DropdownMenu>\r\n                                    \r\n                                </Dropdown>\r\n                \r\n                \r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                    <Modal isOpen={this.state.modalopen}>                      \r\n                        <div className='container row p-2'>\r\n                            <div className='col-md-11' style={{padding: 5}}>\r\n                                <h5 className='pl-3'>Soporte</h5>\r\n                            </div>\r\n                            <div className='col-md-1' style={{padding: 5}}>\r\n                                <Button size='sm' onClick={() => {\r\n                        this.hideModal()\r\n                    }}>X</Button>   \r\n                            </div><hr/>\r\n                        </div>                          \r\n                \r\n                        <div>\r\n                            <div class=\"modal-body border\">\r\n                                <div class=\"container border pt-2\">\r\n                                    <p>\r\n                                        <label>Telefono: 0992094788</label><br/>\r\n                                        <label>Correo: pcris.994@gmail.com</label>\r\n                                    </p>\r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                    </Modal>\r\n                \r\n                </div>\r\n                );\r\n    }\r\n    ;\r\n}\r\n;\r\n","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\AdminTalleres.js",["106","107","108","109","110","111","112","113","114","115","116","117","118","119"],"import React, {Component}from'react';\nimport {render}from'react-dom';\nimport {Table, Button, Container, CustomInput, Modal, ModalHeader, ModalBody, ModalFooter, formGroup, Row, Col}from 'reactstrap';\nimport Swal from 'sweetalert';\nimport axios from 'axios'\nimport P from '../components/P';\nimport { FontAwesomeIcon }from '@fortawesome/react-fontawesome'\nimport { faFileAlt, faEdit, faTrash, faFile, faSave, faSyncAlt, faCheckCircle, faSkull, faClock, faRedo }from '@fortawesome/free-solid-svg-icons'\n//import { faApple} from '@fortawesome/free-brands-svg-icons'\n\nimport Navigation from '../components/Navigation';\nimport Breadcrumb_nav from '../components/Breadcrumb_nav';\n\nimport Cookies from 'universal-cookie';\n\nimport firebase from '../../src/setting/server_firebase';\n\n\n\nconst cookies = new Cookies();\nconst {REACT_APP_HOST} = process.env;\n\nconst validation = data => {\n    const errors = {};\n    if (!data.area_id) {\n        errors.area_id = 'Seleccione el área o cree una nueva';\n    }\n    if (!data.title) {\n        errors.title = 'El campo title es obligatorio';\n    }\n    if (!data.description) {\n        errors.description = 'El campo description es obligatorio';\n    }\n    if (!data.image) {\n        errors.image = 'La imagen es obligatorio';\n    }\n    return errors;\n}\n//Para pintar boton Prueba\nvar prueba_regis = [];\nvar array = [];\n\nvar storage = firebase.app().storage(\"gs://talleres-1b6d0.appspot.com\");\n\n\nclass AdminTalleres extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            description: '',\n            area_id: '',\n            talleres: [],\n            areas: [],\n            _id: '',\n            textButton: 'REGISTRAR',\n            header: 'Insertar Tarea',\n            modalOpen: false,\n            modalEval: false,\n            videoload: false,\n            image: '',\n            img_temp: '',\n            video: '...',\n            video_temp: '',\n            tiempo: '30',\n            intentos: '1',\n            evaluacion:'0',\n            errors: {},\n\n            //modal eval\n            //pregunta\n            taller_id: '',\n            pregunta: '',\n            estadopreg: true,\n            preguntas_taller: [],\n            pregunta_id: '',\n            puntaje: '',\n            btnCreaPreg: 'Crear',\n            _idpreg: '',\n\n            //respuesta\n            pregunta_resp: '',\n            pregunta_taller_id: '',\n            respuesta: '',\n            estadoresp: false,\n            btnCreaResp: 'Crear',\n            respuestas_preg: [],\n            _idresp: '',\n\n            //\n            aux: '',\n            aux_v: ''\n\n        };\n//        this.fileInput = React.createRef();\n\n        this.addTaller = this.addTaller.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleChangeSelect = this.handleChangeSelect.bind(this);\n        this.showModal = this.showModal.bind(this);\n        this.hideModal = this.hideModal.bind(this);\n\n        this.addPregunta = this.addPregunta.bind(this);\n        this.editPregunta = this.editPregunta.bind(this);\n        this.deletePregunta = this.deletePregunta.bind(this);\n\n\n        this.addRespuesta = this.addRespuesta.bind(this);\n    }\n\n    componentDidMount() {\n        this.getTalleres(); //Para que inicie la pantalla de tareas\n        this.getAreas();\n    }\n    getAreas() {\n        axios.get(`${REACT_APP_HOST}/api/areas`).then((response) => {\n            console.log(response.data)\n            this.setState({areas: response.data})\n        })\n    }\n\n    getTalleres() {\n        axios.get(`${REACT_APP_HOST}/api/talleres_ar`).then((response) => {\n//        axios.get(`${REACT_APP_HOST}/api/talleres`).then((response) => {\n            console.log(response.data)\n            this.setState({talleres: response.data})\n\n        })\n    }\n    addTaller(e) {\n        e.preventDefault();\n        const {errors, ...sinErrors} = this.state;\n        const result = validation(sinErrors);\n//        console.log(result);\n\n        this.setState({errors: result});\n        if (!Object.keys(result).length) {\n\n            let datos = new FormData();\n            datos.append('area_id', this.state.area_id);\n            datos.append('title', this.state.title);\n            datos.append('description', this.state.description);\n            datos.append('tiempo', this.state.tiempo);\n            datos.append('intentos', this.state.intentos);\n            datos.append('evaluacion', this.state.evaluacion);\n            \n\n            if (this.state._id && this.state.aux==='') {\n                console.log('modifico');\n                datos.append('image', this.state.image);\n            } else if(this.state._id && this.state.aux.name) {\n                 console.log('modifico imagen');\n                datos.append('image', this.state.image.name);\n            }else{\n                 console.log('guardo');\n                datos.append('image', this.state.image.name); \n            }\n            \n            if (this.state._id && this.state.aux_v==='') {\n                console.log('modifico');\n                datos.append('video', this.state.video);\n            } else if(this.state._id && this.state.aux_v.name) {\n                 console.log('modifico video');\n               datos.append('video', this.state.video.name);\n            }else{\n                 datos.append('video', this.state.video);\n            }\n\n\n            \n            if (this.state._id) {\n                if (this.state.aux.name) {\n                    this.deleteImage2();\n                    this.uploadImage2();\n                }\n                if (this.state.aux_v.name) {                   \n                      this.deleteVideo2();  \n                    this.uploadVideo2();\n                }\n                axios.put(`${REACT_APP_HOST}/api/talleres/` + this.state._id, datos).then(async(data) => {\n                    console.log(data);\n                    Swal({\n                        title: 'Tarea Actualizada',\n                        text: 'ok',\n                        icon: 'success',\n                        timer: 2000,\n                        button: false\n                    });\n                    this.getTalleres();\n                    this.setState({title: '', description: '', tiempo: '30', intentos: '1', _id: '', textButton: 'REGISTRAR', modalOpen: false, image: '', aux:'',aux_v:'',errors: {}});\n                }).catch(err => console.error(err));\n            } else {\n                axios.post(`${REACT_APP_HOST}/api/talleres`, datos).then(async(data) => {\n                    console.log(data);\n                    let cargarimg = await this.uploadImage();\n                    Swal({\n                        title: 'Tarea Registrada',\n                        text: 'ok',\n                        icon: 'success',\n                        timer: 2000,\n                        button: false\n                    });\n                    this.getTalleres()\n                    this.setState({title: '', description: '', tiempo: '30', intentos: '1', image: '', aux:'', aux_v:''});\n                })\n                        .catch(err => console.error(err));\n            }\n        }\n    }\n    deleteTaller(id, image, video) {\n        this.setState({img_temp: image});\n        this.setState({video_temp: video});\n        Swal({\n            title: 'Esta seguro de eliminar la tarea',\n            text: ' La tarea se eliminara definitivamente',\n            icon: 'warning',\n            buttons: ['Cancelar', 'Sí'],\n            dangerMode: true\n        }).then((value) => {\n            if (value) {\n                axios.delete(`${REACT_APP_HOST}/api/talleres/` + id).then(async(response) => {\n//                axios.delete('http://localhost:4000/api/talleres/' + id).then((response) => {\n                    console.log(response.data);\n                    let eliminarimg = await this.deleteImage();\n                    if (video !== '...') {\n                        let eliminarvideo = await this.deleteVideo();\n                    }\n                    Swal({\n                        title: 'Tarea eliminada',\n                        icon: 'success',\n                        timer: 1000,\n                        button: false\n                    });\n                    this.getTalleres();\n                });\n            }\n        });\n    }\n\n    editTaller(id) {\n        axios.get(`${REACT_APP_HOST}/api/talleres/` + id).then((response) => {\n            console.log(response.data);\n            this.setState({\n                title: response.data.title,\n                description: response.data.description,\n                tiempo: response.data.tiempo,\n                intentos: response.data.intentos,\n                evaluacion: response.data.evaluacion,\n                area_id: response.data.area_id,\n                image: response.data.image,\n                img_temp: response.data.image,\n                video: response.data.video,\n                video_temp: response.data.video,\n                _id: response.data._id,\n                textButton: 'ACTUALIZAR',\n                header: 'Actualizar Tarea',\n                videoload: true,\n\n            });\n            console.log(this.state.image);\n            console.log(this.state.video);\n        })\n    }\n    hideModal() {\n        this.setState({title: '', description: '', tiempo: '', intentos: '', _id: '', textButton: 'REGISTRAR', header: 'Insertar Tarea', modalOpen: false, image: null, errors: {}, videoload: false});\n    }\n    showModal() {\n        this.setState({modalOpen: true});\n    }\n    showModalEval(idtaller) {\n        this.setState({modalEval: true, taller_id: idtaller, pregunta_taller_id: idtaller});\n        this.getPreguntasXtaller(idtaller);\n\n    }\n\n    hideModalEval() {\n        this.setState({modalEval: false, idtaller: '', pregunta: '', estadopreg: true, _idpreg: '', pregunta_resp: '', respuesta: '', estadoresp: false, _idresp: ''});\n    }\n\n    handleChange(e) {\n        console.log(e.target.value);\n        if (e.target.type === 'checkbox') {\n            var value = e.target.checked;\n            var name = e.target.name;\n        } else {\n            var {name, value} = e.target;\n        }\n//       \n        this.setState({[name]: value});\n    }\n    handleChangeSelect(e) {\n        console.log(`Seleccionaste ${e.target.value}`);\n        var {name, value} = e.target;\n        this.setState({[name]: value}, () => this.getRespuestas());\n    }\n\n    uploadImage = async() => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`images/imgtaller/${this.state.image.name}`);\n        return await spaceRef.put(this.state.image);\n\n    }\n    uploadImage2 = () => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`images/imgtaller/${this.state.image.name}`);\n        return spaceRef.put(this.state.image);\n\n    }\n    deleteImage = async() => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`images/imgtaller/${this.state.img_temp}`);\n        return await  spaceRef.delete();\n\n    }\n    deleteImage2 = () => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`images/imgtaller/${this.state.img_temp}`);\n        return  spaceRef.delete();\n\n    }\n    uploadVideo2 =() => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`videos/videostaller/${this.state.video.name}`);\n        return spaceRef.put(this.state.video)\n\n    }\n    uploadVideo = async() => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`videos/videostaller/${this.state.video.name}`);\n        return await spaceRef.put(this.state.video)\n\n    }\n    deleteVideo2 = () => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`videos/videostaller/${this.state.video_temp}`);\n        if(this.state.video_temp!=='...'){\n           return  spaceRef.delete();  \n        }\n       \n\n    }\n    deleteVideo = async() => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`videos/videostaller/${this.state.video_temp}`);\n        return await  spaceRef.delete();\n\n    }\n\n    handleImageUpload = (e) => {\n        console.log(e.target.files[0]);\n        this.setState({image: e.target.files[0], aux: e.target.files[0]});\n        console.log(this.state.image)\n    }\n    handleVideoUpload = (e) => {\n        console.log(e.target.files[0]);\n        this.setState({video: e.target.files[0], aux_v:e.target.files[0]});\n        console.log(this.state.video)\n    }\n\n    agregarRespuesta = (e) => {\n\n//Variables\n        var listaResp = document.getElementById('lista');\n        var cont = listaResp.children.length + 1;\n\n        var newResp = document.createElement('li');\n        newResp.setAttribute('class', 'list-unstyled');\n\n        //Contenedor de los 2 contenedores\n        var contenedorMain = document.createElement('div');\n        contenedorMain.setAttribute('class', 'row');\n\n        //contenedor del inputText\n        var contenedorText = document.createElement('div');\n        contenedorText.setAttribute('class', 'col-md-9');\n\n        //contenedor del inputCheck\n        var contenedorCheck = document.createElement('div');\n        contenedorCheck.setAttribute('class', 'col-md-1');\n\n        //contenedor del boton remover\n        var contenedorRemover = document.createElement('div');\n        contenedorRemover.setAttribute('class', 'col-md-1');\n\n        //text\n        var inputtextResp = document.createElement('input');\n        inputtextResp.setAttribute('type', 'text');\n        inputtextResp.setAttribute('name', 'respuesta' + cont + '');\n        inputtextResp.setAttribute('class', 'form-control form-control-sm mt-2');\n        inputtextResp.setAttribute('value', 'Respuesta ' + cont + '');\n\n        //checkBox\n        var inputcheckResp = document.createElement('input');\n        inputcheckResp.setAttribute('type', 'checkbox');\n        inputcheckResp.setAttribute('name', 'estadopreg' + cont + '');\n        inputcheckResp.setAttribute('class', 'form-control form-control-sm mt-2');\n\n        //Quitar Respuesta\n        var quitarResp = document.createElement('button');\n        quitarResp.setAttribute('id', 'delete');\n        quitarResp.setAttribute('type', 'button');\n        quitarResp.setAttribute('class', 'btn btn-secondary btn-sm mt-2');\n        quitarResp.innerText = 'X';\n        quitarResp.onclick = function () {\n            //El método Node.removeChild() elimina un nodo hijo del DOM \n            listaResp.removeChild(newResp); //De listaResp que es el elemento padre remuevo newResp que es el elemento hijo\n        }\n\n        contenedorText.appendChild(inputtextResp);\n        contenedorCheck.appendChild(inputcheckResp);\n        contenedorRemover.appendChild(quitarResp);\n\n        contenedorMain.appendChild(contenedorText);\n        contenedorMain.appendChild(contenedorCheck);\n        contenedorMain.appendChild(contenedorRemover);\n\n        newResp.appendChild(contenedorMain);\n        listaResp.appendChild(newResp);\n    }\n\n    addPregunta(e) {\n        e.preventDefault();\n        /**\n         * Uso este metodo de enviar datos, solo en caso de enviar archivos (file,video, img)\n         * let datos = new FormData();\n         //        datos.append('taller_id', this.state.taller_id);\n         //        datos.append('pregunta', this.state.pregunta);\n         //        datos.append('respuesta', this.state.respuesta);\n         //        datos.append('estadopreg', this.state.estadopreg) ;\n         * @type type\n         */\n//        \n        const datos = {\n            taller_id: this.state.taller_id,\n            pregunta: this.state.pregunta,\n            puntaje: this.state.puntaje,\n            estadopreg: this.state.estadopreg\n\n        };\n        if (this.state._idpreg) {\n            axios.put(`${REACT_APP_HOST}/api/preguntas/` + this.state._idpreg, datos).then((response) => {\n                console.log(response.data);\n                Swal({\n                    title: 'Pregunta modificada exitosamente',\n                    text: 'ok',\n                    icon: 'success',\n                    timer: 2000,\n                    button: false\n                });\n                this.getPreguntasXtaller(this.state.taller_id);\n            }).catch(err => console.error(err));\n        } else {\n            axios.post(`${REACT_APP_HOST}/api/preguntas`, datos).then((response) => {\n                console.log(response.data);\n                Swal({\n                    title: 'Pregunta registrada exitosamente',\n                    text: 'ok',\n                    icon: 'success',\n                    timer: 2000,\n                    button: false\n                });\n                this.getPreguntasXtaller(this.state.taller_id);\n            }).catch(err => console.error(err));\n        }\n\n        this.setState({idtaller: '', pregunta: '', puntaje: '', estadopreg: true, _idpreg: '', btnCreaPreg: 'Crear'});\n\n\n    }\n    getPreguntasXtaller(id) {\n        axios.get(`${REACT_APP_HOST}/api/preguntas/` + id).then((response) => {\n            this.setState({preguntas_taller: response.data});\n        });\n    }\n    editPregunta(id_preg) {\n        axios.get(`${REACT_APP_HOST}/api/preguntas/` + this.state.taller_id + '/' + id_preg).then((response) => {\n            this.setState({pregunta: response.data.pregunta, puntaje: response.data.puntaje, _idpreg: response.data._id, estadopreg: response.data.estadopreg, btnCreaPreg: 'Actualizar'});\n        })\n\n    }\n    deletePregunta(id_preg) {\n        Swal({\n            title: 'Esta seguro de eliminar la pregunta',\n            text: ' La pregunta se eliminara definitivamente',\n            icon: 'warning',\n            buttons: ['Cancelar', 'Sí'],\n            dangerMode: true\n        }\n        ).then((value) => {\n            if (value) {\n                axios.delete(`${REACT_APP_HOST}/api/preguntas/` + id_preg+'/'+this.state.taller_id).then((response) => {\n                    if (response.data) {\n                        Swal({\n                            title: 'Pregunta eliminada exitosamente',\n                            text: 'ok',\n                            icon: 'success',\n                            timer: 2000,\n                            button: false\n                        })\n                        this.setState({idtaller: '', pregunta: '', estadopreg: true, _idpreg: ''});\n                        this.getPreguntasXtaller(this.state.taller_id);\n                    }\n\n                })\n\n            }\n        })\n//        alert(id_preg);\n\n    }\n\n    addRespuesta(e) {\n        e.preventDefault();\n        const datos = {\n            pregunta_resp: this.state.pregunta_resp,\n            respuesta: this.state.respuesta,\n            estadoresp: this.state.estadoresp,\n            resp_taller_id: this.state.pregunta_taller_id\n        };\n        if (this.state._idresp) {\n            axios.put(`${REACT_APP_HOST}/api/respuestas/` + this.state._idresp, datos).then((response) => {\n                console.log(response.data);\n                Swal({\n                    title: 'Respuesta Actualizada exitosamente',\n                    text: 'ok',\n                    icon: 'success',\n                    timer: 2000,\n                    button: false\n                });\n                this.getRespuestas();\n                this.setState({respuesta: '', estadoresp: false, _idresp: '', btnCreaResp: 'Crear'});\n            }).catch(err => console.error(err));\n        } else {\n            axios.post(`${REACT_APP_HOST}/api/respuestas`, datos).then((response) => {\n                console.log(response.data);\n                Swal({\n                    title: 'Respuesta registrada exitosamente',\n                    text: 'ok',\n                    icon: 'success',\n                    timer: 2000,\n                    button: false\n                });\n                this.getRespuestas();\n                this.setState({respuesta: '', estadoresp: false, btnCreaResp: 'Crear'});\n            }).catch(err => console.error(err));\n        }\n\n\n\n    }\n    getRespuestas() {\n        axios.get(`${REACT_APP_HOST}/api/respuestas/` + this.state.pregunta_resp + '/' + this.state.taller_id).then((response) => {\n            if (response) {\n                this.setState({respuestas_preg: response.data});\n            } else {\n                Swal({\n                    title: 'No se encontraron respuestas',\n                    icon: 'warning',\n                    timer: 2000,\n                    button: false\n                });\n            }\n\n        });\n\n    }\n\n    editRespuesta(id_resp) {\n        axios.get(`${REACT_APP_HOST}/api/respuestas/` + id_resp).then((response) => {\n            this.setState({btnCreaResp: 'Actualizar', respuesta: response.data.respuesta, estadoresp: response.data.estadoresp, puntaje: response.data.puntaje, pregunta_resp: response.data.pregunta_resp, _idresp: response.data._id});\n        })\n    }\n    deleteRespuesta(id_resp) {\n\n        Swal({\n            title: 'Esta seguro de eliminar la respuesta',\n            text: ' La respuesta se eliminara definitivamente',\n            icon: 'warning',\n            buttons: ['Cancelar', 'Sí'],\n            dangerMode: true\n        }).then((value) => {\n            if (value) {\n                axios.delete(`${REACT_APP_HOST}/api/respuestas/` + id_resp).then((response) => {\n                    if (response.data) {\n                        Swal({\n                            title: 'Respuesta eliminada exitosamente',\n                            text: 'ok',\n                            icon: 'success',\n                            timer: 2000,\n                            button: false\n                        })\n                        this.getRespuestas();\n                        this.setState({respuesta: '', estadoresp: false, _idresp: ''});\n                    }\n                })\n            }\n        })\n    }\n\n  \n    render() {\n\n        const {errors} = this.state;\n        return (\n                <div>\n                    <Navigation />\n                    <div className=\"containerList\">\n                        <br/>\n                        <Button size=\"sm\" color=\"primary\" onClick={this.showModal}><FontAwesomeIcon icon={faFile}/> Nueva Tarea</Button>\n                        <br/>\n                        <br/>\n                        {this.state.talleres.length > 0 ?\n                                    <Table>\n                                        <thead>\n                                            <tr>\n                                                <th>AREA</th>\n                                                <th>TALLER</th>\n                                                <th>DESCRIPCION</th>\n                                                <th><FontAwesomeIcon icon={faClock}/></th>\n                                                <th><FontAwesomeIcon icon={faRedo}/></th>\n                                                <th>IMG_DIR</th>\n                                                <th>VD_DIR</th>\n                                                <th>EVALUAR</th>\n                                                <th>ACCIONES</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                        this.state.talleres.map((data, index) => {\n                                                            return(\n                                                                                <tr key={data._id}>\n                                                                                    <td>{data.talleresArea.title}</td>\n                                                                                    <td>{data.title}</td>\n                                                                                    <td>{data.description}</td>                                                                   \n                                                                                    <td>{data.tiempo} {'min'}</td>                                                                   \n                                                                                    <td>{data.intentos}</td>                                                                   \n                                                                                    <td>{data.image}</td>\n                                                                                    <td>{data.video}</td>\n                                                                                    \n                                                                                    {data.evaluacion === '0' ?\n                                                                                    <td> <Button color=\"info\" size=\"sm\" onClick={() => {\n                                                                                        this.showModalEval(data._id)\n                                                                                                            }}><span>Crear <FontAwesomeIcon icon={faFileAlt}/></span></Button>\n                                                                                    </td>\n                                                                                    :<td> <Button color=\"success\" size=\"sm\" onClick={() => {\n                                                                                        this.showModalEval(data._id)\n                                                                                                            }}><span>Editar <FontAwesomeIcon icon={faCheckCircle}/></span></Button>\n                                                                                    </td>\n                                                                                    }\n                                                                                    <td>\n                                                                                        <Button color=\"warning\" onClick={() => {\n                                                                                        this.showModal();\n                                                                                                                this.editTaller(data._id);\n                                                                                                            }} size=\"sm\"><FontAwesomeIcon icon={faEdit}/></Button>{' '}\n                                                                \n                                                                                        <Button color=\"danger\" onClick={ () => {\n                                                                                        this.deleteTaller(data._id, data.image, data.video)\n                                                                                                            }} size=\"sm\"><FontAwesomeIcon icon={faTrash}/></Button>\n                                                                                    </td>\n                                                                                </tr>\n                                                    )\n                                                        })\n                                            }\n                                        </tbody>\n                                    </Table>\n                            : <h1>No hay talleres registrados</h1>}\n                        <Modal isOpen={this.state.modalOpen}>\n                            <ModalHeader>\n                                <div><h3>{this.state.header}</h3></div>\n                            </ModalHeader>\n                \n                            <ModalBody>\n                                <form onSubmit={this.addTaller} className=\"container\">\n                                    <div className=\"row py-2\">\n                                        <select  name=\"area_id\" onChange={this.handleChange} value={this.state.area_id} className=\"form-control\">\n                                            <option>Seleccione una Area</option>\n                                            {\n                    this.state.areas.map(data => {\n                                                    return(\n                                                                    <option key={data._id} value={data._id}>{data.title}</option>\n                                );\n                                                })\n                                            }\n                                        </select>\n                                        {errors.area_id && <P errors={errors.area_id} />}\n                                    </div>\n                                    <div className=\"row py-2\">\n                                        <input name=\"title\" onChange={this.handleChange} type=\"text\" className=\"form-control form-control-sm\" placeholder=\"Title\" value={this.state.title}/>\n                                        {errors.title && <P errors={errors.title} />}\n                                    </div>\n                \n                                    <div className=\"row py-2\">\n                                        <textarea name=\"description\" onChange={this.handleChange} type=\"text\" className=\"form-control form-control-sm\" placeholder=\"Description\" value={this.state.description}/>\n                                        {errors.description && <P errors={errors.description} />}\n                                    </div>                            \n                \n                                    <div className=\"row py-2\">\n                                        <CustomInput className='form-control form-control-sm' name=\"image\" type=\"file\" onChange={this.handleImageUpload} id=\"image\" label='Seleccione una Imagen' accept=\"image/png, .jpeg, .jpg\"/>\n                                        {errors.image && <P errors={errors.image} />}\n                                    </div>\n                \n                                    {this.state.videoload ?\n                                    <div className=\"row py-2\">\n                                        <CustomInput name=\"video\" type=\"file\" onChange={this.handleVideoUpload} id=\"video\" label='Seleccione una Presentación' accept=\"video/mp4, .vlc, .avi\"/>\n                                    </div>\n                            : <p style={{color: 'blue', fontSize: 12}}>Para cargar una presentacion utilize la opcion Editar</p>\n                                    }\n                                    <div className=\"row py-2 border bg-info\">\n                                        <div className=\"col-md-4 text-center\">\n                                            <p className=\"font-weight-bold\" style={{fontSize: 13}}>Esta sección en caso de evaluación</p>                \n                                        </div>\n                                        <div className=\"col-md-4\">\n                                            <input type=\"number\" name=\"tiempo\" onChange={this.handleChange} value={this.state.tiempo} className=\"form-control form-control-sm\" placeholder=\"Tiempo de eval\"/>\n                \n                                        </div>\n                                        <div className=\"col-md-4\">\n                                            <input type=\"number\" name=\"intentos\" onChange={this.handleChange} value={this.state.intentos} className=\"form-control form-control-sm\" placeholder=\"Intentos eval\"/>\n                \n                                        </div>\n                                    </div>\n                                    <br/>\n                                    <Button size='sm' id=\"btnInsertar\">{this.state.textButton}</Button>{' '}\n                                    <Button size='sm' id=\"btnCancelar\" onClick={this.hideModal} className=\"btn btn-danger\" data-dismiss=\"modal\" aria-hidden=\"true\">CANCELAR</Button>\n                                </form>\n                            </ModalBody>               \n                        </Modal>\n                \n                \n                        <Modal isOpen={this.state.modalEval} size=\"lg\">\n                            <div className='p-2 border'>\n                                <Row>\n                                    <Col xs='11'>\n                                    <h4>Preguntas y Respuestas</h4>\n                                    </Col>\n                                    <Col xs='1'>\n                                    <Button color=\"secondary\" size=\"sm\" onClick={() => {\n                        this.hideModalEval()\n                                        }}>X</Button>\n                                    </Col>\n                                </Row>\n                            </div>               \n                            <ModalBody>\n                                <h6>Registre sus preguntas</h6>\n                                <form onSubmit={this.addPregunta} className=\"container border p-3\">\n                \n                                    <Row>\n                                        <Col xs=\"12\">\n                                        <Row>               \n                                            <Col xs=\"7\">\n                                            <textarea type=\"text\" name=\"pregunta\" onChange={this.handleChange} value={this.state.pregunta} className=\"form-control form-control-sm\" placeholder=\"Ingrese la pregunta\" required/>   \n                                            </Col>\n                                            <Col xs=\"2\">  \n                                            <input type='number' name='puntaje' onChange={this.handleChange} value={this.state.puntaje} className=\"form-control form-control-sm\" placeholder=\"Puntaje\" required/>                             \n                                            </Col>\n                                            <Col xs=\"1\">              \n                                            <input type=\"checkbox\" name=\"estadopreg\" onChange={this.handleChange} checked={this.state.estadopreg} className=\"form-control form-control-sm\"/> \n                                            </Col>                                        \n                                            <Col xs=\"2\">\n                                            <Button size=\"sm\" color=\"primary\"><FontAwesomeIcon icon={faSave}/> {this.state.btnCreaPreg}</Button>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col xs=\"10\" className=\"mt-2\">\n                                            <select  name=\"pregunta_id\" onChange={this.handleChange} value={this.state.pregunta_id} className=\"form-control form-control-sm\">\n                                                <option>Seleccione una Pregunta</option>\n                \n                                                {\n                    this.state.preguntas_taller.map(data => {\n                                                        return(\n                                                                        <option key={data._id} value={data._id}>{data.pregunta} {'    / Puts: '} {data.puntaje}</option>\n                                );\n                                                    })\n                                                }\n                                            </select>                                    \n                                            </Col>                                      \n                                            <Col xs=\"2\"  className=\"mt-2\">                                      \n                                            <Button size=\"sm\" color=\"warning\" onClick={() => {\n                        this.editPregunta(this.state.pregunta_id)\n                                                }}><FontAwesomeIcon icon={faEdit}/></Button>  {' '}\n                                            <Button size=\"sm\" color=\"danger\" onClick={() => {\n                        this.deletePregunta(this.state.pregunta_id)\n                                                }}><FontAwesomeIcon icon={faTrash}/></Button> \n                                            </Col>                                      \n                                        </Row>\n                                        </Col>\n                                    </Row>\n                                </form>\n                \n                                <hr/>\n                                <h6>Registre sus respuestas</h6>\n                                <form onSubmit={this.addRespuesta} className=\"container border p-3\">\n                                    <Row>\n                                        <Col xs=\"12\">                \n                                        <Row>\n                                            <Col xs=\"10\">\n                                            <select  name=\"pregunta_resp\" onChange={this.handleChangeSelect} value={this.state.pregunta_resp} className=\"form-control form-control-sm\">\n                                                <option>Seleccione una Pregunta</option>                                  \n                                                {\n                    this.state.preguntas_taller.map(data => {\n                                                        return(\n                                                                        <option key={data._id} value={data._id}>{data.pregunta}</option>\n                                );\n                                                    })\n                                                }\n                                            </select> \n                                            </Col>\n                                            <Col xs=\"2\">\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"mt-2\">               \n                                            <Col xs=\"9\">\n                                            <input type=\"text\" name=\"respuesta\" onChange={this.handleChange} value={this.state.respuesta} className=\"form-control form-control-sm\" placeholder=\"Ingrese una respuesta\" required/> \n                                            </Col>\n                \n                                            <Col xs=\"1\">              \n                                            <input type=\"checkbox\" name=\"estadoresp\" onChange={this.handleChange} checked={this.state.estadoresp} className=\"form-control form-control-sm\"/> \n                                            </Col>\n                                            <Col xs=\"2\"> \n                                            <Button size=\"sm\" color=\"primary\"><FontAwesomeIcon icon={faSave}/> {this.state.btnCreaResp}</Button>               \n                                            </Col>\n                                        </Row>\n                                        </Col>\n                                    </Row>\n                                </form>\n                                <br/>\n                                <br/>\n                \n                                <Row className=\"container\">\n                                    <Table style={{fontSize: 12}}>\n                                        <thead>\n                                            <tr>\n                                                <th>Pregunta</th>\n                                                <th>Respuestas</th>\n                                                <th>Estado</th>\n                                                <th>Acciones</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                    this.state.respuestas_preg.map(data => {\n                                                    return(\n                                                                    <tr key={data.respuestas._id}>\n                                                                        <td>{data.pregunta}</td>\n                                                                        <td>{data.respuestas.respuesta}</td>\n                                                                        {\n                                                                        data.respuestas.estadoresp === true ?\n                                                                                                                                <td style={{color: 'green'}}><FontAwesomeIcon icon={faCheckCircle}/></td>\n                                                                                :\n                                                                                                                        <td style={{color: 'red'}}><FontAwesomeIcon icon={faSkull}/></td>\n                                                                }\n                                                                <td>\n                                                                    <Button color=\"warning\" onClick={() => {\n\n                                                                                                        this.editRespuesta(data.respuestas._id);\n                                                                                                    }} size=\"sm\"><FontAwesomeIcon icon={faEdit}/></Button>{' '}\n                                        \n                                                                    <Button color=\"danger\" onClick={ () => {\n                                                                            this.deleteRespuesta(data.respuestas._id)\n                                                                                                    }} size=\"sm\"><FontAwesomeIcon icon={faTrash}/></Button>\n                                                                </td>\n                                                                </tr>\n                                )\n                                            })\n                                        }\n                                        </tbody>\n                                    </Table>                \n                                </Row>\n                \n                \n                            </ModalBody>                \n                \n                        </Modal>\n                    </div>\n                </div>\n\n                );\n    }\n\n}\n;\nexport default AdminTalleres;","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\P.js",[],"C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\Presentacion.js",["120","121","122"],"import React, {useState, useEffect} from 'react';\nimport {Container, Row, Col, Button, CardTitle, CardText, Card, CardHeader, CardBody} from 'reactstrap';\nimport ReactPlayer from 'react-player';\nimport{useParams, Link} from 'react-router-dom';\nimport axios from 'axios';\n\nimport Navigation from '../components/Navigation';\nimport Breadcrumb_nav from '../components/Breadcrumb_nav';\n\nimport Cookies from 'universal-cookie';\n\n\n\nconst cookies = new Cookies();\n//import Styles from '../index.css'\n\n\nconst{REACT_APP_HOST, REACT_APP_PATCH_VID} = process.env;\n\nconst styles = {\n    border: {\n        borderStyle: 'groove',\n        color: \"#3c3a2d\",\n        display: 'flex'\n    }\n}\n\nfunction Presentacion() {\n\n    const {id} = useParams();\n    const[taller, getTaller] = useState([]);\n    const[value, setstatusBoton] = useState(false);\n\n    useEffect(() => {\n        if (!cookies.get('nombre')) {\n            window.location.href = '/'\n        }\n        const obtenertaller = () => {\n            axios.get(`${REACT_APP_HOST}/api/talleres/${id}`).then(response => {\n                getTaller(response.data);\n//                console.log(response.data)\n            });\n        }\n        obtenertaller();\n    }, [id]);\n\n\n\n    const evalEnable = (e) => {\n        setstatusBoton(true);\n    }\n    const evalDisable = (e) => {\n        setstatusBoton(false);\n    }\n\n\n\n\n\n    return(\n            <div>\n                <Navigation />\n                <div className=\"containerFluid mt-3 p-2\" >\n                    {taller.video !== '...' ?\n                            <Row>\n                                <Col xs={3} >\n                                <Card>\n                                <CardHeader><div className=\"pl-2\"><CardTitle className=\"font-weight-bold\" tag=\"h5\">{taller.title}</CardTitle></div></CardHeader>\n                                <CardBody><div className=\"pl-2\"><CardText>{taller.description}</CardText></div></CardBody>\n                                <div className=\"pl-2 pb-2 text-center\">\n                                    <Link to={`/evaluacion/${id}`}target=\"_blank\"><Button disabled={!value} color=\"success\">Evaluacion</Button></Link>\n                                </div>\n                                </Card>\n                                </Col>\n                                <Col xs={9}>\n                    \n                                <ReactPlayer\n                                    url={`${REACT_APP_PATCH_VID}videostaller%2F${taller.video}?alt=media`}   \n                                    controls\n                                    width='100%'\n                                    height='100%'    \n                    \n                                    onEnded={evalEnable}\n                                    onPlay={evalDisable}\n                                    />\n                    \n                    \n                                </Col>\n                    \n                    \n                    \n                            </Row>\n                                :\n                            <div className=\"row p-3 d-flex flex-column align-items-center\">\n                                <div className=\"col-md-4\">\n                    \n                                    <Card>\n                                    <CardHeader><div className=\"pl-2\"><CardTitle className=\"font-weight-bold\" tag=\"h5\">{taller.title}</CardTitle></div></CardHeader>\n                                    <CardBody><div className=\"pl-2\"><CardText>{taller.description}</CardText></div></CardBody>\n                                    <div className=\"pl-2 pb-2 text-center\">\n                                        <Link to={`/evaluacion/${id}`}target=\"_blank\"><Button disabled={value} color=\"success\">Evaluacion</Button></Link>\n                                    </div>\n                                    </Card>\n                    \n                                </div><br/>\n                                <div  className=\"col-md-8 text-center\">\n                    \n                                    <h1>No hay Presentacion Registrada</h1>\n                    \n                                </div>\n                    \n                    \n                    \n                            </div>\n                    }\n                </div>\n            </div>\n            )\n\n}\n\nexport default Presentacion;\n\n\n","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\AdminAreas.js",["123","124","125","126","127","128","129","130","131","132"],"import React, {Component}from'react';\nimport {render}from'react-dom';\nimport {Table, Button, Container, CustomInput, Modal, ModalHeader, ModalBody, ModalFooter, formGroup} from 'reactstrap';\nimport Swal from 'sweetalert';\nimport axios from 'axios'\nimport P from '../components/P';\nimport Styles from '../index.css'\n\nimport Navigation from '../components/Navigation';\nimport Breadcrumb_nav from '../components/Breadcrumb_nav';\nimport Cookies from 'universal-cookie';\nimport firebase from '../../src/setting/server_firebase';\nimport { FontAwesomeIcon }from '@fortawesome/react-fontawesome';\nimport {faCheckCircle, faExclamationCircle, faExclamationTriangle}from '@fortawesome/free-solid-svg-icons';\n\nconst cookies = new Cookies();\n\nconst {REACT_APP_HOST} = process.env;\nvar storage = firebase.app().storage(\"gs://talleres-1b6d0.appspot.com\");\n\nconst validation = data => {\n    const errors = {};\n    if (!data.title) {\n        errors.title = 'El campo title es obligatorio';\n    }\n    if (!data.image) {\n        errors.image = 'La imagen es obligatorio';\n    }\n    return errors;\n}\nclass AdminAreas extends Component {\n    constructor() {\n        super();\n        this.state = {\n            title: '',\n            description: '',\n            _id: '',\n            areas: [],\n            textButton: 'REGISTRAR',\n            header: 'Insertar Area',\n            modalOpen: false,\n            img_temp:'',\n            image: '',\n            aux:'',\n            errors: {}\n\n        }\n\n        this.showModal = this.showModal.bind(this);\n        this.hideModal = this.hideModal.bind(this);\n        this.handleChange = this.handleChange.bind(this)\n        this.addArea = this.addArea.bind(this)\n    }\n    componentDidMount() {//Es como el initComponents\n        if (!cookies.get('nombre')) {\n            window.location.href = '/'\n        }\n        this.getAreas();//Para que inicie la pantalla de tareas\n    }\n    getAreas() {\n        axios.get(`${REACT_APP_HOST}/api/areas`).then((response) => {\n            this.setState({areas: response.data})\n            console.log(response.data);\n        })\n    }\n\n    addArea(e) {\n        e.preventDefault();\n\n        const {errors, ...sinErrors} = this.state;\n        const result = validation(sinErrors);\n        this.setState({errors: result});\n\n        if (!Object.keys(result).length) {\n            let datos = new FormData();\n            datos.append('title', this.state.title);\n            datos.append('description', this.state.description);\n//            datos.append('image', this.state.image.name);\n            \n            if (this.state._id && this.state.aux==='') {\n                console.log('modifico');\n                datos.append('image', this.state.image);\n            } else if(this.state._id && this.state.aux.name) {\n                 console.log('modifico imagen');\n                datos.append('image', this.state.image.name);\n            }else{\n                 console.log('guardo');\n                datos.append('image', this.state.image.name); \n            }\n            \n            if (this.state._id) {\n                \n                if (this.state.aux.name) {\n                    this.deleteImage2();\n                    this.uploadImage2();\n                }\n                \n                axios.put(`${REACT_APP_HOST}/api/areas/` + this.state._id, datos).then(async(response) => {\n                  \n                    Swal({\n                        title: 'Tarea Actualizada',\n                        icon: 'success',\n                        timer: 2000,\n                        button: false\n                    });\n                    this.getAreas();\n                    this.setState({title: '', description: '', _id: '', textButton: 'REGISTRAR', modalOpen: false, image: null,aux:'', errors: {}});\n                })\n            } else {\n                axios.post(`${REACT_APP_HOST}/api/areas`, datos).then(async(response) => {\n                    let cargar = await this.uploadImage();\n                    Swal({\n                        title: 'Area registrada',\n                        icon: 'success',\n                        timer: 2000,\n                        button: false\n                    });\n                    this.getAreas();\n                    this.setState({title: '', description: '',aux:'', image: null})\n                })\n            }\n        }\n\n    }\n\n    editArea(id) {\n        axios.get(`${REACT_APP_HOST}/api/areas/` + id).then((response) => {\n            this.setState({\n                title: response.data.title,\n                description: response.data.description,\n                image: response.data.image,\n                img_temp: response.data.image,\n                _id: response.data._id,\n                textButton: 'ACTUALIZAR',\n                header: 'Actualizar Area',\n            })\n            console.log(this.state.image)\n        })\n    }\n\n    deleteArea(id, image) {\n         this.setState({img_temp:image});\n        Swal({\n            title: 'Esta seguro de eliminar el Area',\n            text: ' El area se eliminara definitivamente',\n            icon: 'warning',\n            buttons: ['Cancelar', 'Sí'],\n            dangerMode: true\n        }).then((value) => {\n            if (value) {\n                axios.delete(`${REACT_APP_HOST}/api/areas/` + id).then(async(response) => {\n                    console.log(response.data);\n                     let eliminar = await this.deleteImage();\n                    Swal({\n                        title: 'Area eliminada',\n                        icon: 'success',\n                        timer: 1000,\n                        button: false\n                    });\n                    this.getAreas();\n                });\n            }\n        });\n    }\n\n    showModal() {\n        this.setState({modalOpen: true});\n    }\n    hideModal() {\n        this.setState({title: '', description: '', modalOpen: false, textButton: 'REGISTRAR', header: 'Insertar Area', image: null})\n    }\n\n    handleChange(e) {\n        const{name, value} = e.target;\n        this.setState({[name]: value});\n        console.log(e.target.value);\n    }\n    \n     uploadImage = async() => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`images/imgareas/${this.state.image.name}`);\n        return await spaceRef.put(this.state.image)\n\n    }\n    deleteImage = async() => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`images/imgareas/${this.state.img_temp}`);\n        return await  spaceRef.delete();\n\n    }\n    \n      uploadImage2 = () => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`images/imgareas/${this.state.image.name}`);\n        return spaceRef.put(this.state.image);\n\n    }\n    deleteImage2 = () => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`images/imgareas/${this.state.img_temp}`);\n        return  spaceRef.delete();\n\n    }\n\n\n    handleImageUpload = (e) => {\n        this.setState({image: e.target.files[0],aux: e.target.files[0]});\n        console.log(e.target.files[0]);\n    }\n    \n    \n\n    render() {\n\n        const {errors} = this.state;\n        return (\n                <div>\n                    <Navigation />\n                    <div className=\"containerList\">\n                        <br/>\n                        <Button color=\"primary\" onClick={this.showModal}>Nueva Area</Button>\n                        <br/>\n                        <br/>\n                        {this.state.areas.length > 0 ?\n                                    <Table>\n                                        <thead>\n                                            <tr>\n                                                <th>AREA</th>\n                                                <th>DETALLE</th>\n                                                <th>IMG_DIR</th>\n                                                <th>Acciones</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                        this.state.areas.map(data => {\n                                                            return(\n                                                                <tr key={data._id}>\n                                                                    <td>{data.title}</td>\n                                                                    <td>{data.description}</td>\n                                                                    <td>{data.image}</td>\n                                                                    <td>\n                                                                        <Button color=\"warning\" onClick={() => {\n                                                                                                this.showModal();\n                                                                                                this.editArea(data._id);\n                                                                                                    }}>Edit</Button>{' '}\n                                                \n                                                                        <Button color=\"danger\" onClick={ () => {\n                                                                                                this.deleteArea(data._id,data.image)\n                                                                                                    }}>Delete</Button>\n                                                                    </td>\n                                                                </tr>\n                                                                    )\n                                                        })\n                                            }\n                                        </tbody>\n                                    </Table>\n                                    : <h5 className=\"text-warning\">! Atencion, No se encontraron areas registradas <FontAwesomeIcon icon={faExclamationTriangle}/></h5>}\n                        <Modal isOpen={this.state.modalOpen}>\n                            <ModalHeader>\n                                <div><h3>{this.state.header}</h3></div>\n                            </ModalHeader>\n                \n                            <ModalBody>\n                                <form onSubmit={this.addArea} className=\"container\">\n                                    <div className=\"row\">\n                                        <input name=\"title\" onChange={this.handleChange} type=\"text\" className=\"form-control\" placeholder=\"Title\" value={this.state.title}/>\n                                        {errors.title && <P errors={errors.title} />}\n                                    </div>\n                                    <br/>\n                                    <div className=\"row\">\n                                        <textarea name=\"description\" onChange={this.handleChange} type=\"text\" className=\"form-control\" placeholder=\"Description\" value={this.state.description}/>\n                \n                                    </div>                            \n                                    <br/>\n                                    <div className=\"row\">\n                                        <CustomInput name=\"image\" type=\"file\" onChange={this.handleImageUpload} id=\"image\" label='Seleccione una Imagen' accept=\"image/png, .jpeg, .jpg\"/>\n                                        {errors.image && <P errors={errors.image} />}\n                                    </div>\n                                    <br/>\n                \n                                    <Button id=\"btnInsertar\">{this.state.textButton}</Button>{' '}\n                                    <Button id=\"btnCancelar\" onClick={this.hideModal} className=\"btn btn-danger\" data-dismiss=\"modal\" aria-hidden=\"true\">CANCELAR</Button>\n                                </form>\n                            </ModalBody>               \n                        </Modal>\n                    </div>\n                </div>\n\n                );\n    }\n\n}\n\nexport default  AdminAreas\n","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\ListTalleres.js",["133","134","135","136","137","138","139","140","141","142","143","144","145","146","147"],"import  React, {Component}from'react';\nimport style from '../index.css';\nimport {Table, Button, Container, Modal, ModalHeader, ModalBody, ModalFooter, formGroup, CardTitle, Card, CardBody, CardHeader, CardImg, CardText}from 'reactstrap';\nimport {render}from'react-dom';\nimport axios from 'axios';\nimport{Link, useParams} from'react-router-dom';\n\nimport { FontAwesomeIcon }from '@fortawesome/react-fontawesome'\nimport {faCheckCircle, faExclamationCircle, faExclamationTriangle}from '@fortawesome/free-solid-svg-icons'\n\nimport Navigation from '../components/Navigation';\nimport Breadcrumb_nav from '../components/Breadcrumb_nav';\n\nimport Cookies from 'universal-cookie';\n\n\n\nconst cookies = new Cookies();\nconst{REACT_APP_HOST, REACT_APP_PATCH} = process.env;\n\nconst styles = {\n    div: {\n        padding: 10,\n        textAlign: \"left\",\n\n    }\n\n}\n\nclass ListTalleres extends Component {\n    constructor() {\n        super();\n        this.state = {\n            talleres: [],\n            user_talleres: [],\n            talleres_validados: []\n        }\n\n    }\n\n    componentDidMount() {\n        if (!cookies.get('nombre')) {\n            window.location.href = '/';\n        }\n        this.getTaller();\n    }\n    getTaller() {\n        const{match} = this.props;\n        const id_ar = match.params.id_ar;\n\n        axios.post(`${REACT_APP_HOST}/api/talleres_ar/${id_ar}`).then(response => {\n            this.setState({talleres: response.data});\n            console.log(response.data);\n            this.getUserTaller();\n        });\n\n    }\n\n    getUserTaller() {\n        const id_user = cookies.get('id');\n        axios.get(`${REACT_APP_HOST}/api/user_taller/${id_user}`).then((response) => {\n            this.setState({user_talleres: response.data})\n            console.log(response.data)\n            this.verificarCompletado();\n        })\n\n    }\n\n    verificarCompletado() {\n        /**\n         * Recorro el arreglo de talleres y agarro el primero de la lista\n         * Luego recorro el arreglo de user_talleres y agarro el primero de la lista\n         * Luego Comparo los 2 objetos agarrados taller._id === us_taller.id_taller, y paso el estado a 1, lo cual indica que este taller en este usuario ya esta completado\n         * Luego pregunto si el estado esta en 1 o 0, si esta en 1 quiere decir que la tarea esta completada, procedemos a concatenar\n         * el objeto taller con un objeto adicional el cual tendra el estado del taller y la fecha\n         * */\n\n        var talleresjoin = [];\n\n        this.state.talleres.map((taller, index) => {\n\n            var estado = '0';//Variable clave, indica cuando que taller esta completado, le pasamos de estado 0 a 1 \n            var fecha = '';\n\n            this.state.user_talleres.map((us_taller, i) => {\n                if (taller._id === us_taller.id_taller) {\n\n                    estado = '1'; //Cambiamos el estado a 1 porque este taller ya esta completado\n                    fecha = us_taller.fecha_regis;//Variable adicional solo para la fecha\n                }\n\n            })\n\n            if (estado === '1') {\n                var returnedobj = Object.assign(taller, {estado: '1', fecha: fecha});\n            } else {\n                var returnedobj = Object.assign(taller, {estado: '0'});\n            }\n            talleresjoin.push(returnedobj);\n\n        })\n        this.setState({talleres_validados: talleresjoin})\n\n    }\n\n    render() {\n\n        return (\n                <div className=\"container-fluid\">\n                    <Navigation />\n                      <div className=\"containerFluid2 mt-2 p-5 \">\n                \n                        {this.state.talleres.length > 0 ?\n                                    <div className=\"row\">\n                                        {\n                                                    this.state.talleres_validados.map((taller, index) => (\n                                                                <div className=\"col-md-3\" key={taller._id} style={styles.div}>\n                                                                    {taller.estado === '1' ?\n                                                                                                <Link to={`/culminado/${taller._id}/${taller.fecha}`} style={{color: \"black\", textDecoration: \"none black\"}}>\n                                                                                                <Card className=\"card_taller\">\n                                                                                                <CardHeader>\n                                                                                                <div className=\"row col-md-12\">\n                                                                                                    <div className=\"col-md-9\">\n                                                                                                        <CardTitle className=\"font-weight-bold\" tag=\"h5\">{taller.title}</CardTitle>\n                                                                                                    </div>\n                                                                                                    <div className=\"col-md-2\">\n                                                                                                       <span className=\"badge bg-success text-white text-right\">Completado <FontAwesomeIcon icon={faCheckCircle}/></span>\n                                                                                                    </div>\n                                                                                                </div>\n                                                                                                </CardHeader>\n                                                                                                <CardBody className=\"text-center\">\n                                                                                                    <CardImg className=\"image\" top width=\"100%\" src={`${REACT_APP_PATCH}imgtaller%2F${taller.image}?alt=media`} alt=\"Card image cap\" /> \n                                                                                                    <CardText>{taller.description}</CardText>\n                                                                                \n                                                                                                </CardBody>\n                                                                                                </Card>\n                                                                                                </Link>\n                                                                                            :\n                                                                                                <Link to={`/presentacion/${taller._id}`} style={{color: \"black\", textDecoration: \"none black\"}}>\n                                                                                                <Card className=\"card_taller\">\n                                                                                                <CardHeader>\n                                                                                                <div className=\"row col-md-12\">\n                                                                                                    <div className=\"col-md-9\">\n                                                                                                        <CardTitle className=\"font-weight-bold\" tag=\"h5\">{taller.title}</CardTitle>\n                                                                                                    </div>\n                                                                                                    <div className=\"col-md-2\">\n                                                                                                        <span className=\"badge bg-warning text-white text-right\">En Curso <FontAwesomeIcon icon={faExclamationCircle}/></span>\n                                                                                                    </div>\n                                                                                                </div>\n                                                                                                </CardHeader>\n                                                                                                <CardBody className=\"text-center\">\n                                                                                                    <CardImg className=\"image\" top width=\"100%\" src={`${REACT_APP_PATCH}imgtaller%2F${taller.image}?alt=media`} alt=\"Card image cap\" /> \n                                                                                                    <CardText>{taller.description}</CardText>\n                                                                                \n                                                                                                </CardBody>\n                                                                                                </Card>\n                                                                                                </Link>\n                                                                    }   \n                                                                </div>\n\n                                                                ))\n\n\n                                        }\n                            \n                                    </div>\n\n                                    : <h5 className=\"text-warning\">! Atencion, No hay talleres registrados en esta area <FontAwesomeIcon icon={faExclamationTriangle}/></h5>}\n                    </div>\n                \n           \n                </div>\n                )\n    }\n\n}\nexport default ListTalleres;\n\n\n\n","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\ListAreas.js",["148","149","150","151","152","153","154","155","156","157","158","159"],"import  React, {Component}from'react';\nimport style from '../index.css';\nimport {Table, Button, Container, Modal, ModalHeader, ModalBody, ModalFooter, formGroup, CardTitle, Card, CardBody, CardHeader, CardImg, CardText}from 'reactstrap';\nimport axios from 'axios';\nimport{Link} from'react-router-dom';\nimport {render}from'react-dom';\nimport Navigation from '../components/Navigation';\nimport Breadcrumb_nav from '../components/Breadcrumb_nav';\n\nimport Cookies from 'universal-cookie';\nimport { FontAwesomeIcon }from '@fortawesome/react-fontawesome'\nimport {faChartPie, faStepBackward,faLayerGroup}from '@fortawesome/free-solid-svg-icons'\n\n\nconst cookies = new Cookies();\n//import env from \"react-dotenv\";\nconst{REACT_APP_HOST, REACT_APP_PATCH} = process.env;\n\nconst styles = {\n    div: {\n        padding: 10,\n        textAlign: \"left\",\n\n    } \n\n}\n\nexport default class ListAreas extends Component {\n    constructor() {\n        super();\n        this.state = {\n            areas: []\n        }\n    }\n\n    componentDidMount() {\n        if (!cookies.get('nombre')) {\n            window.location.href = '/'\n        }\n        this.getTalleres();\n    }\n    getTalleres() {\n        axios.get(`${REACT_APP_HOST}/api/areas`).then(response => {\n//      axios.get('http://localhost:4000/api/talleres').then(response => {\n            console.log(response.data)\n            this.setState({areas: response.data})\n\n        })\n\n    }\n\n    render() {\n\n\n        return (\n                <div className=\"container-fluid\">\n                 <Navigation />\n                <div className=\"containerFluid2 mt-2 p-5 \">\n                    <div className=\"row\">\n                    <div className=\"row col-md-9\">\n                \n                        {\n                    this.state.areas.map((area) => (\n                                                <div className=\"col-md-3\" key={area._id} style={styles.div}>\n                                                    <Link to={`/listTalleres/${area._id}`} style={{color: \"black\", textDecoration: \"none black\"}}>\n                                                        <Card className=\"card_taller\">\n                                                        <CardHeader>\n                                                        <div  className=\"row  pl-2\">\n                                                            <div className=\"  col-md-10\">\n                                                                <CardTitle className=\"font-weight-bold\" tag=\"h5\">{area.title} </CardTitle>\n                                                            </div>\n                                                            <div className=\" col-md-2\">\n                                                              <span style={{fontSize: 20, color:'#6c757d'}}><FontAwesomeIcon icon={faLayerGroup}/></span>\n                                                            </div>\n                                                        </div>\n                                                        </CardHeader>\n                                        \n                                                        <CardBody className=\"text-center\">\n                                                            <CardImg className=\"image\" top width=\"100%\" src={`${REACT_APP_PATCH}imgareas%2F${area.image}?alt=media`} alt=\"Card image cap\" /> \n                                                            <CardText>{area.description}</CardText>\n                                                            \n                                                        </CardBody>\n                                                        </Card>\n                                                    </Link>\n                                                </div>\n                                ))\n                        }\n                \n                \n                \n                    </div>\n                    <div className=\"row col-md-3\">\n                        <div className=\"container-fluid pl-4 verticalLine\">\n                             <Card className=\"card_taller\">\n                                                        <CardHeader>\n                                                            <CardTitle className=\"font-weight-bold\" tag=\"h5\">Estadistica <FontAwesomeIcon icon={faChartPie}/></CardTitle>\n                                                        </CardHeader>\n                                        \n                                                        <CardBody className=\"text-center\">\n                                                            <CardText>En Construccion</CardText>\n                                                            \n                                                        </CardBody>\n                                                        </Card>\n                        </div>\n                    </div>\n                    </div>\n                 \n                </div>\n                </div>\n                )\n    }\n}\n\n\n","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\Breadcrumb_nav.js",["160"],"import React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport{Link} from'react-router-dom';\n\nconst Breadcrumb_nav = (props) => {\n  return (\n    <div>\n      <Breadcrumb tag=\"nav\" listTag=\"div\">\n      \n        <BreadcrumbItem tag=\"a\" href=\"/\">Home</BreadcrumbItem>\n        <BreadcrumbItem tag=\"a\" href=\"/listTalleres/:id_ar\">Talleres</BreadcrumbItem>\n        <BreadcrumbItem active tag=\"span\">Evaluacion</BreadcrumbItem>\n        \n      </Breadcrumb>\n    </div>\n  );\n};\n\nexport default Breadcrumb_nav;","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\AdminUsers.js",["161","162","163","164","165","166","167","168","169","170"],"import React, {Component}from'react';\nimport {render}from'react-dom';\nimport {Table, Button, Container, CustomInput, Modal, ModalHeader, ModalBody, ModalFooter, formGroup} from 'reactstrap';\nimport Swal from 'sweetalert';\nimport axios from 'axios'\nimport P from '../components/P';\nimport Styles from '../index.css'\nimport md5 from 'md5';\n\nimport Navigation from '../components/Navigation';\nimport Breadcrumb_nav from '../components/Breadcrumb_nav';\nimport Cookies from 'universal-cookie';\n\nimport firebase from '../../src/setting/server_firebase';\n\n\n\nconst cookies = new Cookies();\n\nconst {REACT_APP_HOST} = process.env;\n\nvar storage = firebase.app().storage(\"gs://talleres-1b6d0.appspot.com\");\n\nconst validation = data => {\n    const errors = {};\n    if (!data.nombre) {\n        errors.nombre = 'El campo nombres es obligatorio';\n    }\n    if (!data.apellido) {\n        errors.apellido = 'El campo apellidos es obligatorio';\n    }\n    if (!data.cedula) {\n        errors.cedula = 'El campo cédula es obligatorio';\n    }\n    if (!data.user) {\n        errors.user = 'El campo user es obligatorio';\n    }\n    if (!data.pass) {\n        errors.pass = 'El campo password es obligatorio';\n    }\n    if (!data.rol) {\n        errors.rol = 'El rol es un campo obligatorio';\n    }\n    return errors;\n}\nclass AdminUsers extends Component {\n    constructor() {\n        super();\n        this.state = {\n            nombre: '',\n            apellido: '',\n            cedula: '',\n            user: '',\n            pass: '',\n            rol: '',\n            _id: '',\n            users: [],\n            textButton: 'REGISTRAR',\n            header: 'Insertar Usuario',\n            modalOpen: false,\n            image: '...',\n            errors: {},\n            img_temp: '',\n            aux:''\n\n        }\n\n        this.showModal = this.showModal.bind(this);\n        this.hideModal = this.hideModal.bind(this);\n        this.handleChange = this.handleChange.bind(this)\n        this.addUser = this.addUser.bind(this)\n    }\n    componentDidMount() {//Es como el initComponents\n        this.getUsers();//Para que inicie la pantalla de tareas\n    }\n    getUsers() {\n        axios.get(`${REACT_APP_HOST}/api/users`).then((response) => {\n            this.setState({users: response.data})\n            console.log(response.data);\n        })\n    }\n\n    addUser(e) {\n        e.preventDefault();\n\n        const {errors, ...sinErrors} = this.state;\n        const result = validation(sinErrors);\n        this.setState({errors: result});\n\n        if (!Object.keys(result).length) {\n            let datos = new FormData();\n            datos.append('nombre', this.state.nombre);\n            datos.append('apellido', this.state.apellido);\n            datos.append('cedula', this.state.cedula);\n            datos.append('user', this.state.user);\n            datos.append('pass', this.state.pass);\n            datos.append('rol', this.state.rol);\n//            datos.append('image', this.state.image.name);\n            \n             if (this.state._id && this.state.aux==='') {\n                console.log('modifico');\n                datos.append('image', this.state.image);\n            } else if(this.state._id && this.state.aux.name) {\n                 console.log('modifico imagen');\n                datos.append('image', this.state.image.name);\n            }else{\n                 console.log('guardo');\n                datos.append('image', this.state.image.name); \n            }\n            \n            if (this.state._id) {\n                \n                 if (this.state.aux.name) {\n                    this.deleteImage2();\n                    this.uploadImage2();\n                }\n                \n                axios.put(`${REACT_APP_HOST}/api/users/` + this.state._id, datos).then(async(response) => {\n//                    let eliminar = await this.deleteImage();\n//                    let cargar = await this.uploadImage();\n                    Swal({\n                        title: 'Usuario Actualizada',\n                        icon: 'success',\n                        timer: 2000,\n                        button: false\n                    });\n                    this.getUsers();\n                    this.setState({nombre: '', apellido: '', cedula: '', user: '', pass: '', rol: '', _id: '', textButton: 'REGISTRAR', modalOpen: false,aux:'', image: '...', errors: {}});\n                })\n            } else {\n\n                axios.post(`${REACT_APP_HOST}/api/users`, datos).then(async(response) => {\n                    let cargar = await this.uploadImage();\n                    \n                    Swal({\n                        title: 'Usuario registrada',\n                        icon: 'success',\n                        timer: 2000,\n                        button: false\n                    });\n                    this.getUsers();\n\n                    this.setState({nombre: '', apellido: '', cedula: '', rol: '', aux:'',image: '...'})\n                })\n            }\n\n        }\n\n    }\n\n    editUser(id) {\n        axios.get(`${REACT_APP_HOST}/api/users/` + id).then((response) => {\n            console.log(response.data)\n            this.setState({\n                nombre: response.data.nombre,\n                apellido: response.data.apellido,\n                cedula: response.data.cedula,\n                user: response.data.user,\n                pass: response.data.pass,\n                rol: response.data.rol,\n                image: response.data.image,\n                img_temp: response.data.image,\n                _id: response.data._id,\n                textButton: 'ACTUALIZAR',\n                header: 'Actualizar Usuario'\n            })\n            console.log(this.state.image)\n        })\n    }\n\n    deleteUser(id, image) {\n        this.setState({img_temp:image});\n        Swal({\n            title: 'Esta seguro de eliminar el Usuario',\n            text: ' El usuario se eliminara definitivamente',\n            icon: 'warning',\n            buttons: ['Cancelar', 'Sí'],\n            dangerMode: true\n        }).then((value) => {\n            if (value) {\n                axios.delete(`${REACT_APP_HOST}/api/users/` + id).then(async(response) => {\n                    console.log(response.data);\n                    let eliminar = await this.deleteImage();\n                    Swal({\n                        title: 'Usuario eliminada',\n                        icon: 'success',\n                        timer: 1000,\n                        button: false\n                    });\n                    this.getUsers();\n                });\n            }\n        });\n    }\n\n    showModal() {\n        this.setState({modalOpen: true});\n    }\n    hideModal() {\n        this.setState({nombre: '', apellido: '', cedula: '', user: '', pass: '', rol: '', modalOpen: false, textButton: 'REGISTRAR', header: 'Insertar Usuario', image: '...', errors: {}})\n    }\n\n    handleChange(e) {\n        const{name, value} = e.target;\n        this.setState({[name]: value});\n        console.log(e.target.value);\n    }\n\n    uploadImage = async() => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`images/imguser/${this.state.image.name}`);\n        return await spaceRef.put(this.state.image)\n\n    }\n    deleteImage = async() => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`images/imguser/${this.state.img_temp}`);\n        return await  spaceRef.delete();\n\n    }\n    \n     uploadImage2 = () => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`images/imguser/${this.state.image.name}`);\n        return spaceRef.put(this.state.image);\n\n    }\n    deleteImage2 = () => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`images/imguser/${this.state.img_temp}`);\n        return  spaceRef.delete();\n\n    }\n\n    handleImageUpload = (e) => {\n\n        this.setState({image: e.target.files[0], aux:e.target.files[0]});\n        console.log(e.target.files[0]);\n    }\n\n    render() {\n        const {errors} = this.state;\n        return (\n                <div>\n                    <Navigation />\n                    <div className=\"containerList\">\n                \n                \n                        <br/>\n                        <Button color=\"primary\" onClick={this.showModal}>Nuevo Usuario</Button>\n                        <br/>\n                        <br/>\n                        {this.state.users.length > 0 ?\n                                    <Table>\n                                        <thead>\n                                            <tr>\n                                                <th>NOMBRE</th>\n                                                <th>APELLIDO</th>\n                                                <th>CEDULA</th>\n                                                <th>USUARIO</th>\n                                                <th>ROL</th>\n                                                <th>IMAGE</th>\n                                                <th>ACCIONES</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                        this.state.users.map(data => {\n                                            return(\n                                                                                <tr key={data._id}>\n                                                                                    <td>{data.nombre}</td>\n                                                                                    <td>{data.apellido}</td>\n                                                                                    <td>{data.cedula}</td>\n                                                                                    <td>{data.user}</td>\n                                                                                    <td>{data.rol}</td>\n                                                                                    <td>{data.image}</td>\n                                                                                    <td>\n                                                                                        <Button color=\"warning\" onClick={() => {\n                                                                                        this.showModal();\n                                                                                        this.editUser(data._id);\n                                                                                                            }}>Edit</Button>{' '}\n                                                                \n                                                                                        <Button color=\"danger\" onClick={ () => {\n                                                                                        this.deleteUser(data._id, data.image)\n                                                                                    }}>Delete</Button>\n                                                                                    </td>\n                                                                                </tr>\n                                                    )\n                                        })\n                                            }\n                                        </tbody>\n                                    </Table>\n                            : <h1>No hay Usuarios registrados</h1>}\n                        <Modal isOpen={this.state.modalOpen}>\n                            <ModalHeader>\n                                <div><h3>{this.state.header}</h3></div>\n                            </ModalHeader>\n                \n                            <ModalBody>\n                                <form onSubmit={this.addUser} className=\"container\">\n                                    <div className=\"row\">\n                                        <input name=\"nombre\" onChange={this.handleChange} type=\"text\" className=\"form-control form-control-sm\" placeholder=\"Nombres\" value={this.state.nombre}/>\n                                        {errors.nombre && <P errors={errors.nombre} />}\n                                    </div>\n                                    <div className=\"row my-2\">\n                                        <input name=\"apellido\" onChange={this.handleChange} type=\"text\" className=\"form-control form-control-sm\" placeholder=\"Apellidos\" value={this.state.apellido}/>\n                                        {errors.apellido && <P errors={errors.apellido} />}\n                                    </div>                            \n                                    <div className=\"row\">\n                                        <input name=\"cedula\" onChange={this.handleChange} type=\"number\" className=\"form-control form-control-sm\" placeholder=\"Cedula\" value={this.state.cedula}/>\n                                        {errors.cedula && <P errors={errors.cedula} />}\n                                    </div> \n                                    <div className=\"row my-2\">\n                                        <input name=\"user\" onChange={this.handleChange} type=\"text\" className=\"form-control form-control-sm\" placeholder=\"Nombre de usuario\" value={this.state.user}/>\n                                        {errors.user && <P errors={errors.user} />}\n                                    </div>\n                                    <div className=\"row\">\n                                        <input name=\"pass\" onChange={this.handleChange} type=\"password\" className=\"form-control form-control-sm\" placeholder=\"Password\" value={this.state.pass}/>\n                                        {errors.pass && <P errors={errors.pass} />}\n                                    </div>\n                                    <div className=\"row\">\n                                        <select className=\"form-control form-control-sm my-2\" name=\"rol\" onChange={this.handleChange} value={this.state.rol}>\n                                            <option>Selecione un Rol</option>\n                                            <option value=\"USUARIO\">USUARIO</option>\n                                            <option value=\"ADMINISTRADOR\">ADMINISTRADOR</option>\n                                        </select>\n                                        {errors.rol && <P errors={errors.rol} />}\n                                    </div>                            \n                                    <div className=\"row\">\n                                        <CustomInput className=\"form-control-sm\" name=\"image\" type=\"file\" onChange={this.handleImageUpload} id=\"image\" label='Seleccione una Foto' accept=\"image/png, .jpeg, .jpg\"/>\n                                    </div>\n                                    <br/>\n                \n                                    <Button id=\"btnInsertar\">{this.state.textButton}</Button>{' '}\n                                    <Button id=\"btnCancelar\" onClick={this.hideModal} className=\"btn btn-danger\" data-dismiss=\"modal\" aria-hidden=\"true\">CANCELAR</Button>\n                                </form>\n                            </ModalBody>               \n                        </Modal>\n                    </div>\n                </div>\n\n                );\n    }\n\n}\n\nexport default  AdminUsers;\n","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\Evaluacion.js",["171","172","173","174","175","176","177","178","179","180","181","182"],"C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\libraries\\back.js",[],["183","184"],"C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\Login.js",["185","186"],"import React, {Component} from'react';\nimport {Container} from 'reactstrap';\nimport {render}from 'react-dom';\nimport { FontAwesomeIcon }from '@fortawesome/react-fontawesome'\nimport {faUser, faKey, faSignInAlt}from '@fortawesome/free-solid-svg-icons'\nimport image from'../img/user.png';\n\nimport axios from 'axios';\nimport Cookies from 'universal-cookie';\n\nconst {REACT_APP_HOST} = process.env;\nconst cookies=new Cookies();\n\nclass login extends Component {\n    constructor() {\n        super();\n        this.state = {\n            user: '',\n            pass: '',\n            user_session: []\n        }\n        \n        this.handleKeyPress = this.handleKeyPress.bind(this);\n\n    }\n\n    componentDidMount() {\n        if(cookies.get('nombre')){\n            window.location.href='/home'\n        }\n    }\n\n    handleChange = (e) => {\n        const{name, value} = e.target;\n        this.setState({[name]: value})\n//        console.log(e.target.value)\n    }\n\n handleKeyPress(e) {\n     \n    if (e.key === 'Enter') {\n      console.log('do validate');\n      this.login_session();\n    }\n  }\n\n    login_session() {\n        axios.get(`${REACT_APP_HOST}/api/users/` + this.state.user + '/' + this.state.pass).then((response) => {\n            return response.data\n        }).then((response) => {\n            if (response) {              \n                cookies.set('id',response._id, {path:'/'});\n                cookies.set('nombre',response.nombre, {path:'/'});\n                cookies.set('apellido',response.apellido, {path:'/'});\n                cookies.set('user',response.user, {path:'/'});\n                cookies.set('rol',response.rol, {path:'/'});\n                cookies.set('cedula',response.cedula, {path:'/'});\n                cookies.set('image',response.image, {path:'/'});\n                window.location.href='/home';\n            } else {\n             const error_logeo=  document.getElementById('idError')\n             error_logeo.innerHTML='Usuario o contraseña incorrectos'\n            }\n        })\n    }\n\n    render() {\n        return(\n                <Container className=\"body\">\n                    <div className=\"modal-dialog text-center \">\n                        <div className=\"col-sm-8 main-section\">\n                            <p className=\"display-4\" >LOGIN</p>\n                            <hr className=\"bg-info col-md-8\"></hr>   \n                        </div>       \n                    </div>\n                    <div  className=\"modal-dialog text-center \">\n                        <div     className=\"modal-dialog text-center \">\n                            <div className=\"col-sm-8 main-section\">\n                                <div className=\"modal-content\">\n                                    <div className=\"col-12 img-user\">\n                                        <img src={image}/>\n                                    </div>            \n                                    <form id=\"idFormulario\" method=\"get\" className=\"col-12 \">\n                                        <div className=\"input-group mb-2\">\n                                            <div className=\"input-group-prepend\">\n                                                <span className=\"input-group-text\"><FontAwesomeIcon icon={faUser}/></span>\n                                            </div>    \n                                            <input name=\"user\" type=\"text\" required=\"\" id=\"user\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Usuario\"/>      \n                                        </div>\n                \n                                        <div className=\"input-group mb-3\">\n                                            <div className=\"input-group-prepend\">\n                                                <span className=\"input-group-text\"><FontAwesomeIcon icon={faKey}/></span>\n                                            </div>    \n                                            <input name=\"pass\" type=\"password\" required=\"\" id=\"pass\" onKeyPress={this.handleKeyPress} onChange={this.handleChange} className=\"form-control\" placeholder=\"Contraseña\"/>      \n                                        </div>\n                \n                                        <div className=\"form-group\">\n                                            <button type=\"button\" id=\"btnLogin\" className=\"btn btn-primary\" onClick={() => {\n                                                    this.login_session()\n                                                        }}><FontAwesomeIcon icon={faSignInAlt}/>  ENTRAR</button>      \n                                        </div>\n                                        <div className=\"mb-3 aler alert-danger\">\n                                            <span className=\"display text-danger\" id=\"idError\"></span>\n                                        </div>\n                \n                                    </form>\n                \n                                </div> \n                            </div>\n                        </div>\n                    </div>\n                \n                </Container>\n\n                )\n    }\n}\n\nexport default login;","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\Culminado.js",["187","188","189","190","191","192","193","194"],"import React, {useState, useEffect} from 'react';\nimport {Container, Row, Col, Button, CardTitle, CardText, Card, CardHeader, CardBody} from 'reactstrap';\nimport ReactPlayer from 'react-player';\nimport{useParams, Link} from 'react-router-dom';\nimport axios from 'axios';\n\nimport { FontAwesomeIcon }from '@fortawesome/react-fontawesome'\nimport {faCheckCircle, faStepBackward}from '@fortawesome/free-solid-svg-icons'\n\nimport Navigation from '../components/Navigation';\nimport Breadcrumb_nav from '../components/Breadcrumb_nav';\n\nimport Cookies from 'universal-cookie';\n\nimport exito from '../img/copa.png';\n\nconst cookies = new Cookies();\n//import Styles from '../index.css'\n\n\nconst{REACT_APP_HOST} = process.env;\n\nconst styles = {\n    border: {\n        borderStyle: 'groove',\n        color: \"#3c3a2d\",\n        display: 'flex'\n    }\n}\n\nfunction Culminado() {\n\n    const {id} = useParams();\n    const {fecha} = useParams();\n    const[taller, getTaller] = useState([]);\n    const[value, setstatusBoton] = useState(false);\n\n    useEffect(() => {\n        if (!cookies.get('nombre')) {\n            window.location.href = '/'\n        }\n        const obtenertaller = () => {\n            axios.get(`${REACT_APP_HOST}/api/talleres/${id}`).then(response => {\n                getTaller(response.data);\n//                console.log(response.data)\n            });\n        }\n        obtenertaller();\n    }, [id]);\n\n\n\n\n    return(\n            <div>\n                <Navigation />\n                <div className=\"containerFluid mt-3 p-2\" >\n                    <Row>\n            \n                        <Col xs={12} className='text-center text-success'>\n                        <img width='400' height='400' src={exito} alt=\"Exito\"/>\n                        <h2>Curso Completo <FontAwesomeIcon icon={faCheckCircle} /></h2>\n                        <h5>Curso Completado el {fecha} <FontAwesomeIcon icon={faCheckCircle} /></h5>\n                        <Card>\n                        <CardHeader><div className=\"pl-2\"><CardTitle className=\"font-weight-bold\" tag=\"h5\">Nombre del curso: {taller.title} <FontAwesomeIcon icon={faCheckCircle} /></CardTitle></div></CardHeader>\n                        <div className=\"pl-2 pb-2 text-left\">\n                            <Link to={`/home`}><Button color=\"success\"><FontAwesomeIcon icon={faStepBackward} />Home</Button></Link>\n                        </div>\n                        </Card>\n            \n            \n                        </Col>\n            \n            \n            \n                    </Row>\n            \n            \n                </div>\n            </div>\n            )\n\n}\n\nexport default Culminado;\n\n\n","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\Footer.js",["195","196"],"import React, {Component} from 'react';\nimport {render}from'react-dom';\n\n\nconst styles = {\n    footer: {\n        padding: 10,\n        textAlign: \"left\",\n\n    }\n}\nclass Footer extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n\n        }\n    }\n\n    render() {\n        return(\n                 <footer className=\"fixed-bottom bg-dark\">\n                    <div className=\"footer-copyright text-left py-1 text-white\">\n                       <span style={{fontSize:12}}> © 2021 Ccoputers Todas los derecho reservados.</span>\n                    </div>\n                </footer>\n                );\n    }\n}\n\nexport default Footer;","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\AdminResultados.js",["197","198","199","200","201","202"],"import React, {Component} from 'react';\nimport{Link} from'react-router-dom';\nimport {render}from'react-dom';\nimport {Container, Table}from 'reactstrap';\nimport Navigation from '../components/Navigation';\nimport axios from 'axios';\nimport { FontAwesomeIcon }from '@fortawesome/react-fontawesome'\nimport {faCheckCircle, faExclamationCircle}from '@fortawesome/free-solid-svg-icons'\n\n        const{REACT_APP_HOST} = process.env;\nvar t_c = [];\nvar talleres_comp = [];\n\n\nclass AdminResultados extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            talleres: [],\n            usuarios: [],\n            user_talleres: [],\n        }\n\n\n\n    }\n    componentDidMount() {\n        this.getTalleres();\n    }\n\n    getTalleres() {\n        axios.get(`${REACT_APP_HOST}/api/talleres`).then((response) => {\n            this.setState({talleres: response.data})\n            this.getUsuarios();\n        })\n    }\n\n    getUsuarios() {\n        axios.get(`${REACT_APP_HOST}/api/users`).then((response) => {\n            this.setState({usuarios: response.data});\n            this.getUserTaller();\n        })\n    }\n\n    getUserTaller() {\n        axios.get(`${REACT_APP_HOST}/api/user_taller/`).then((response) => {\n            this.setState({user_talleres: response.data})\n//            console.log(response.data)\n        })\n\n    }\n\n\n    marcarCompletado(user, index) {\n        var taller_completado = [];\n        var returnedobj = [];\n        this.state.talleres.map((taller, i) => {\n            var estado = '0';\n            this.state.user_talleres.map((user_taller, j) => {\n                if (user === user_taller.id_user) {\n                    if (taller._id === user_taller.id_taller) {\n                        estado = '1';\n                    }\n                }\n            })\n            if (estado === '1') {\n                returnedobj = Object.assign(taller, {estado: '1'});\n//                console.log(returnedobj)\n            } else {\n                returnedobj = Object.assign(taller, {estado: '0'});\n            }\n            taller_completado.push(returnedobj);\n\n        })\n//        console.log(taller_completado);\n\n        talleres_comp = taller_completado;\n        console.log(talleres_comp)\n    }\n\n    render() {\n\n        return(\n                <div>\n                    <Navigation />\n                    <div className=\"containerList my-3\"> \n                        <h1>Resultados</h1>\n                \n                        <Table>\n                            <thead>\n                \n                                <tr>\n                \n                                    <th>USUARIO</th>\n                                    <th>CEDULA</th>\n                                    {\n                                        this.state.talleres.map((data, index) => (\n                                        <th key={data._id}>{data.title}</th>\n                                                    ))\n                                    }\n                \n                                </tr>\n                            </thead>\n                            <tbody>\n                \n                                {\n                                    this.state.usuarios.map((data, index) => (\n                                        <tr key={data._id}>\n                                            <td>{data.nombre}{' '}{data.apellido}</td>\n                                            <td>{data.cedula}</td>\n                                            {this.marcarCompletado(data._id, index)}\n                                            {\n                                              talleres_comp.map((data) => (\n                                                                     \n                                                <td key={data._id}>\n                                                    {data.estado==='1'?<span className='badge text-success'>Completo <FontAwesomeIcon icon={faCheckCircle} /></span>\n                                                                       :<span className='text-warning badge'>En curso <FontAwesomeIcon icon={faExclamationCircle} /></span>}\n                                                 </td>\n                                                            \n                                            ))\n                                    }\n                                    </tr>\n                                            ))\n                            }\n                \n                            </tbody>\n                        </Table>\n                    </div>\n                </div>\n\n                );\n    }\n}\n\nexport default AdminResultados;","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\setting\\server_firebase.js",[],{"ruleId":"203","severity":1,"message":"204","line":4,"column":8,"nodeType":"205","messageId":"206","endLine":4,"endColumn":16},{"ruleId":"203","severity":1,"message":"207","line":6,"column":8,"nodeType":"205","messageId":"206","endLine":6,"endColumn":13},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"203","severity":1,"message":"212","line":2,"column":9,"nodeType":"205","messageId":"206","endLine":2,"endColumn":15},{"ruleId":"203","severity":1,"message":"213","line":5,"column":8,"nodeType":"205","messageId":"206","endLine":5,"endColumn":18},{"ruleId":"203","severity":1,"message":"214","line":6,"column":8,"nodeType":"205","messageId":"206","endLine":6,"endColumn":22},{"ruleId":"203","severity":1,"message":"212","line":3,"column":9,"nodeType":"205","messageId":"206","endLine":3,"endColumn":15},{"ruleId":"203","severity":1,"message":"215","line":11,"column":8,"nodeType":"205","messageId":"206","endLine":11,"endColumn":22},{"ruleId":"216","severity":1,"message":"217","line":72,"column":52,"nodeType":"218","messageId":"219","endLine":72,"endColumn":54},{"ruleId":"216","severity":1,"message":"217","line":78,"column":52,"nodeType":"218","messageId":"219","endLine":78,"endColumn":54},{"ruleId":"216","severity":1,"message":"217","line":84,"column":52,"nodeType":"218","messageId":"219","endLine":84,"endColumn":54},{"ruleId":"216","severity":1,"message":"217","line":89,"column":52,"nodeType":"218","messageId":"219","endLine":89,"endColumn":54},{"ruleId":"220","severity":1,"message":"221","line":98,"column":33,"nodeType":"222","endLine":100,"endColumn":43},{"ruleId":"223","severity":1,"message":"224","line":103,"column":37,"nodeType":"222","endLine":103,"endColumn":179},{"ruleId":"216","severity":1,"message":"217","line":113,"column":59,"nodeType":"218","messageId":"219","endLine":113,"endColumn":61},{"ruleId":"203","severity":1,"message":"212","line":2,"column":9,"nodeType":"205","messageId":"206","endLine":2,"endColumn":15},{"ruleId":"203","severity":1,"message":"225","line":3,"column":24,"nodeType":"205","messageId":"206","endLine":3,"endColumn":33},{"ruleId":"203","severity":1,"message":"226","line":3,"column":79,"nodeType":"205","messageId":"206","endLine":3,"endColumn":90},{"ruleId":"203","severity":1,"message":"227","line":3,"column":92,"nodeType":"205","messageId":"206","endLine":3,"endColumn":101},{"ruleId":"203","severity":1,"message":"228","line":8,"column":54,"nodeType":"205","messageId":"206","endLine":8,"endColumn":63},{"ruleId":"203","severity":1,"message":"214","line":12,"column":8,"nodeType":"205","messageId":"206","endLine":12,"endColumn":22},{"ruleId":"203","severity":1,"message":"229","line":20,"column":7,"nodeType":"205","messageId":"206","endLine":20,"endColumn":14},{"ruleId":"203","severity":1,"message":"230","line":40,"column":5,"nodeType":"205","messageId":"206","endLine":40,"endColumn":17},{"ruleId":"203","severity":1,"message":"231","line":41,"column":5,"nodeType":"205","messageId":"206","endLine":41,"endColumn":10},{"ruleId":"203","severity":1,"message":"232","line":195,"column":25,"nodeType":"205","messageId":"206","endLine":195,"endColumn":34},{"ruleId":"203","severity":1,"message":"233","line":224,"column":25,"nodeType":"205","messageId":"206","endLine":224,"endColumn":36},{"ruleId":"203","severity":1,"message":"234","line":226,"column":29,"nodeType":"205","messageId":"206","endLine":226,"endColumn":42},{"ruleId":"235","severity":1,"message":"236","line":286,"column":18,"nodeType":"205","messageId":"237","endLine":286,"endColumn":22},{"ruleId":"235","severity":1,"message":"238","line":286,"column":24,"nodeType":"205","messageId":"237","endLine":286,"endColumn":29},{"ruleId":"203","severity":1,"message":"225","line":2,"column":9,"nodeType":"205","messageId":"206","endLine":2,"endColumn":18},{"ruleId":"203","severity":1,"message":"214","line":8,"column":8,"nodeType":"205","messageId":"206","endLine":8,"endColumn":22},{"ruleId":"203","severity":1,"message":"239","line":20,"column":7,"nodeType":"205","messageId":"206","endLine":20,"endColumn":13},{"ruleId":"203","severity":1,"message":"212","line":2,"column":9,"nodeType":"205","messageId":"206","endLine":2,"endColumn":15},{"ruleId":"203","severity":1,"message":"225","line":3,"column":24,"nodeType":"205","messageId":"206","endLine":3,"endColumn":33},{"ruleId":"203","severity":1,"message":"226","line":3,"column":79,"nodeType":"205","messageId":"206","endLine":3,"endColumn":90},{"ruleId":"203","severity":1,"message":"227","line":3,"column":92,"nodeType":"205","messageId":"206","endLine":3,"endColumn":101},{"ruleId":"203","severity":1,"message":"240","line":7,"column":8,"nodeType":"205","messageId":"206","endLine":7,"endColumn":14},{"ruleId":"203","severity":1,"message":"214","line":10,"column":8,"nodeType":"205","messageId":"206","endLine":10,"endColumn":22},{"ruleId":"203","severity":1,"message":"241","line":14,"column":9,"nodeType":"205","messageId":"206","endLine":14,"endColumn":22},{"ruleId":"203","severity":1,"message":"242","line":14,"column":24,"nodeType":"205","messageId":"206","endLine":14,"endColumn":43},{"ruleId":"203","severity":1,"message":"243","line":111,"column":25,"nodeType":"205","messageId":"206","endLine":111,"endColumn":31},{"ruleId":"203","severity":1,"message":"244","line":153,"column":26,"nodeType":"205","messageId":"206","endLine":153,"endColumn":34},{"ruleId":"203","severity":1,"message":"245","line":2,"column":8,"nodeType":"205","messageId":"206","endLine":2,"endColumn":13},{"ruleId":"203","severity":1,"message":"246","line":3,"column":9,"nodeType":"205","messageId":"206","endLine":3,"endColumn":14},{"ruleId":"203","severity":1,"message":"247","line":3,"column":16,"nodeType":"205","messageId":"206","endLine":3,"endColumn":22},{"ruleId":"203","severity":1,"message":"225","line":3,"column":24,"nodeType":"205","messageId":"206","endLine":3,"endColumn":33},{"ruleId":"203","severity":1,"message":"248","line":3,"column":35,"nodeType":"205","messageId":"206","endLine":3,"endColumn":40},{"ruleId":"203","severity":1,"message":"249","line":3,"column":42,"nodeType":"205","messageId":"206","endLine":3,"endColumn":53},{"ruleId":"203","severity":1,"message":"250","line":3,"column":55,"nodeType":"205","messageId":"206","endLine":3,"endColumn":64},{"ruleId":"203","severity":1,"message":"226","line":3,"column":66,"nodeType":"205","messageId":"206","endLine":3,"endColumn":77},{"ruleId":"203","severity":1,"message":"227","line":3,"column":79,"nodeType":"205","messageId":"206","endLine":3,"endColumn":88},{"ruleId":"203","severity":1,"message":"212","line":4,"column":9,"nodeType":"205","messageId":"206","endLine":4,"endColumn":15},{"ruleId":"203","severity":1,"message":"251","line":6,"column":14,"nodeType":"205","messageId":"206","endLine":6,"endColumn":23},{"ruleId":"203","severity":1,"message":"214","line":12,"column":8,"nodeType":"205","messageId":"206","endLine":12,"endColumn":22},{"ruleId":"252","severity":1,"message":"253","line":80,"column":49,"nodeType":"254","messageId":"255","endLine":80,"endColumn":51},{"ruleId":"252","severity":1,"message":"253","line":85,"column":57,"nodeType":"254","messageId":"255","endLine":85,"endColumn":59},{"ruleId":"235","severity":1,"message":"256","line":97,"column":21,"nodeType":"205","messageId":"237","endLine":97,"endColumn":32},{"ruleId":"203","severity":1,"message":"245","line":2,"column":8,"nodeType":"205","messageId":"206","endLine":2,"endColumn":13},{"ruleId":"203","severity":1,"message":"246","line":3,"column":9,"nodeType":"205","messageId":"206","endLine":3,"endColumn":14},{"ruleId":"203","severity":1,"message":"247","line":3,"column":16,"nodeType":"205","messageId":"206","endLine":3,"endColumn":22},{"ruleId":"203","severity":1,"message":"225","line":3,"column":24,"nodeType":"205","messageId":"206","endLine":3,"endColumn":33},{"ruleId":"203","severity":1,"message":"248","line":3,"column":35,"nodeType":"205","messageId":"206","endLine":3,"endColumn":40},{"ruleId":"203","severity":1,"message":"249","line":3,"column":42,"nodeType":"205","messageId":"206","endLine":3,"endColumn":53},{"ruleId":"203","severity":1,"message":"250","line":3,"column":55,"nodeType":"205","messageId":"206","endLine":3,"endColumn":64},{"ruleId":"203","severity":1,"message":"226","line":3,"column":66,"nodeType":"205","messageId":"206","endLine":3,"endColumn":77},{"ruleId":"203","severity":1,"message":"227","line":3,"column":79,"nodeType":"205","messageId":"206","endLine":3,"endColumn":88},{"ruleId":"203","severity":1,"message":"212","line":6,"column":9,"nodeType":"205","messageId":"206","endLine":6,"endColumn":15},{"ruleId":"203","severity":1,"message":"214","line":8,"column":8,"nodeType":"205","messageId":"206","endLine":8,"endColumn":22},{"ruleId":"203","severity":1,"message":"257","line":12,"column":21,"nodeType":"205","messageId":"206","endLine":12,"endColumn":35},{"ruleId":"203","severity":1,"message":"258","line":3,"column":8,"nodeType":"205","messageId":"206","endLine":3,"endColumn":12},{"ruleId":"203","severity":1,"message":"212","line":2,"column":9,"nodeType":"205","messageId":"206","endLine":2,"endColumn":15},{"ruleId":"203","severity":1,"message":"225","line":3,"column":24,"nodeType":"205","messageId":"206","endLine":3,"endColumn":33},{"ruleId":"203","severity":1,"message":"226","line":3,"column":79,"nodeType":"205","messageId":"206","endLine":3,"endColumn":90},{"ruleId":"203","severity":1,"message":"227","line":3,"column":92,"nodeType":"205","messageId":"206","endLine":3,"endColumn":101},{"ruleId":"203","severity":1,"message":"240","line":7,"column":8,"nodeType":"205","messageId":"206","endLine":7,"endColumn":14},{"ruleId":"203","severity":1,"message":"259","line":8,"column":8,"nodeType":"205","messageId":"206","endLine":8,"endColumn":11},{"ruleId":"203","severity":1,"message":"214","line":11,"column":8,"nodeType":"205","messageId":"206","endLine":11,"endColumn":22},{"ruleId":"203","severity":1,"message":"229","line":18,"column":7,"nodeType":"205","messageId":"206","endLine":18,"endColumn":14},{"ruleId":"203","severity":1,"message":"243","line":133,"column":25,"nodeType":"205","messageId":"206","endLine":133,"endColumn":31},{"ruleId":"203","severity":1,"message":"244","line":183,"column":25,"nodeType":"205","messageId":"206","endLine":183,"endColumn":33},{"ruleId":"203","severity":1,"message":"212","line":3,"column":9,"nodeType":"205","messageId":"206","endLine":3,"endColumn":15},{"ruleId":"203","severity":1,"message":"258","line":4,"column":8,"nodeType":"205","messageId":"206","endLine":4,"endColumn":12},{"ruleId":"203","severity":1,"message":"251","line":4,"column":14,"nodeType":"205","messageId":"206","endLine":4,"endColumn":23},{"ruleId":"260","severity":1,"message":"261","line":14,"column":17,"nodeType":"262","messageId":"263","endLine":14,"endColumn":28,"fix":"264"},{"ruleId":"203","severity":1,"message":"265","line":29,"column":5,"nodeType":"205","messageId":"206","endLine":29,"endColumn":18},{"ruleId":"252","severity":1,"message":"253","line":96,"column":72,"nodeType":"254","messageId":"255","endLine":96,"endColumn":74},{"ruleId":"252","severity":1,"message":"253","line":98,"column":69,"nodeType":"254","messageId":"255","endLine":98,"endColumn":71},{"ruleId":"252","severity":1,"message":"253","line":116,"column":52,"nodeType":"254","messageId":"255","endLine":116,"endColumn":54},{"ruleId":"203","severity":1,"message":"266","line":118,"column":17,"nodeType":"205","messageId":"206","endLine":118,"endColumn":25},{"ruleId":"252","severity":1,"message":"253","line":145,"column":71,"nodeType":"254","messageId":"255","endLine":145,"endColumn":73},{"ruleId":"203","severity":1,"message":"267","line":290,"column":15,"nodeType":"205","messageId":"206","endLine":290,"endColumn":24},{"ruleId":"220","severity":1,"message":"221","line":407,"column":53,"nodeType":"222","endLine":407,"endColumn":137},{"ruleId":"208","replacedBy":"268"},{"ruleId":"210","replacedBy":"269"},{"ruleId":"203","severity":1,"message":"212","line":3,"column":9,"nodeType":"205","messageId":"206","endLine":3,"endColumn":15},{"ruleId":"270","severity":1,"message":"271","line":81,"column":41,"nodeType":"222","endLine":81,"endColumn":59},{"ruleId":"203","severity":1,"message":"225","line":2,"column":9,"nodeType":"205","messageId":"206","endLine":2,"endColumn":18},{"ruleId":"203","severity":1,"message":"272","line":2,"column":49,"nodeType":"205","messageId":"206","endLine":2,"endColumn":57},{"ruleId":"203","severity":1,"message":"273","line":2,"column":77,"nodeType":"205","messageId":"206","endLine":2,"endColumn":85},{"ruleId":"203","severity":1,"message":"274","line":3,"column":8,"nodeType":"205","messageId":"206","endLine":3,"endColumn":19},{"ruleId":"203","severity":1,"message":"214","line":11,"column":8,"nodeType":"205","messageId":"206","endLine":11,"endColumn":22},{"ruleId":"203","severity":1,"message":"239","line":23,"column":7,"nodeType":"205","messageId":"206","endLine":23,"endColumn":13},{"ruleId":"203","severity":1,"message":"275","line":36,"column":11,"nodeType":"205","messageId":"206","endLine":36,"endColumn":16},{"ruleId":"203","severity":1,"message":"276","line":36,"column":18,"nodeType":"205","messageId":"206","endLine":36,"endColumn":32},{"ruleId":"203","severity":1,"message":"212","line":2,"column":9,"nodeType":"205","messageId":"206","endLine":2,"endColumn":15},{"ruleId":"203","severity":1,"message":"239","line":5,"column":7,"nodeType":"205","messageId":"206","endLine":5,"endColumn":13},{"ruleId":"203","severity":1,"message":"258","line":2,"column":8,"nodeType":"205","messageId":"206","endLine":2,"endColumn":12},{"ruleId":"203","severity":1,"message":"212","line":3,"column":9,"nodeType":"205","messageId":"206","endLine":3,"endColumn":15},{"ruleId":"203","severity":1,"message":"225","line":4,"column":9,"nodeType":"205","messageId":"206","endLine":4,"endColumn":18},{"ruleId":"203","severity":1,"message":"277","line":11,"column":5,"nodeType":"205","messageId":"206","endLine":11,"endColumn":8},{"ruleId":"252","severity":1,"message":"253","line":58,"column":45,"nodeType":"254","messageId":"255","endLine":58,"endColumn":47},{"ruleId":"252","severity":1,"message":"253","line":60,"column":59,"nodeType":"254","messageId":"255","endLine":60,"endColumn":61},"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","no-native-reassign",["278"],"no-negated-in-lhs",["279"],"'render' is defined but never used.","'Navigation' is defined but never used.","'Breadcrumb_nav' is defined but never used.","'REACT_APP_HOST' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Container' is defined but never used.","'ModalFooter' is defined but never used.","'formGroup' is defined but never used.","'faSyncAlt' is defined but never used.","'cookies' is assigned a value but never used.","'prueba_regis' is assigned a value but never used.","'array' is assigned a value but never used.","'cargarimg' is assigned a value but never used.","'eliminarimg' is assigned a value but never used.","'eliminarvideo' is assigned a value but never used.","no-redeclare","'name' is already defined.","redeclared","'value' is already defined.","'styles' is assigned a value but never used.","'Styles' is defined but never used.","'faCheckCircle' is defined but never used.","'faExclamationCircle' is defined but never used.","'cargar' is assigned a value but never used.","'eliminar' is assigned a value but never used.","'style' is defined but never used.","'Table' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'useParams' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'returnedobj' is already defined.","'faStepBackward' is defined but never used.","'Link' is defined but never used.","'md5' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"280","text":"281"},"'intervaloCont' is assigned a value but never used.","'intentos' is assigned a value but never used.","'id_taller' is assigned a value but never used.",["278"],["279"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'CardText' is defined but never used.","'CardBody' is defined but never used.","'ReactPlayer' is defined but never used.","'value' is assigned a value but never used.","'setstatusBoton' is assigned a value but never used.","'t_c' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[528,528],"()"]