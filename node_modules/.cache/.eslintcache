[{"C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\index.js":"1","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\App.js":"2","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\Navigation.js":"3","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\AdminTalleres.js":"4","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\P.js":"5","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\Presentacion.js":"6","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\AdminAreas.js":"7","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\ListTalleres.js":"8","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\ListAreas.js":"9","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\Breadcrumb_nav.js":"10","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\AdminUsers.js":"11","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\Evaluacion.js":"12","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\libraries\\back.js":"13","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\Login.js":"14","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\Culminado.js":"15","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\Footer.js":"16","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\AdminResultados.js":"17","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\setting\\server_firebase.js":"18","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\ResetIntentos.js":"19","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\ResetTalleres.js":"20"},{"size":337,"mtime":1629503333986,"results":"21","hashOfConfig":"22"},{"size":2199,"mtime":1652246830008,"results":"23","hashOfConfig":"22"},{"size":9065,"mtime":1652935975563,"results":"24","hashOfConfig":"22"},{"size":49709,"mtime":1652253425883,"results":"25","hashOfConfig":"22"},{"size":233,"mtime":1616968636414,"results":"26","hashOfConfig":"22"},{"size":5936,"mtime":1652851301473,"results":"27","hashOfConfig":"22"},{"size":17083,"mtime":1652253378828,"results":"28","hashOfConfig":"22"},{"size":15298,"mtime":1652246864955,"results":"29","hashOfConfig":"22"},{"size":11131,"mtime":1652242747124,"results":"30","hashOfConfig":"22"},{"size":527,"mtime":1617243707080,"results":"31","hashOfConfig":"22"},{"size":27167,"mtime":1652253402311,"results":"32","hashOfConfig":"22"},{"size":33089,"mtime":1652836746115,"results":"33","hashOfConfig":"22"},{"size":153,"mtime":1629736270344,"results":"34","hashOfConfig":"22"},{"size":6927,"mtime":1652936218285,"results":"35","hashOfConfig":"22"},{"size":3043,"mtime":1652246908058,"results":"36","hashOfConfig":"22"},{"size":655,"mtime":1626807583868,"results":"37","hashOfConfig":"22"},{"size":21021,"mtime":1649607773330,"results":"38","hashOfConfig":"22"},{"size":1406,"mtime":1644944696771,"results":"39","hashOfConfig":"22"},{"size":7631,"mtime":1652144125937,"results":"40","hashOfConfig":"22"},{"size":20127,"mtime":1652239273193,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"ohsq4t",{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"45"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":1,"source":"62","usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"45"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"45"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"45"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"45"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":1,"source":"77","usedDeprecatedRules":"45"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"45"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"45"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"45"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"45"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"45"},"C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\index.js",["100","101"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport firebase from '../src/setting/server_firebase';\nimport App from './App';\nimport Login from './components/Login'\n\n\nReactDOM.render(\n//        React.StrictMode\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n",["102","103"],"C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\App.js",["104","105","106"],"import React, {Component} from'react';\nimport {render}from'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {BrowserRouter, Route, Switch} from'react-router-dom'\nimport Navigation from './components/Navigation';\nimport Breadcrumb_nav from './components/Breadcrumb_nav';\nimport ListTalleres from './components/ListTalleres';\nimport ListAreas from './components/ListAreas';\nimport AdminTalleres from './components/AdminTalleres';\nimport Presentacion from './components/Presentacion'\nimport Culminado from './components/Culminado'\nimport AdminAreas from './components/AdminAreas'\nimport AdminUsers from './components/AdminUsers'\nimport AdminResultados from './components/AdminResultados'\nimport ResetIntentos from './components/ResetIntentos'\nimport ResetTalleres from './components/ResetTalleres'\nimport Evaluacion from './components/Evaluacion'\nimport Login from './components/Login'\nimport Footer from './components/Footer'\n\n\n\n        class App extends Component {\n\n    render() {\n        return (\n                <BrowserRouter>   \n                \n                    <Switch>                  \n                    <Route path=\"/listTalleres/:id_ar\" component={ListTalleres}/>\n                    <Route path=\"/adminAreas\" component={AdminAreas}/>\n                    <Route path=\"/presentacion/:id/:estado\" component={Presentacion}/>\n                    <Route path=\"/adminTask\" component={AdminTalleres}/>    \n                    <Route path=\"/culminado/:id/:fecha\" component={Culminado}/>\n                    <Route path=\"/adminUsers/\" component={AdminUsers}/>\n                    <Route path=\"/adminResultados/\" component={AdminResultados}/>\n                    <Route path=\"/resetIntentos/\" component={ResetIntentos}/>\n                    <Route path=\"/resetTalleres/\" component={ResetTalleres}/>\n                    <Route path=\"/evaluacion/:id\" component={Evaluacion}/>\n                    <Route path=\"/home\" component={ListAreas}/>\n                    <Route path=\"/\" render={() => <Login name=\"Login\" />}/>\n                    </Switch>\n                    <Footer/>\n                \n                </BrowserRouter>\n\n                )\n    }\n\n}\n;\n\n\nexport default App;\n\n\n","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\Navigation.js",["107","108","109","110","111","112","113","114","115","116"],"import React, {Component}from 'react';\r\nimport{Link} from'react-router-dom';\r\nimport {render}from'react-dom';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faHeadset, faUserTie, faFeatherAlt,faHome,faChartLine, faUsers,faClone, faLayerGroup,faCogs, faHistory} from '@fortawesome/free-solid-svg-icons';\r\nimport Cookies from 'universal-cookie';\r\nimport {Modal, Button, Dropdown, DropdownToggle, DropdownMenu, DropdownItem}from'reactstrap';\r\n\r\n\r\nconst cookies = new Cookies();\r\nconst {REACT_APP_HOST,REACT_APP_PATCH} = process.env;\r\n\r\nexport default class Navigation extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            modalopen: false,\r\n            dropdownOpen: false,\r\n            dropdownOpen_setting: false\r\n        }\r\n    }\r\n\r\n    modalShow() {\r\n        this.setState({modalopen: true})\r\n    }\r\n    hideModal() {\r\n        this.setState({modalopen: false})\r\n    }\r\n \r\n    toggle() {\r\n        this.state.dropdownOpen?this.setState({dropdownOpen:false}) :this.setState({dropdownOpen:true})\r\n    }\r\n    toggle_setting() {\r\n        this.state.dropdownOpen_setting?this.setState({dropdownOpen_setting:false}) :this.setState({dropdownOpen_setting:true})\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!cookies.get('nombre')) {\r\n            window.location.href = '/'\r\n        }\r\n\r\n    }\r\n    cerrar_session() {\r\n        cookies.remove('id', {path: '/'});\r\n        cookies.remove('nombre', {path: '/'});\r\n        cookies.remove('apellido', {path: '/'});\r\n        cookies.remove('user', {path: '/'});\r\n        cookies.remove('rol', {path: '/'});\r\n        cookies.remove('cedula', {path: '/'});\r\n        cookies.remove('image', {path: '/'});\r\n        window.location.href = '/';\r\n    }\r\n    \r\n   hidden(){\r\n      const menu =document.querySelector('#navbarNav');\r\n      menu.classList.toggle('show')\r\n\r\n  }\r\n\r\n    render() {\r\n        return(\r\n                <div>\r\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-dark\">\r\n                        <Link className=\"navbar-brand text-white\" to=\"/home\"><FontAwesomeIcon icon={faFeatherAlt} size=\"lg\"/> <span style={{fontSize:'21px'}}>TALLERES BY CC</span></Link>\r\n                        <button id=\"btn\" className=\"navbar-toggler bg-white\" type=\"button\" onClick={()=>{this.hidden()}} data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div className=\" collapse navbar-collapse\" id=\"navbarNav\">\r\n                            <ul className=\" navbar-nav\">\r\n                            \r\n                                <li className=\"nav-item active\">\r\n                                    <Link className=\"nav-link text-white\" to=\"/home\"><FontAwesomeIcon icon={faHome}/> Home </Link>\r\n                                </li>\r\n                                \r\n                                {cookies.get('rol')=='ADMINISTRADOR'?\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link text-white\"  to=\"/adminTask\"><FontAwesomeIcon icon={faLayerGroup} /> Talleres </Link>\r\n                                </li>\r\n                                :''}\r\n                                \r\n                                {cookies.get('rol')=='ADMINISTRADOR'?\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link text-white\"  to=\"/adminAreas\"><FontAwesomeIcon icon={faClone}/> Areas </Link>\r\n                                </li>\r\n                                 :''}\r\n                                 \r\n                                {cookies.get('rol')=='ADMINISTRADOR'?\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link text-white\" to=\"/adminUsers\"><FontAwesomeIcon icon={faUsers} /> Users </Link>\r\n                                </li>\r\n                                 :''}\r\n                                {cookies.get('rol')=='ADMINISTRADOR'?\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link text-white\" to=\"/adminResultados\"><FontAwesomeIcon icon={faChartLine} /> Resultados </Link>\r\n                                </li>\r\n                                 :''}\r\n                                {cookies.get('rol')=='ADMINISTRADOR'?\r\n                                <Dropdown isOpen={this.state.dropdownOpen_setting} toggle={() => {this.toggle_setting()}}>\r\n                                    <DropdownToggle color='dark' caret >\r\n                                        <span><FontAwesomeIcon icon={faCogs} /> Settings</span>\r\n                                    </DropdownToggle>\r\n                                    <DropdownMenu>                                   \r\n                                       <DropdownItem><Link className='text-dark text-decoration-none' to=\"/resetIntentos\"><FontAwesomeIcon icon={faHistory}/> Reset Intentos</Link></DropdownItem>                                        \r\n                                       <DropdownItem><Link className='text-dark text-decoration-none' to=\"/resetTalleres\"><FontAwesomeIcon icon={faHistory}/> Resetear Talleres Por Usuario</Link></DropdownItem>                                        \r\n                                    </DropdownMenu>\r\n\r\n                                </Dropdown>\r\n                                 :''}\r\n                                \r\n                            </ul>\r\n                            <ul className=\"navbar-nav ml-auto\">\r\n                                <FontAwesomeIcon icon={faHeadset} style={{fontSize: 30}}/>\r\n                                <a className=\"mano nav-link support text-white mr-4\" onClick={() => {\r\n                                        this.modalShow()\r\n                                       }}>Soporte</a> \r\n                                       \r\n                                {cookies.get('image')!=='...' ?\r\n                                    <img className='border p-1 mr-1' width='35' height='38' src={`${REACT_APP_PATCH}imguser%2F` + cookies.get('image')+'?alt=media'} alt='Image'/>\r\n                                            :\r\n                                    <FontAwesomeIcon icon={faUserTie}  style={{fontSize: 30}}/>\r\n                                }\r\n                               \r\n                                <Dropdown isOpen={this.state.dropdownOpen} toggle={() => {this.toggle()}}>\r\n                                    <DropdownToggle color='dark' caret >\r\n                                    <span style={{fontSize:12, color:'white'}}>{cookies.get('nombre')} {cookies.get('apellido')} </span>\r\n                                    </DropdownToggle>\r\n                                    <DropdownMenu>\r\n                                       {cookies.get('rol')=='ADMINISTRADOR'? <DropdownItem><Link className='text-dark text-decoration-none' to=\"/resetIntentos\">Settings</Link></DropdownItem>:''}\r\n                                        <DropdownItem>Help</DropdownItem>\r\n                                        <DropdownItem divider />\r\n                                        <DropdownItem onClick={()=>{this.cerrar_session()}}> Log Out</DropdownItem>\r\n                                        \r\n                                    </DropdownMenu>\r\n                                    \r\n                                </Dropdown>\r\n                \r\n                \r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                    <Modal isOpen={this.state.modalopen}>                      \r\n                        <div className='container row p-2'>\r\n                            <div className='col-md-11' style={{padding: 5}}>\r\n                                <h5 className='pl-3'>Soporte</h5>\r\n                            </div>\r\n                            <div className='col-md-1' style={{padding: 5}}>\r\n                                <Button size='sm' onClick={() => {\r\n                        this.hideModal()\r\n                    }}>X</Button>   \r\n                            </div><hr/>\r\n                        </div>                          \r\n                \r\n                        <div>\r\n                            <div className=\"modal-body border\">\r\n                                <div className=\"container border pt-2\">\r\n                                    <p>\r\n                                        <label>Telefono: 0992094788</label><br/>\r\n                                        <label>Correo: pcris.994@gmail.com</label>\r\n                                    </p>\r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                    </Modal>\r\n                \r\n                </div>\r\n                );\r\n    }\r\n    ;\r\n}\r\n;\r\n","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\AdminTalleres.js",["117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137"],"import React, {Component}from'react';\nimport {render}from'react-dom';\nimport {Table, Button, Container, CustomInput, Modal, ModalHeader, ModalBody, ModalFooter, formGroup, Row, Col, InputGroup,InputGroupText, Input}from 'reactstrap';\nimport Swal from 'sweetalert';\nimport axios from 'axios'\nimport P from '../components/P';\nimport { FontAwesomeIcon }from '@fortawesome/react-fontawesome'\nimport { faFileAlt, faEdit,faEye, faTrash,faBan, faFile,faBook, faSave, faSyncAlt, faCheckCircle, faSkull, faClock, faRedo, faFileExcel }from '@fortawesome/free-solid-svg-icons'\n//import { faApple} from '@fortawesome/free-brands-svg-icons'\n\nimport Navigation from '../components/Navigation';\nimport Breadcrumb_nav from '../components/Breadcrumb_nav';\n\nimport Cookies from 'universal-cookie';\n\nimport firebase from '../../src/setting/server_firebase';\n\nimport DataTable from \"@material-table/core\";\nimport {Grid, Avatar} from \"@material-ui/core\";\nimport XLSX from 'xlsx'\n\n\n\nconst cookies = new Cookies();\nconst {REACT_APP_HOST, REACT_APP_STORAGE} = process.env;\n\nconst paginacion={\n                                        labelRowsSelect:'Filas',\n                                        labelRowsPerPage:'Filas por Pagina',\n                                        previousAriaLabel:'Pagina Anterior',\n                                        previousTooltip:'Pagina Anterior',\n                                        nextAriaLabel:'Siguiente Página',\n                                        nextTooltip:'Siguiente Página',\n                                        lastAriaLabel:'Ultima page',\n                                        lastTooltip:'Ultima page',\n                                        firstAriaLabel:'Primera Página',\n                                        firstTooltip:'Primera Página'\n}\n\nconst toolbar={\n    exportTitle:'Exportar',\n    exportAriaLabel:'Exportar',\n    exportName:'Exportar a',\n    searchTooltip:'Buscar',\n    searchPlaceholder:'Buscar'\n}\n\n\n\nconst validation = data => {\n    const errors = {};\n    if (!data.area_id) {\n        errors.area_id = 'Seleccione el área o cree una nueva';\n    }\n    if (!data.title) {\n        errors.title = 'El campo title es obligatorio';\n    }\n    if (!data.description) {\n        errors.description = 'El campo description es obligatorio';\n    }\n    if (!data.image) {\n        errors.image = 'La imagen es obligatorio';\n    }\n    return errors;\n}\n//Para pintar boton Prueba\nvar prueba_regis = [];\nvar array = [];\n\nvar storage = firebase.app().storage(`${REACT_APP_STORAGE}`);\n\n\nclass AdminTalleres extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            description: '',\n            area_id: '',\n            talleres: [],\n            areas: [],\n            _id: '',\n            textButton: 'REGISTRAR',\n            header: 'Insertar Taller',\n            modalOpen: false,\n            modalEval: false,\n            videoload: false,\n            image: '',\n            img_temp: '',\n            video: '...',\n            video_temp: '',\n            tiempo: '30',\n            intentos: '2',\n            aprobacion: '10',\n            estado: '1',\n            evaluacion:'0',\n            errors: {},\n\n            //modal eval\n            //pregunta\n            taller_id: '',\n            pregunta: '',\n            estadopreg: true,\n            preguntas_taller: [],\n            pregunta_id: '',\n            puntaje: '',\n            btnCreaPreg: 'Crear',\n            _idpreg: '',\n            tipo_preg:'1',\n\n            //respuesta\n            pregunta_resp: '',\n            pregunta_taller_id: '',\n            respuesta: '',\n            estadoresp: false,\n            btnCreaResp: 'Crear',\n            respuestas_preg: [],\n            _idresp: '',\n\n            //\n            aux: '',\n            aux_v: ''\n\n        };\n//        this.fileInput = React.createRef();\n\n        this.addTaller = this.addTaller.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleChangeSelect = this.handleChangeSelect.bind(this);\n        this.showModal = this.showModal.bind(this);\n        this.hideModal = this.hideModal.bind(this);\n\n        this.addPregunta = this.addPregunta.bind(this);\n        this.editPregunta = this.editPregunta.bind(this);\n        this.deletePregunta = this.deletePregunta.bind(this);\n\n\n        this.addRespuesta = this.addRespuesta.bind(this);\n    }\n\n    componentDidMount() {\n        this.getTalleres(); //Para que inicie la pantalla de tareas\n        this.getAreas();\n    }\n    getAreas() {\n        axios.get(`${REACT_APP_HOST}/api/areas`).then((response) => {\n            console.log(response.data)\n            this.setState({areas: response.data})\n        })\n    }\n\n    getTalleres() {\n        axios.get(`${REACT_APP_HOST}/api/talleres_ar`).then((response) => {\n//        axios.get(`${REACT_APP_HOST}/api/talleres`).then((response) => {\n            console.log(response.data)\n            this.setState({talleres: response.data})\n\n        })\n    }\n    addTaller(e) {\n        e.preventDefault();\n        const {errors, ...sinErrors} = this.state;\n        const result = validation(sinErrors);\n//        console.log(result);\n\n        this.setState({errors: result});\n        if (!Object.keys(result).length) {\n\n            let datos = new FormData();\n            datos.append('area_id', this.state.area_id);\n            datos.append('title', this.state.title);\n            datos.append('description', this.state.description);\n            datos.append('tiempo', this.state.tiempo);\n            datos.append('intentos', this.state.intentos);\n            datos.append('evaluacion', this.state.evaluacion);\n            datos.append('aprobacion', this.state.aprobacion);\n            datos.append('estado', this.state.estado);\n            \n\n            if (this.state._id && this.state.aux==='') {\n                console.log('modifico');\n                datos.append('image', this.state.image);\n            } else if(this.state._id && this.state.aux.name) {\n                 console.log('modifico imagen');\n                datos.append('image', this.state.image.name);\n            }else{\n                 console.log('guardo');\n                datos.append('image', this.state.image.name); \n            }\n            \n            if (this.state._id && this.state.aux_v==='') {\n                console.log('modifico');\n                datos.append('video', this.state.video);\n            } else if(this.state._id && this.state.aux_v.name) {\n                 console.log('modifico video');\n               datos.append('video', this.state.video.name);\n            }else{\n                 datos.append('video', this.state.video);\n            }\n\n\n            \n            if (this.state._id) {\n                if (this.state.aux.name) {\n                    this.deleteImage2();\n                    this.uploadImage2();\n                }\n                if (this.state.aux_v.name) {                   \n                      this.deleteVideo2();  \n                    this.uploadVideo2();\n                }\n                axios.put(`${REACT_APP_HOST}/api/talleres/` + this.state._id, datos).then(async(data) => {\n                    console.log(data);\n                    Swal({\n                        title: 'Taller Actualizada',\n                        text: 'ok',\n                        icon: 'success',\n                        timer: 2000,\n                        button: false\n                    });\n                    this.getTalleres();\n                    this.setState({title: '', description: '', tiempo: '30', intentos: '1',aprobacion:'10',estado:'1', _id: '', textButton: 'REGISTRAR',header: 'Insertar Taller', modalOpen: false, image: '',videoload:false, aux:'',aux_v:'',errors: {}});\n                }).catch(err => console.error(err));\n            } else {\n                axios.post(`${REACT_APP_HOST}/api/talleres`, datos).then(async(data) => {\n                    console.log(data);\n                    let cargarimg = await this.uploadImage();\n                    Swal({\n                        title: 'Taller Registrada',\n                        text: 'ok',\n                        icon: 'success',\n                        timer: 2000,\n                        button: false\n                    });\n                    this.getTalleres()\n                    this.setState({title: '', description: '', tiempo: '30', intentos: '1',aprobacion:'10',estado:'1', image: '', aux:'', aux_v:''});\n                })\n                        .catch(err => console.error(err));\n            }\n        }\n    }\n    \n    validarEliminacion(id, image, video, taller){\n        axios.get(`${REACT_APP_HOST}/api/preguntas/`+ id).then((response)=> {\n            if(response.data.length<=0){\n                this.deleteTaller(id, image, video, taller);\n            }else {\n                Swal({\n                title: '!Atención',\n                text:'Este Taller tiene Evaluacion registrados, imposible eliminar, !Puede desactivarlo',\n                icon: 'warning',\n                button: true\n           });\n            }\n        })\n    }\n    \n    deleteTaller(id, image, video, taller) {\n        this.setState({img_temp: image});\n        this.setState({video_temp: video});\n        Swal({\n            title: `Esta seguro de eliminar el taller ${taller}`,\n            text: ' La tarea se eliminara definitivamente',\n            icon: 'warning',\n            buttons: ['Cancelar', 'Sí'],\n            dangerMode: true\n        }).then((value) => {\n            if (value) {\n                axios.delete(`${REACT_APP_HOST}/api/talleres/` + id).then(async(response) => {\n//                axios.delete('http://localhost:4000/api/talleres/' + id).then((response) => {\n                    console.log(response.data);\n                    let eliminarimg = await this.deleteImage();\n                    if (video !== '...') {\n                        let eliminarvideo = await this.deleteVideo();\n                    }\n                    Swal({\n                        title: 'Taller eliminada',\n                        icon: 'success',\n                        timer: 1000,\n                        button: false\n                    });\n                    this.getTalleres();\n                });\n            }\n        });\n    }\n\n    editTaller(id) {\n        axios.get(`${REACT_APP_HOST}/api/talleres/` + id).then((response) => {\n            console.log(response.data);\n            this.setState({\n                title: response.data.title,\n                description: response.data.description,\n                tiempo: response.data.tiempo,\n                intentos: response.data.intentos,\n                aprobacion: response.data.aprobacion,\n                estado: response.data.estado,\n                evaluacion: response.data.evaluacion,\n                area_id: response.data.area_id,\n                image: response.data.image,\n                img_temp: response.data.image,\n                video: response.data.video,\n                video_temp: response.data.video,\n                _id: response.data._id,\n                textButton: 'ACTUALIZAR',\n                header: 'Actualizar Taller',\n                videoload: true,\n\n            });\n            console.log(this.state.image);\n            console.log(this.state.video);\n        })\n    }\n    hideModal() {\n        this.setState({title: '', description: '', tiempo: '30', intentos: '1',aprobacion:'10',estado:'1', _id: '', textButton: 'REGISTRAR', header: 'Insertar Taller', modalOpen: false, image: null,aux:'',aux_v:'', errors: {}, videoload: false});\n    }\n    showModal() {\n        this.setState({modalOpen: true});\n    }\n    showModalEval(idtaller) {\n        this.setState({modalEval: true, taller_id: idtaller, pregunta_taller_id: idtaller});\n        this.getPreguntasXtaller(idtaller);\n\n    }\n\n    hideModalEval() {\n        this.setState({modalEval: false, idtaller: '', pregunta: '', estadopreg: true, _idpreg: '', pregunta_resp: '', respuesta: '', estadoresp: false, _idresp: ''});\n    }\n\n    handleChange(e) {\n        console.log(e.target.value);\n        if (e.target.type === 'checkbox') {\n            var value = e.target.checked;\n            var name = e.target.name;\n        } else {\n            var {name, value} = e.target;\n        }\n//       \n        this.setState({[name]: value});\n    }\n    handleChangeSelect(e) {\n        console.log(`Seleccionaste ${e.target.value}`);\n        var {name, value} = e.target;\n        this.setState({[name]: value}, () => this.getRespuestas());\n    }\n\n    uploadImage = async() => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`images/imgtaller/${this.state.image.name}`);\n        return await spaceRef.put(this.state.image);\n\n    }\n    uploadImage2 = () => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`images/imgtaller/${this.state.image.name}`);\n        return spaceRef.put(this.state.image);\n\n    }\n    deleteImage = async() => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`images/imgtaller/${this.state.img_temp}`);\n        return await  spaceRef.delete();\n\n    }\n    deleteImage2 = () => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`images/imgtaller/${this.state.img_temp}`);\n        return  spaceRef.delete();\n\n    }\n    uploadVideo2 =() => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`videos/videostaller/${this.state.video.name}`);\n        return spaceRef.put(this.state.video)\n\n    }\n    uploadVideo = async() => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`videos/videostaller/${this.state.video.name}`);\n        return await spaceRef.put(this.state.video)\n\n    }\n    deleteVideo2 = () => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`videos/videostaller/${this.state.video_temp}`);\n        if(this.state.video_temp!=='...'){\n           return  spaceRef.delete();  \n        }\n       \n\n    }\n    deleteVideo = async() => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`videos/videostaller/${this.state.video_temp}`);\n        return await  spaceRef.delete();\n\n    }\n\n    handleImageUpload = (e) => {\n        console.log(e.target.files[0]);\n        this.setState({image: e.target.files[0], aux: e.target.files[0]});\n        console.log(this.state.image)\n    }\n    handleVideoUpload = (e) => {\n        console.log(e.target.files[0]);\n        this.setState({video: e.target.files[0], aux_v:e.target.files[0]});\n        console.log(this.state.video)\n    }\n\n    agregarRespuesta = (e) => {\n\n//Variables\n        var listaResp = document.getElementById('lista');\n        var cont = listaResp.children.length + 1;\n\n        var newResp = document.createElement('li');\n        newResp.setAttribute('class', 'list-unstyled');\n\n        //Contenedor de los 2 contenedores\n        var contenedorMain = document.createElement('div');\n        contenedorMain.setAttribute('class', 'row');\n\n        //contenedor del inputText\n        var contenedorText = document.createElement('div');\n        contenedorText.setAttribute('class', 'col-md-9');\n\n        //contenedor del inputCheck\n        var contenedorCheck = document.createElement('div');\n        contenedorCheck.setAttribute('class', 'col-md-1');\n\n        //contenedor del boton remover\n        var contenedorRemover = document.createElement('div');\n        contenedorRemover.setAttribute('class', 'col-md-1');\n\n        //text\n        var inputtextResp = document.createElement('input');\n        inputtextResp.setAttribute('type', 'text');\n        inputtextResp.setAttribute('name', 'respuesta' + cont + '');\n        inputtextResp.setAttribute('class', 'form-control form-control-sm mt-2');\n        inputtextResp.setAttribute('value', 'Respuesta ' + cont + '');\n\n        //checkBox\n        var inputcheckResp = document.createElement('input');\n        inputcheckResp.setAttribute('type', 'checkbox');\n        inputcheckResp.setAttribute('name', 'estadopreg' + cont + '');\n        inputcheckResp.setAttribute('class', 'form-control form-control-sm mt-2');\n\n        //Quitar Respuesta\n        var quitarResp = document.createElement('button');\n        quitarResp.setAttribute('id', 'delete');\n        quitarResp.setAttribute('type', 'button');\n        quitarResp.setAttribute('class', 'btn btn-secondary btn-sm mt-2');\n        quitarResp.innerText = 'X';\n        quitarResp.onclick = function () {\n            //El método Node.removeChild() elimina un nodo hijo del DOM \n            listaResp.removeChild(newResp); //De listaResp que es el elemento padre remuevo newResp que es el elemento hijo\n        }\n\n        contenedorText.appendChild(inputtextResp);\n        contenedorCheck.appendChild(inputcheckResp);\n        contenedorRemover.appendChild(quitarResp);\n\n        contenedorMain.appendChild(contenedorText);\n        contenedorMain.appendChild(contenedorCheck);\n        contenedorMain.appendChild(contenedorRemover);\n\n        newResp.appendChild(contenedorMain);\n        listaResp.appendChild(newResp);\n    }\n\n    addPregunta(e) {\n        e.preventDefault();\n        /**\n         * Uso este metodo de enviar datos, solo en caso de enviar archivos (file,video, img)\n         * let datos = new FormData();\n         //        datos.append('taller_id', this.state.taller_id);\n         //        datos.append('pregunta', this.state.pregunta);\n         //        datos.append('respuesta', this.state.respuesta);\n         //        datos.append('estadopreg', this.state.estadopreg) ;\n         * @type type\n         */\n//        \n        const datos = {\n            taller_id: this.state.taller_id,\n            pregunta: this.state.pregunta,\n            puntaje: this.state.puntaje,\n            estadopreg: this.state.estadopreg,\n            tipo_preg: this.state.tipo_preg\n\n        };\n        if (this.state._idpreg) {\n            axios.put(`${REACT_APP_HOST}/api/preguntas/` + this.state._idpreg, datos).then((response) => {\n                console.log(response.data);\n                Swal({\n                    title: 'Pregunta modificada exitosamente',\n                    text: 'ok',\n                    icon: 'success',\n                    timer: 2000,\n                    button: false\n                });\n                this.getPreguntasXtaller(this.state.taller_id);\n            }).catch(err => console.error(err));\n        } else {\n            axios.post(`${REACT_APP_HOST}/api/preguntas`, datos).then((response) => {\n                console.log(response.data);\n                Swal({\n                    title: 'Pregunta registrada exitosamente',\n                    text: 'ok',\n                    icon: 'success',\n                    timer: 2000,\n                    button: false\n                });\n                this.getPreguntasXtaller(this.state.taller_id);\n            }).catch(err => console.error(err));\n        }\n\n        this.setState({idtaller: '', pregunta: '', puntaje: '', estadopreg: true, _idpreg: '',tipo_preg:'1', btnCreaPreg: 'Crear'});\n\n\n    }\n    getPreguntasXtaller(id) {\n        axios.get(`${REACT_APP_HOST}/api/preguntas/` + id).then((response) => {\n            this.setState({preguntas_taller: response.data});\n        });\n    }\n    editPregunta(id_preg) {\n        axios.get(`${REACT_APP_HOST}/api/preguntas/` + this.state.taller_id + '/' + id_preg).then((response) => {\n            this.setState({pregunta: response.data.pregunta,\n                puntaje: response.data.puntaje,\n                _idpreg: response.data._id,\n                estadopreg: response.data.estadopreg,\n                tipo_preg: response.data.tipo_preg,\n                btnCreaPreg: 'Actualizar'});\n        })\n\n    }\n    \n    validarEliminacionPreg(id_preg){\n        axios.get(`${REACT_APP_HOST}/api/respuestas/` + id_preg+'/'+this.state.taller_id).then( (response)=> {\n            if(response.data<=0){\n                this.deletePregunta(id_preg);\n            }else{\n             Swal({\n                title: '!Atención',\n                text:'Esta pregunta tiene respuestas registrados, imposible eliminar, !Primero debe eliminar las respuestas de la misma',\n                icon: 'warning',\n                button: true\n           });\n            }\n        });\n    }\n    \n    deletePregunta(id_preg) {\n        Swal({\n            title: 'Esta seguro de eliminar la pregunta',\n            text: ' La pregunta se eliminara definitivamente',\n            icon: 'warning',\n            buttons: ['Cancelar', 'Sí'],\n            dangerMode: true\n        }\n        ).then((value) => {\n            if (value) {\n                axios.delete(`${REACT_APP_HOST}/api/preguntas/` + id_preg+'/'+this.state.taller_id).then((response) => {\n                    if (response.data) {\n                        Swal({\n                            title: 'Pregunta eliminada exitosamente',\n                            text: 'ok',\n                            icon: 'success',\n                            timer: 2000,\n                            button: false\n                        })\n                        this.setState({idtaller: '', pregunta: '', estadopreg: true, _idpreg: ''});\n                        this.getPreguntasXtaller(this.state.taller_id);\n                    }\n\n                })\n\n            }\n        })\n//        alert(id_preg);\n\n    }\n\n    addRespuesta(e) {\n        e.preventDefault();\n        const datos = {\n            pregunta_resp: this.state.pregunta_resp,\n            respuesta: this.state.respuesta,\n            estadoresp: this.state.estadoresp,\n            resp_taller_id: this.state.pregunta_taller_id\n        };\n        if (this.state._idresp) {\n            axios.put(`${REACT_APP_HOST}/api/respuestas/` + this.state._idresp, datos).then((response) => {\n                console.log(response.data);\n                Swal({\n                    title: 'Respuesta Actualizada exitosamente',\n                    text: 'ok',\n                    icon: 'success',\n                    timer: 2000,\n                    button: false\n                });\n                this.getRespuestas();\n                this.setState({respuesta: '', estadoresp: false, _idresp: '', btnCreaResp: 'Crear'});\n            }).catch(err => console.error(err));\n        } else {\n            axios.post(`${REACT_APP_HOST}/api/respuestas`, datos).then((response) => {\n                console.log(response.data);\n                Swal({\n                    title: 'Respuesta registrada exitosamente',\n                    text: 'ok',\n                    icon: 'success',\n                    timer: 2000,\n                    button: false\n                });\n                this.getRespuestas();\n                this.setState({respuesta: '', estadoresp: false, btnCreaResp: 'Crear'});\n            }).catch(err => console.error(err));\n        }\n\n\n\n    }\n    getRespuestas() {\n        axios.get(`${REACT_APP_HOST}/api/respuestas/` + this.state.pregunta_resp + '/' + this.state.taller_id).then((response) => {\n            if (response) {\n                this.setState({respuestas_preg: response.data});\n            } else {\n                Swal({\n                    title: 'No se encontraron respuestas',\n                    icon: 'warning',\n                    timer: 2000,\n                    button: false\n                });\n            }\n\n        });\n\n    }\n\n    editRespuesta(id_resp) {\n        axios.get(`${REACT_APP_HOST}/api/respuestas/` + id_resp).then((response) => {\n            this.setState({btnCreaResp: 'Actualizar', respuesta: response.data.respuesta, estadoresp: response.data.estadoresp, puntaje: response.data.puntaje, pregunta_resp: response.data.pregunta_resp, _idresp: response.data._id});\n        })\n    }\n    deleteRespuesta(id_resp) {\n\n        Swal({\n            title: 'Esta seguro de eliminar la respuesta',\n            text: ' La respuesta se eliminara definitivamente',\n            icon: 'warning',\n            buttons: ['Cancelar', 'Sí'],\n            dangerMode: true\n        }).then((value) => {\n            if (value) {\n                axios.delete(`${REACT_APP_HOST}/api/respuestas/` + id_resp).then((response) => {\n                    if (response.data) {\n                        Swal({\n                            title: 'Respuesta eliminada exitosamente',\n                            text: 'ok',\n                            icon: 'success',\n                            timer: 2000,\n                            button: false\n                        })\n                        this.getRespuestas();\n                        this.setState({respuesta: '', estadoresp: false, _idresp: ''});\n                    }\n                })\n            }\n        })\n    }\n    \n    downloadReporte=(e)=>{\n      const newData=this.state.talleres.map(data=>{\n        delete data._id;\n        delete data.__v;\n        delete data.talleresArea;\n        \n        return data;\n      })\n      const workSheet=XLSX.utils.json_to_sheet(newData);\n      const workBook=XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(workBook,workSheet,\"talleres\");\n      //Buffer\n      let buf=XLSX.write(workBook,{bookType:\"xlsx\",type:\"buffer\"});\n      //Binary string\n      XLSX.write(workBook,{bookType:\"xlsx\",type:\"binary\"});\n      //Download\n      XLSX.writeFile(workBook,\"Talleres.xlsx\");\n\n\n    }\n    \n\n  \n    render() {\n\n        const {errors} = this.state;\n        return (\n                <div className=\"container-fluid\">\n                    <Navigation />\n                    <div className=\"containerList\">\n                        <br/>\n                        <Button  color=\"primary\" onClick={this.showModal}><FontAwesomeIcon icon={faFileAlt}/> Nuevo Taller</Button>\n\n                        \n                        {this.state.talleres.length > 0 ?\n                                <DataTable\n                           \n                                columns={[\n                                   {title:'AREA', field:'talleresArea.title'},\n                                   {title:'TALLER', field:'title'},\n                                   {title:'DESCRIPCION', field:'description'},\n                                   {title:'TIEMPO', field:'tiempo',render:(rowData)=><Grid><Avatar>{rowData.tiempo}</Avatar>Minutos</Grid>},\n                                   {title:'INTENTOS', field:'intentos',render:(rowData)=><Grid><Avatar>{rowData.intentos}</Avatar></Grid>},\n                                   {title:'APROBACIÓN', field:'aprobacion',render:(rowData)=><Grid><Avatar>{rowData.aprobacion}</Avatar></Grid>},\n                                   \n                                   {title:'ESTADO', field:'estado',\n                                       render:(rowData)=>rowData.estado==='0'?<span size=\"sm\" className='badge text-white bg-danger'>Inactivo <FontAwesomeIcon icon={faFileAlt} /></span>\n                                   :<span size=\"sm\" className='badge bg-success text-white'>Activo <FontAwesomeIcon icon={faCheckCircle}/></span>\n                                   \n                                    },\n                                   \n                                   {title:'IMG-DIR', field:'image'},\n                                   {title:'VID-DIR', field:'video'},                                \n                                   {title:'EVALUACIÓN', field:'evaluacion',\n                                       render:(rowData)=>rowData.evaluacion==='0'?<Button size=\"sm\" color=\"info\" className=\"text-white\" onClick={()=>{this.showModalEval(rowData._id)}}>Crear <FontAwesomeIcon icon={faFileAlt} /></Button>\n                                   :<Button size=\"sm\" color=\"success\" className=\"text-white\" onClick={()=>{this.showModalEval(rowData._id)}}>Editar <FontAwesomeIcon icon={faCheckCircle}/></Button>\n                                   \n                                    }\n                \n                                               \n                                   \n                                ]}\n                                data={this.state.talleres}\n                                title='Lista de Talleres'\n                                actions={[                                   \n//                                   \n                                    {\n                                        icon:()=><a className=\"btn btn-warning btn-sm\" size=\"sm\"><FontAwesomeIcon icon={faEdit}/></a>,\n                                        tooltip:'Editar Taller',\n                                        onClick:(event, rowData)=>{this.showModal();this.editTaller(rowData._id); }                                         \n                                    },\n                                    {\n                                        icon:()=><a className=\"btn btn-danger btn-sm\" size=\"sm\"><FontAwesomeIcon icon={faTrash}/></a>,\n                                        tooltip:'Eliminar Taller',\n                                        onClick:(event, rowData)=>this.validarEliminacion(rowData._id, rowData.image,rowData.video, rowData.title)\n                                    },\n                                      {\n                                        icon:()=><span className=\"btn btn-success btn-sm\" ><FontAwesomeIcon icon={faFileExcel}/> Exportar</span>,\n                                        tooltip:'Exportar a Excel',\n                                        onClick:()=>this.downloadReporte(),\n                                        isFreeAction:true\n                                    }\n                                ]}\n\n                                options={{\n                                    actionsColumnIndex:-1,\n                                    exportButton:true,\n                                    headerStyle: {\n                                        backgroundColor: '#343a40',\n                                        color: '#FFF'\n                                    },\n                                    padding:'dense',//dense\n                                    pageSize:8,\n                                    pageSizeOptions:[8,15,30],\n                                    paginationType:'stepped'\n                                }}\n                                localization={{\n                                    pagination:  paginacion,\n                                    toolbar:toolbar,\n                                    header:{\n                                        actions:'ACCIONES'\n                                    }\n                                }}\n                                 style={{fontSize: \"15px\", padding:'15px', cellPadding:'0px'}}\n                            />    \n                            : <h1>No hay talleres registrados</h1>}\n                            \n                            \n                        <Modal isOpen={this.state.modalOpen}>\n                            <ModalHeader>\n                                <div><h3><FontAwesomeIcon icon={faBook}/> {this.state.header}</h3></div>\n                            </ModalHeader>\n                \n                            <ModalBody>\n                                <form onSubmit={this.addTaller} className=\"container\">\n                                    <div className=\"row py-2\">\n                                    \n                                    <InputGroup className=\"my-1\" >\n                                        <InputGroupText>\n                                            Área\n                                        </InputGroupText>\n                                        <select  name=\"area_id\" onChange={this.handleChange} value={this.state.area_id} className=\"form-control\">\n                                            <option>Seleccione una Area</option>\n                                            {\n                                                this.state.areas.map(data => {\n                                                    return(\n                                                                    <option key={data._id} value={data._id}>{data.title}</option>\n                                                );\n                                                })\n                                            }\n                                        </select>\n                                    </InputGroup> \n                                        {errors.area_id && <P errors={errors.area_id} />}\n                                    </div>\n                                    <div className=\"row py-2\">\n                                     <InputGroup className=\"my-1\" >\n                                        <InputGroupText>\n                                            Título\n                                        </InputGroupText>\n                                        <input name=\"title\" onChange={this.handleChange} type=\"text\" className=\"form-control \" placeholder=\"Title\" value={this.state.title}/>                                    \n                                     </InputGroup>\n                                      {errors.title && <P errors={errors.title} />}\n                                    </div>\n                \n                                    <div className=\"row py-2\">\n                                    <InputGroup className=\"my-1\" >\n                                        <InputGroupText>\n                                            Descripción\n                                        </InputGroupText>\n                                        <textarea name=\"description\" onChange={this.handleChange} type=\"text\" className=\"form-control form-control-sm\" placeholder=\"Description\" value={this.state.description}/>                                      \n                                    </InputGroup>  \n                                    {errors.description && <P errors={errors.description} />}\n                                    </div>                            \n                \n                                    <div className=\"row py-2\">\n                                        <CustomInput className='form-control form-control-sm' name=\"image\" type=\"file\" onChange={this.handleImageUpload} id=\"image\" label='Seleccione una Imagen' accept=\"image/png, .jpeg, .jpg\"/>\n                                        {errors.image && <P errors={errors.image} />}\n                                    </div>\n                \n                                    {this.state.videoload ?\n                                    <div className=\"row py-2\">\n                                        <CustomInput name=\"video\" type=\"file\" onChange={this.handleVideoUpload} id=\"video\" label='Seleccione una Presentación' accept=\"video/mp4, .vlc, .avi\"/>\n                                    </div>\n                            : <p style={{color: 'blue', fontSize: 12}}>Para cargar una presentacion utilize la opcion Editar</p>\n                                    }\n                                    <div className=\"row py-2 border bg-info\">\n                                        <div className=\"col-md-12 text-left\">\n                                            <p className=\"font-weight-bold text-white\" style={{fontSize: 15}}>Esta sección en caso de evaluación</p>                \n                                        </div>\n                                         <InputGroup className=\"col-md-6\">\n                                            <InputGroupText>\n                                              Tiempo\n                                            </InputGroupText>\n                                                <Input type=\"number\" name=\"tiempo\" onChange={this.handleChange} value={this.state.tiempo} placeholder=\"Tiempo de eval\"/>\n                                          </InputGroup>\n                                         <InputGroup className=\" col-md-6\" >\n                                            <InputGroupText>\n                                              # Intentos\n                                            </InputGroupText>\n                                                <Input type=\"number\" name=\"intentos\" onChange={this.handleChange} value={this.state.intentos} placeholder=\"Intentos eval\"/>\n                                          </InputGroup>                                         \n                                         <InputGroup className=\" col-md-12 my-1\" >\n                                            <InputGroupText>\n                                              Puntos para Aprobación\n                                            </InputGroupText>\n                                                <Input type=\"number\" name=\"aprobacion\" onChange={this.handleChange} value={this.state.aprobacion} placeholder=\"Aprobar con\"/>\n                                          </InputGroup>                                         \n                                     \n                                    </div>\n                                    <div className=\"row my-2\">\n                                    <InputGroup className=\"my-1\" >\n                                        <InputGroupText>\n                                            Estado del Taller\n                                        </InputGroupText>\n                                        <select className=\"form-control\" name=\"estado\" onChange={this.handleChange} value={this.state.estado}>\n                                            <option value='1'>Activo</option>\n                                            <option value=\"0\">Inactivo</option>\n                                        </select>\n                                    </InputGroup> \n                                    </div>                                  \n                                    <br/>\n                                    \n                                    \n                                    <Button size='sm' id=\"btnInsertar\"><FontAwesomeIcon icon={faSave}/>  {this.state.textButton}</Button>{' '}\n                                    <Button size='sm' id=\"btnCancelar\" onClick={this.hideModal} className=\"btn btn-danger\" data-dismiss=\"modal\" aria-hidden=\"true\"><FontAwesomeIcon icon={faBan}/> CANCELAR</Button>\n                                </form>\n                            </ModalBody>               \n                        </Modal>\n                \n                \n                        <Modal isOpen={this.state.modalEval} size=\"lg\">\n                            <div className='p-2 border'>\n                                <Row>\n                                    <Col xs='11'>\n                                    <h4>Preguntas y Respuestas</h4>\n                                    </Col>\n                                    <Col xs='1'>\n                                    <Button color=\"danger\" size=\"sm\" onClick={() => {\n                        this.hideModalEval()\n                                        }}>X</Button>\n                                    </Col>\n                                </Row>\n                            </div>               \n                            <ModalBody>\n                               \n                                <form onSubmit={this.addPregunta} className=\"container  p-3\" style={{border: '3px solid rgba(0, 0, 255, 0.1)'}}>\n                                      <h6>Registre sus preguntas</h6>\n                                    <Row>\n                                        <Col xs=\"12\">\n                                                  \n                                        <Row>               \n                                            <Col xs=\"8\" className=\"my-2\">\n                                            <textarea type=\"text\" name=\"pregunta\" onChange={this.handleChange} value={this.state.pregunta} className=\"form-control form-control-sm\" placeholder=\"Ingrese la pregunta\" required/>   \n                                            </Col>\n                                            <Col xs=\"4\" className=\"my-2\">\n                                             <select name=\"tipo_preg\" className=\"form-control\" onChange={this.handleChange} value={this.state.tipo_preg}>\n                                                    <option value=\"1\">Respuesta Unica</option>\n                                                    <option value=\"2\">Respuesta Multiple</option>\n                                            </select>\n                                            </Col>\n                                            \n                                        </Row>\n                                        <Row>\n                                            <Col xs=\"2\">  \n                                            <input type='number' name='puntaje' onChange={this.handleChange} value={this.state.puntaje} className=\"form-control form-control-sm\" placeholder=\"Puntaje\" required/>                             \n                                            </Col>\n                                            <Col xs=\"1\">              \n                                            <input type=\"checkbox\" name=\"estadopreg\" onChange={this.handleChange} checked={this.state.estadopreg} className=\"form-control form-control-sm\"/> \n                                            </Col>                                        \n                                            <Col xs=\"2\">\n                                            <Button size=\"sm\" color=\"primary\"><FontAwesomeIcon icon={faSave}/> {this.state.btnCreaPreg}</Button>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col xs=\"10\" className=\"mt-2\">\n                                            <select  name=\"pregunta_id\" onChange={this.handleChange} value={this.state.pregunta_id} className=\"form-control form-control-sm\">\n                                                <option>Seleccione una Pregunta</option>\n                \n                                                {\n                                                    this.state.preguntas_taller.map(data => {\n                                                        return(\n                                                                        <option key={data._id} value={data._id}>{data.pregunta} {'    / Puts: '} {data.puntaje}</option>\n                                                        );\n                                                    })\n                                                }\n                                            </select>                                    \n                                            </Col>                                      \n                                            <Col xs=\"2\"  className=\"mt-2 text-right\">                                      \n                                            <Button size=\"sm\" color=\"warning\" onClick={() => {\n                        this.editPregunta(this.state.pregunta_id)\n                                                }}><FontAwesomeIcon icon={faEdit}/></Button>  {' '}\n                                            <Button size=\"sm\" color=\"danger\" onClick={() => {\n                        this.validarEliminacionPreg(this.state.pregunta_id)\n                                                }}><FontAwesomeIcon icon={faTrash}/></Button> \n                                            </Col>                                      \n                                        </Row>\n                                        </Col>\n                                    </Row>\n                                </form>\n                \n                                <hr/>\n                                \n                                <form onSubmit={this.addRespuesta} className=\"container p-3\" style={{border: '3px solid rgba(60, 179, 113, 0.3)'}}>\n                                <h6>Registre sus respuestas</h6>\n                                    <Row>\n                                        <Col xs=\"12\">                \n                                        <Row>\n                                            <Col xs=\"12\">\n                                            <select  name=\"pregunta_resp\" onChange={this.handleChangeSelect} value={this.state.pregunta_resp} className=\"form-control form-control-sm\">\n                                                <option>Seleccione una Pregunta</option>                                  \n                                                {\n                    this.state.preguntas_taller.map(data => {\n                                                        return(\n                                                                        <option key={data._id} value={data._id}>{data.pregunta}</option>\n                                );\n                                                    })\n                                                }\n                                            </select> \n                                            </Col>\n                                          \n                                        </Row>\n                                        <Row className=\"mt-2\">               \n                                            <Col xs=\"9\">\n                                            <input type=\"text\" name=\"respuesta\" onChange={this.handleChange} value={this.state.respuesta} className=\"form-control form-control-sm\" placeholder=\"Ingrese una respuesta\" required/> \n                                            </Col>\n                \n                                            <Col xs=\"1\">              \n                                            <input type=\"checkbox\" name=\"estadoresp\" onChange={this.handleChange} checked={this.state.estadoresp} className=\"form-control form-control-sm\"/> \n                                            </Col>\n                                            <Col xs=\"2\" className=\"text-right\"> \n                                            <Button size=\"sm\" color=\"primary\"><FontAwesomeIcon icon={faSave}/> {this.state.btnCreaResp}</Button>               \n                                            </Col>\n                                        </Row>\n                                        </Col>\n                                    </Row>\n                                </form>\n                                <br/>\n                                <br/>\n                \n                                <Row className=\"container\">\n                                    <Table style={{fontSize: 12}}>\n                                        <thead>\n                                            <tr>\n                                                <th>Pregunta</th>\n                                                <th>Respuestas</th>\n                                                <th>Estado</th>\n                                                <th>Acciones</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                    this.state.respuestas_preg.map(data => {\n                                                    return(\n                                                                    <tr key={data.respuestas._id}>\n                                                                        <td>{data.pregunta}</td>\n                                                                        <td>{data.respuestas.respuesta}</td>\n                                                                        {\n                                                                        data.respuestas.estadoresp === true ?\n                                                                                                                                <td style={{color: 'green'}}><FontAwesomeIcon icon={faCheckCircle}/></td>\n                                                                                :\n                                                                                                                        <td style={{color: 'red'}}><FontAwesomeIcon icon={faSkull}/></td>\n                                                                }\n                                                                <td>\n                                                                    <Button color=\"warning\" onClick={() => {\n\n                                                                                                        this.editRespuesta(data.respuestas._id);\n                                                                                                    }} size=\"sm\"><FontAwesomeIcon icon={faEdit}/></Button>{' '}\n                                        \n                                                                    <Button color=\"danger\" onClick={ () => {\n                                                                            this.deleteRespuesta(data.respuestas._id)\n                                                                                                    }} size=\"sm\"><FontAwesomeIcon icon={faTrash}/></Button>\n                                                                </td>\n                                                                </tr>\n                                )\n                                            })\n                                        }\n                                        </tbody>\n                                    </Table>                \n                                </Row>\n                \n                \n                            </ModalBody>                \n                \n                        </Modal>\n                    </div>\n                </div>\n\n                );\n    }\n\n}\n;\nexport default AdminTalleres;","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\P.js",[],"C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\Presentacion.js",["138","139","140","141"],"import React, {useState, useEffect} from 'react';\nimport {Container, Row, Col, Button, CardTitle, CardText, Card, CardHeader, CardBody} from 'reactstrap';\nimport ReactPlayer from 'react-player';\nimport{useParams, Link} from 'react-router-dom';\nimport axios from 'axios';\n\nimport Navigation from '../components/Navigation';\nimport Breadcrumb_nav from '../components/Breadcrumb_nav';\n\nimport Cookies from 'universal-cookie';\n\nimport { FontAwesomeIcon }from '@fortawesome/react-fontawesome'\nimport {faPenAlt}from '@fortawesome/free-solid-svg-icons'\n\n\nconst cookies = new Cookies();\n//import Styles from '../index.css'\n\n\nconst{REACT_APP_HOST, REACT_APP_PATCH_VID} = process.env;\n\nconst styles = {\n    border: {\n        borderStyle: 'groove',\n        color: \"#3c3a2d\",\n        display: 'flex'\n    }\n}\n\nfunction Presentacion() {\n\n    const {id} = useParams();\n    const {estado} = useParams();\n    const[taller, getTaller] = useState([]);\n    const[value, setstatusBoton] = useState(false);\n\n    useEffect(() => {\n        if (!cookies.get('nombre')) {\n            window.location.href = '/'\n        }\n        const obtenertaller = () => {\n            axios.get(`${REACT_APP_HOST}/api/talleres/${id}`).then(response => {\n                getTaller(response.data);\n//                console.log(response.data)\n            });\n        }\n        obtenertaller();\n        visitas();\n    }, [id]);\n\n\n    const visitas=()=>{\n        const datos={id_taller:`${id}`};\n        \n        axios.post(`${REACT_APP_HOST}/api/visitastaller`,datos).then( (response)=> {\n            if(response.data){\n                console.log('visita registrada');\n            }\n        });\n    }\n    const evalEnable = (e) => {\n        setstatusBoton(true);\n    }\n    const evalDisable = (e) => {\n        setstatusBoton(false);\n    }\n\n\n\n\n\n    return(\n            <div>\n                <Navigation />\n                <main className=\"bg-dark\">\n                    {taller.video !== '...' ?\n                           \n                            <Row>\n                                                                                                                          \n                                <div className=\" col-md-12 d-flex text-white p-3\">\n                                    <div className=\" col-md-12\">\n                                        <div className=\"d-flex\"><CardTitle className=\"font-weight-bold\" tag=\"h5\">{taller.title}</CardTitle></div>\n                                    </div>\n                                   \n                                </div>\n                                \n                                <Col xs={12}>\n\n                                <ReactPlayer\n                                    url={`${REACT_APP_PATCH_VID}videostaller%2F${taller.video}?alt=media`}   \n                                    controls={true}\n                                    className=\"react-player\"\n                                    width='100%'\n                                    height='100%'    \n                                    playing={true}\n                                    onEnded={evalEnable}\n                                    onPlay={evalDisable}\n                                    config={{\n                                        file: {\n                                            attributes: {\n                                                disablePictureInPicture: \"false\",\n                                                controlsList: 'nodownload  noplaybackrate'\n\n\n                                            }\n                                        }\n                                    }}\n                                    />\n                                    \n                    \n                    \n                                </Col>\n                    \n                                <div className=\" col-md-12 d-flex text-white p-3\">\n                                   {estado==='0'?\n                                    <div className=\" col-md-12 text-right\">\n                                        <Link to={`/evaluacion/${id}`}><Button size=\"lg\" disabled={!value} color=\"success\"><FontAwesomeIcon icon={faPenAlt}/> Evaluación</Button></Link>                                                              \n                                    </div>\n                                     :''}\n                                </div>\n                    \n                            </Row>\n                                :\n                            <div className=\"row p-3 d-flex flex-column align-items-center\">\n                                <div className=\"col-md-4\">\n                    \n                                    <Card>\n                                    <CardHeader><div className=\"pl-2\"><CardTitle className=\"font-weight-bold\" tag=\"h5\">{taller.title}</CardTitle></div></CardHeader>\n                                    <CardBody><div className=\"pl-2\"><CardText>{taller.description}</CardText></div></CardBody>\n                                    {estado==='0'?\n                                    <div className=\"pl-2 pb-2 text-center\">\n                                        <Link to={`/evaluacion/${id}`}target=\"_blank\"><Button disabled={value} color=\"success\"><FontAwesomeIcon icon={faPenAlt}/> Evaluacion</Button></Link>\n                                    </div>\n                                    :''}\n                                    </Card>\n                    \n                                </div><br/>\n                                <div  className=\"col-md-8 text-center text-white\">\n                    \n                                    <h1>No hay Presentacion Registrada</h1>\n                    \n                                </div>\n                    \n                    \n                    \n                            </div>\n                    }\n                </main>\n            </div>\n            )\n\n}\n\nexport default Presentacion;\n\n\n","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\AdminAreas.js",["142","143","144","145","146","147","148","149","150","151","152","153"],"import React, {Component}from'react';\nimport {render}from'react-dom';\nimport {Table, Button, Container,InputGroup,InputGroupText, CustomInput, Modal, ModalHeader, ModalBody, ModalFooter, formGroup} from 'reactstrap';\nimport Swal from 'sweetalert';\nimport axios from 'axios'\nimport P from '../components/P';\nimport Styles from '../index.css'\n\nimport Navigation from '../components/Navigation';\nimport Breadcrumb_nav from '../components/Breadcrumb_nav';\nimport Cookies from 'universal-cookie';\nimport firebase from '../../src/setting/server_firebase';\nimport { FontAwesomeIcon }from '@fortawesome/react-fontawesome';\nimport {faCheckCircle, faExclamationCircle,faSave,faBan,faBook, faFileAlt,faExclamationTriangle, faEdit, faTrash, faFile,faFileExcel}from '@fortawesome/free-solid-svg-icons';\nimport DataTable from \"@material-table/core\";\nimport XLSX from 'xlsx'\n\nconst cookies = new Cookies();\n\nconst {REACT_APP_HOST, REACT_APP_STORAGE} = process.env;\n\nvar storage = firebase.app().storage(`${REACT_APP_STORAGE}`);\n\nconst validation = data => {\n    const errors = {};\n    if (!data.title) {\n        errors.title = 'El campo title es obligatorio';\n    }\n    if (!data.image) {\n        errors.image = 'La imagen es obligatorio';\n    }\n    return errors;\n}\n\nconst paginacion={\n                                        labelRowsSelect:'Filas',\n                                        labelRowsPerPage:'Filas por Pagina',\n                                        previousAriaLabel:'Pagina Anterior',\n                                        previousTooltip:'Pagina Anterior',\n                                        nextAriaLabel:'Siguiente Página',\n                                        nextTooltip:'Siguiente Página',\n                                        lastAriaLabel:'Ultima page',\n                                        lastTooltip:'Ultima page',\n                                        firstAriaLabel:'Primera Página',\n                                        firstTooltip:'Primera Página'\n}\n\nconst toolbar={\n    exportTitle:'Exportar',\n    exportAriaLabel:'Exportar',\n    exportName:'Exportar a',\n    searchTooltip:'Buscar',\n    searchPlaceholder:'Buscar'\n}\n\n\nclass AdminAreas extends Component {\n    constructor() {\n        super();\n        this.state = {\n            title: '',\n            description: '',\n            estado: '1',\n            _id: '',\n            areas: [],\n            textButton: 'REGISTRAR',\n            header: 'Insertar Area',\n            modalOpen: false,\n            img_temp:'',\n            image: '',\n            aux:'',\n            errors: {},\n\n        }\n\n        this.showModal = this.showModal.bind(this);\n        this.hideModal = this.hideModal.bind(this);\n        this.handleChange = this.handleChange.bind(this)\n        this.addArea = this.addArea.bind(this)\n    }\n    componentDidMount() {//Es como el initComponents\n        if (!cookies.get('nombre')) {\n            window.location.href = '/'\n        }\n        this.getAreas();//Para que inicie la pantalla de tareas\n    }\n    getAreas() {\n        axios.post(`${REACT_APP_HOST}/api/areas/get_areas`).then((response) => {\n            this.setState({areas: response.data})\n//            console.log(response.data);\n        })\n    }\n\n    addArea(e) {\n        e.preventDefault();\n\n        const {errors, ...sinErrors} = this.state;\n        const result = validation(sinErrors);\n        this.setState({errors: result});\n\n        if (!Object.keys(result).length) {\n            let datos = new FormData();\n            datos.append('title', this.state.title);\n            datos.append('description', this.state.description);\n            datos.append('estado', this.state.estado);\n//            datos.append('image', this.state.image.name);\n            \n            if (this.state._id && this.state.aux==='') {\n//                console.log('modifico');\n                datos.append('image', this.state.image);\n            } else if(this.state._id && this.state.aux.name) {\n//                 console.log('modifico imagen');\n                datos.append('image', this.state.image.name);\n            }else{\n//                 console.log('guardo');\n                datos.append('image', this.state.image.name); \n            }\n            \n            if (this.state._id) {\n                \n                if (this.state.aux.name) {\n                    this.deleteImage2();\n                    this.uploadImage2();\n                }\n                \n                axios.put(`${REACT_APP_HOST}/api/areas/` + this.state._id, datos).then(async(response) => {\n                  \n                    Swal({\n                        title: 'Tarea Actualizada',\n                        icon: 'success',\n                        timer: 2000,\n                        button: false\n                    });\n                    this.getAreas();\n                    this.setState({title: '', description: '',estado:'1', _id: '', textButton: 'REGISTRAR', modalOpen: false, image: null,aux:'', errors: {}});\n                })\n            } else {\n                axios.post(`${REACT_APP_HOST}/api/areas`, datos).then(async(response) => {\n                    let cargar = await this.uploadImage();\n                    Swal({\n                        title: 'Area registrada',\n                        icon: 'success',\n                        timer: 2000,\n                        button: false\n                    });\n                    this.getAreas();\n                    this.setState({title: '', description: '',estado:'1',aux:'', image: null})\n                })\n            }\n        }\n\n    }\n\n    editArea(id) {\n        axios.get(`${REACT_APP_HOST}/api/areas/` + id).then((response) => {\n            this.setState({\n                title: response.data.title,\n                description: response.data.description,\n                estado: response.data.estado,\n                image: response.data.image,\n                img_temp: response.data.image,\n                _id: response.data._id,\n                textButton: 'ACTUALIZAR',\n                header: 'Actualizar Area',\n            })\n//            console.log(this.state.image)\n        })\n    }\n    \n    validarEliminacion(id_area, image){\n        axios.get(`${REACT_APP_HOST}/api/talleres/` + id_area+'/0').then( (response)=> {\n            if(response.data==='no_existe'){\n              this. deleteArea(id_area, image);\n            }else if(response.data ==='existe'){\n             Swal({\n                title: '!Atención',\n                text:'Esta Area tiene talleres registrados, imposible eliminar',\n                icon: 'warning',\n                button: true\n           });\n            }\n        });\n    }\n\n    deleteArea(id, image) {\n            \n         this.setState({img_temp:image});\n        Swal({\n            title: 'Esta seguro de eliminar el Area',\n            text: ' El area se eliminara definitivamente',\n            icon: 'warning',\n            buttons: ['Cancelar', 'Sí'],\n            dangerMode: true\n        }).then((value) => {\n            if (value) {\n                \n                axios.delete(`${REACT_APP_HOST}/api/areas/` + id).then(async(response) => {\n//                    console.log(response.data);\n                     let eliminar = await this.deleteImage();\n                    Swal({\n                        title: 'Area eliminada',\n                        icon: 'success',\n                        timer: 1000,\n                        button: false\n                    });\n                    this.getAreas();\n                });\n            }\n        });\n        \n    \n    }\n\n    showModal() {\n        this.setState({modalOpen: true});\n    }\n    hideModal() {\n        this.setState({title: '', description: '', modalOpen: false, textButton: 'REGISTRAR', header: 'Insertar Area', image: null})\n    }\n\n    handleChange(e) {\n        const{name, value} = e.target;\n        this.setState({[name]: value});\n//        console.log(e.target.value);\n    }\n    \n     uploadImage = async() => {\n        var storageRef = storage.ref();       \n        var spaceRef = storageRef.child(`images/imgareas/${this.state.image.name}`);\n//         console.log(spaceRef);\n        return await spaceRef.put(this.state.image);\n\n    }\n    deleteImage = async() => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`images/imgareas/${this.state.img_temp}`);\n        return await  spaceRef.delete();\n\n    }\n    \n      uploadImage2 = () => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`images/imgareas/${this.state.image.name}`);\n        return spaceRef.put(this.state.image);\n\n    }\n    deleteImage2 = () => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`images/imgareas/${this.state.img_temp}`);\n        return  spaceRef.delete();\n\n    }\n\n\n    handleImageUpload = (e) => {\n        this.setState({image: e.target.files[0],aux: e.target.files[0]});\n//        console.log(e.target.files[0]);\n    }\n     downloadReporte=(e)=>{\n      const newData=this.state.areas.map(row=>{\n        delete row._id;\n        delete row.__v;\n        return row;\n      })\n      const workSheet=XLSX.utils.json_to_sheet(newData);\n      const workBook=XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(workBook,workSheet,\"areas\");\n      //Buffer\n      let buf=XLSX.write(workBook,{bookType:\"xlsx\",type:\"buffer\"});\n      //Binary string\n      XLSX.write(workBook,{bookType:\"xlsx\",type:\"binary\"});\n      //Download\n      XLSX.writeFile(workBook,\"Areas.xlsx\");\n\n\n    }\n    \n    \n\n    render() {\n\n        const {errors} = this.state;\n        return (\n                <div className=\"container-fluid\">\n                    <Navigation />\n                    <div className=\"containerList\">\n                        <br/>\n                        <Button color=\"primary\" onClick={this.showModal}><FontAwesomeIcon icon={faFileAlt}/> Nueva Area</Button>\n              \n                        {this.state.areas.length > 0 ?\n                                <DataTable\n                           \n                                columns={[\n                                   {title:'AREA', field:'title'},\n                                   {title:'DETALLE', field:'description'},\n                                   {title: 'Estado', field: 'estado',\n                                        render: (rowData) => rowData.estado === '0' ? <span size=\"sm\" className='badge text-white bg-danger'>Inactivo <FontAwesomeIcon icon={faExclamationCircle} /></span>\n                                                    : <span size=\"sm\" className='badge bg-success text-white'>Activo <FontAwesomeIcon icon={faCheckCircle}/></span>\n\n                                    },\n                                   {title:'IMG-DIR', field:'image'},\n                                ]}\n                                data={this.state.areas}\n                                title='Lista de Areas'\n                                actions={[                                   \n                                    {\n                                        icon:()=><span className=\"btn btn-warning btn-sm\"><FontAwesomeIcon icon={faEdit}/></span>,\n                                        tooltip:'Editar Area',\n                                        onClick:(event, rowData)=>{this.showModal();this.editArea(rowData._id); }                                         \n                                    },\n                                    {\n                                       icon:()=><span className=\"btn btn-danger btn-sm\"><FontAwesomeIcon icon={faTrash}/></span>,\n                                        tooltip:'Eliminar Area',\n                                        onClick:(event, rowData)=>this.validarEliminacion(rowData._id, rowData.image)\n                                    },\n                                    {\n                                        icon:()=><span className=\"btn btn-success btn-sm\" ><FontAwesomeIcon icon={faFileExcel}/> Exportar</span>,\n                                        tooltip:'Exportar a Excel',\n                                        onClick:()=>this.downloadReporte(),\n                                        isFreeAction:true\n                                    }\n                                ]}\n                                options={{\n                                    actionsColumnIndex:-1,\n                                    exportButton:true,\n                                    headerStyle: {\n                                        backgroundColor: '#343a40',\n                                        color: '#FFF'\n                                    },\n                                    padding:'default',//dense\n                                    pageSize:7,\n                                    pageSizeOptions:[7,15,30],\n                                    paginationType:'stepped'\n                                }}\n                                localization={{\n                                    pagination:  paginacion,\n                                    toolbar:toolbar,\n                                    header:{\n                                        actions:'ACCIONES'\n                                    }\n                                }}\n                                 style={{fontSize: \"15px\", padding:'15px', cellPadding:'0px'}}\n                            />    \n                                    : <h5 className=\"text-warning\">! Atencion, No se encontraron areas registradas <FontAwesomeIcon icon={faExclamationTriangle}/></h5>}\n                        <Modal isOpen={this.state.modalOpen}>\n                            <ModalHeader>\n                                <div><h3><FontAwesomeIcon icon={faBook}/> {this.state.header}</h3></div>\n                            </ModalHeader>\n                \n                            <ModalBody>\n                                <form onSubmit={this.addArea} className=\"container\">\n                                    <div className=\"row\">\n                                    <InputGroup className=\"my-1\" >\n                                        <InputGroupText>\n                                            Titulo\n                                        </InputGroupText>\n                                        <input name=\"title\" onChange={this.handleChange} type=\"text\" className=\"form-control\" placeholder=\"Title\" value={this.state.title}/>\n                                    </InputGroup> \n                                      {errors.title && <P errors={errors.title} />}\n                                    </div>\n                                    <br/>\n                                    <div className=\"row\">\n                                     <InputGroup className=\"my-1\" >\n                                        <InputGroupText>\n                                            Descripción\n                                        </InputGroupText>\n                                        <textarea name=\"description\" onChange={this.handleChange} type=\"text\" className=\"form-control\" placeholder=\"Description\" value={this.state.description}/>\n                                    </InputGroup>\n                                    </div>                            \n                                    <br/>\n                                    <div className=\"row\">\n                                        <CustomInput name=\"image\" type=\"file\" onChange={this.handleImageUpload} id=\"image\" label='Seleccione una Imagen' accept=\"image/png, .jpeg, .jpg\"/>\n                                        {errors.image && <P errors={errors.image} />}\n                                    </div>\n                                    <br/>\n                                    <div className=\"row\">\n                                     <InputGroup className=\"my-1\" >\n                                        <InputGroupText>\n                                            Estado\n                                        </InputGroupText>\n                                        <select name=\"estado\" className='form-control' onChange={this.handleChange} value={this.state.estado}>\n                                            <option value='1'>ACTIVO</option>\n                                            <option value='0'>INACTIVO</option>\n                                        </select>\n                                    </InputGroup>\n                                    </div>\n                                    \n                                    <br/>\n                \n                                    <Button id=\"btnInsertar\"><FontAwesomeIcon icon={faSave}/> {this.state.textButton}</Button>{' '}\n                                    <Button id=\"btnCancelar\" onClick={this.hideModal} className=\"btn btn-danger\" data-dismiss=\"modal\" aria-hidden=\"true\"><FontAwesomeIcon icon={faBan}/> CANCELAR</Button>\n                                </form>\n                            </ModalBody>               \n                        </Modal>\n                    </div>\n                </div>\n\n                );\n    }\n\n}\n\nexport default  AdminAreas\n","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\ListTalleres.js",["154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173"],"import  React, {Component}from'react';\nimport style from '../index.css';\nimport style2 from '../card_style_talleres.css';\nimport {Table, Button, Container, Modal, ModalHeader, ModalBody, ModalFooter, formGroup, CardTitle, Card, CardBody, CardHeader, CardImg, CardText}from 'reactstrap';\nimport {render}from'react-dom';\nimport axios from 'axios';\nimport{Link, useParams} from'react-router-dom';\n\nimport { FontAwesomeIcon }from '@fortawesome/react-fontawesome'\nimport {faCheckCircle, faExclamationCircle, faExclamationTriangle, faLock, faFilm, faPenAlt}from '@fortawesome/free-solid-svg-icons'\n\nimport Navigation from '../components/Navigation';\nimport Breadcrumb_nav from '../components/Breadcrumb_nav';\n\nimport Cookies from 'universal-cookie';\n\n\n\nconst cookies = new Cookies();\nconst{REACT_APP_HOST, REACT_APP_PATCH} = process.env;\n\nconst styles = {\n    div: {\n        padding: 10,\n        textAlign: \"left\",\n\n    }\n\n}\n\nclass ListTalleres extends Component {\n    constructor() {\n        super();\n        this.state = {\n            talleres: [],\n            user_talleres: [],\n            talleres_validados: []\n        }\n\n    }\n\n    componentDidMount() {\n        this.visitas();\n        if (!cookies.get('nombre')) {\n            window.location.href = '/';\n        }\n        this.getTaller();\n    }\n    visitas(){\n        const{match} = this.props;\n        const id_ar = match.params.id_ar;\n        const datos={id_area:`${id_ar}`};\n        \n        axios.post(`${REACT_APP_HOST}/api/visitaslike`,datos).then( (response)=> {\n            if(response.data){\n                console.log('visita registrada');\n            }\n        });\n    }\n    \n    getTaller() {\n        const{match} = this.props;\n        const id_ar = match.params.id_ar;\n\n        axios.post(`${REACT_APP_HOST}/api/talleres_ar/${id_ar}`).then(response => {\n            this.setState({talleres: response.data});\n            console.log(response.data);\n            this.getUserTaller();\n        });\n\n    }\n\n    getUserTaller() {\n        const id_user = cookies.get('id');\n        axios.get(`${REACT_APP_HOST}/api/user_taller/${id_user}`).then((response) => {\n            this.setState({user_talleres: response.data})\n//            console.log(response.data)\n            this.verificarCompletado();\n        })\n\n    }\n\n    verificarCompletado() {\n        /**\n         * Recorro el arreglo de talleres y agarro el primero de la lista\n         * Luego recorro el arreglo de user_talleres y agarro el primero de la lista\n         * Luego Comparo los 2 objetos agarrados taller._id === us_taller.id_taller, y paso el estado a 1, lo cual indica que este taller en este usuario ya esta completado\n         * Luego pregunto si el estado esta en 1 o 0, si esta en 1 quiere decir que la tarea esta completada, procedemos a concatenar\n         * el objeto taller con un objeto adicional el cual tendra el estado del taller y la fecha\n         * */\n\n        var talleresjoin = [];\n\n        this.state.talleres.map((taller, index) => {\n\n            var estado = '0';//Variable clave, indica cuando que taller esta completado, le pasamos de estado 0 a 1 \n            var fecha = '';\n            var intentos = '';\n            var intentosok = '';\n\n            this.state.user_talleres.map((us_taller, i) => {\n\n                if ((taller._id === us_taller.id_taller) && (us_taller.estado === '1')) {\n\n                    estado = '1'; //Cambiamos el estado a 1 porque este taller ya esta completado\n                    fecha = us_taller.fecha_regis;//Variable adicional solo para la fecha\n                    intentosok = us_taller.intentos;\n//                    console.log('eeee')\n                } else {\n                    if (taller._id === us_taller.id_taller) {\n                        intentos = us_taller.intentos;\n//                    console.log('intentos ',intentos)\n                    }\n\n                }\n\n            })\n\n            if (estado === '1') {\n                var returnedobj = Object.assign(taller, {estado: '1', fecha: fecha, intentoslock: intentosok});\n            } else {\n                var returnedobj = Object.assign(taller, {estado: '0', intentoslock: intentos});\n            }\n            talleresjoin.push(returnedobj);\n\n        })\n        console.log('talleres join ', talleresjoin)\n        this.setState({talleres_validados: talleresjoin});\n\n    }\n\n    render() {\n\n        return (\n                <div className=\"container-fluid\">\n                    <Navigation />\n                    <div className=\"containerFluid2 mt-2 p-5 \">\n                \n                        {this.state.talleres.length > 0 ?\n                                    <div className=\"row\">\n                                    \n                                        {\n                                                    this.state.talleres_validados.map((taller, index) => (\n                                                        \n                                                            \n                                                                <div className=\"col-md-3\" key={taller._id} style={styles.div}>\n                                                                    {taller.estado === '1' ?\n                                                                                         <div className=\"container\">\n                                                                                                        <div className=\"cardd\">\n                                                                                                            <div className=\"face face1\">                                                                                                                                                                                                                                                                                                                               \n                                                                                                                <div className=\"content  text-center\">                                                                                                                                                          \n                                                                                                                    <CardImg className=\"image_taller\"  top width=\"100%\" src={`${REACT_APP_PATCH}imgtaller%2F${taller.image}?alt=media`} alt=\"Card image cap\" /> \n                                                                                                                    <h3><CardTitle className=\"font-weight-bold\" >{taller.title}</CardTitle></h3>\n                                                                                                                    <div className=\"text-center\"><span className=\"badge bg-success text-white\" style={{fontSize:'15px'}}>Completado <FontAwesomeIcon icon={faCheckCircle}/></span></div>\n                                                                                                                </div>\n                                                                                                        </div>\n                                                                                                        <div className=\"face face2\">\n                                                                                                            <div className=\"content\">\n                                                                                                                <CardText>{taller.description}</CardText>\n                                                                                                                <Link to={`/culminado/${taller._id}/${taller.fecha}`} style={{color: \"black\", textDecoration: \"none black\"}}><span><FontAwesomeIcon icon={faFilm}/> Ver Presentación</span></Link>\n                                                                                                            </div>\n                                                                                                        </div>\n                                                                                                    </div>\n                                                                                                    </div>\n                                                                                            :\n                                                                                                <div>\n                                                                                                    {taller.intentoslock >= taller.intentos ?\n                                                                                                   <div className=\"container\">\n                                                                                                        <div className=\"cardd\">\n                                                                                                            <div className=\"face face1\">\n\n                                                                                                                <div className=\"content  text-center\">\n\n                                                                                                                    <CardImg className=\"image_taller\" top width=\"100%\" src={`${REACT_APP_PATCH}imgtaller%2F${taller.image}?alt=media`} alt=\"Card image cap\" /> \n                                                                                                                    <h3><CardTitle className=\"font-weight-bold text-danger\" >{taller.title}</CardTitle></h3>\n                                                                                                                    <div className=\"text-center\"><span className=\"badge bg-danger text-white\" style={{fontSize:'15px'}}>Lock <FontAwesomeIcon icon={faLock}/></span></div>\n                                                                                                                </div>\n                                                                                                            </div>\n                                                                                                            <div className=\"face face2\">\n                                                                                                                <div className=\"content\">\n                                                                                                                    <CardText className=\"text-danger\">Taller Bloqueado por exceso de intentos, cominiquese con el administrador del sistema</CardText>\n                                                                                                                    <Link to={`#`} style={{color: \"black\", textDecoration: \"none black\"}}><span><FontAwesomeIcon icon={faFilm}/> Ver Presentacion</span></Link>\n                                                                                                                </div>\n                                                                                                            </div>\n                                                                                                        </div>\n                                                                                                        </div>\n                                                                                                    :                                           \n                                                                                                        <div className=\"container\">\n                                                                                                        <div className=\"cardd\">\n                                                                                                            <div className=\"face face1\">\n\n                                                                                                                <div className=\"content  text-center\">\n\n                                                                                                                    <CardImg className=\"image_taller\" top width=\"100%\" src={`${REACT_APP_PATCH}imgtaller%2F${taller.image}?alt=media`} alt=\"Card image cap\" /> \n                                                                                                                    <h3><CardTitle className=\"font-weight-bold\" >{taller.title}</CardTitle></h3>\n                                                                                                                    <div className=\"text-center\"><span className=\"badge bg-warning text-white\" style={{fontSize:'15px'}}>En Curso <FontAwesomeIcon icon={faExclamationCircle}/></span></div>\n                                                                                                                </div>\n                                                                                                            </div>\n                                                                                                            <div className=\"face face2\">\n                                                                                                                <div className=\"content\">\n                                                                                                                    <CardText>{taller.description}</CardText>\n                                                                                                                    <Link to={`/presentacion/${taller._id}/0`} style={{color: \"black\", textDecoration: \"none black\"}}><span><FontAwesomeIcon icon={faFilm}/> Ver Presentación</span></Link>\n                                                                                                                </div>\n                                                                                                            </div>\n                                                                                                        </div>\n                                                                                                        </div>\n                                                                                                                                                       \n                                                                                                    }  \n                                                                                                </div>\n                                                                    }                          \n                                                                </div>\n\n                                                                ))\n\n\n                                        }\n                            \n                                    </div>\n                                    \n \n\n                                    : <h5 className=\"text-warning\">! Atencion, No hay talleres registrados en esta area <FontAwesomeIcon icon={faExclamationTriangle}/></h5>}\n                    </div>\n               \n               \n                </div>\n                \n                )\n    }\n\n}\nexport default ListTalleres;\n\n\n\n","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\ListAreas.js",["174","175","176","177","178","179","180","181","182","183","184","185","186","187"],"import  React, {Component}from'react';\nimport style from '../index.css';\nimport style_card from '../card_style_areas.css';\nimport {Table, Button, Container, Modal, ModalHeader, ModalBody, ModalFooter, formGroup, CardTitle, Card, CardBody, CardHeader, CardImg, CardText}from 'reactstrap';\nimport axios from 'axios';\nimport{Link} from'react-router-dom';\nimport {render}from'react-dom';\nimport Navigation from '../components/Navigation';\nimport Breadcrumb_nav from '../components/Breadcrumb_nav';\n\nimport Cookies from 'universal-cookie';\nimport { FontAwesomeIcon }from '@fortawesome/react-fontawesome'\nimport {faChartPie, faStepBackward,faLayerGroup, faFileSignature,faEye,faListOl, faExclamationTriangle}from '@fortawesome/free-solid-svg-icons'\n\n\nconst cookies = new Cookies();\n//import env from \"react-dotenv\";\nconst{REACT_APP_HOST, REACT_APP_PATCH} = process.env;\n\nconst styles = {\n    div: {\n        padding: 10,\n        textAlign: \"left\",\n\n    } \n\n}\n\nexport default class ListAreas extends Component {\n    constructor() {\n        super();\n        this.state = {\n            areas: [],\n            visitas:[],\n            visitas_taller:[],\n            preguntas_fallidas:[]\n        }\n    }\n\n    componentDidMount() {\n        if (!cookies.get('nombre')) {\n            window.location.href = '/'\n        }\n        this.getTalleres();\n        this.getVisitas();\n        this.getVisitas_taller();\n        this.getPreguntasFallidas();\n    }\n    \n    getVisitas() {\n        axios.get(`${REACT_APP_HOST}/api/visitaslike`).then(response => {\n            this.setState({visitas: response.data})\n        })\n\n    }\n    getVisitas_taller() {\n        axios.get(`${REACT_APP_HOST}/api/visitastaller`).then(response => {\n            this.setState({visitas_taller: response.data})\n        })\n\n    }\n    getPreguntasFallidas() {\n        axios.get(`${REACT_APP_HOST}/api/resultados`).then(response => {\n            this.setState({preguntas_fallidas: response.data})\n        })\n\n    }\n    getTalleres() {\n        axios.get(`${REACT_APP_HOST}/api/areas`).then(response => {\n//      axios.get('http://localhost:4000/api/talleres').then(response => {\n            if(response.data.length>0){\n                this.setState({areas: response.data}) \n            }\n\n        })\n\n    }\n\n    render() {\n\n\n        return (\n                <div className=\"container-fluid\">\n                 <Navigation />\n                <div className=\"containerFluid2 mt-2 p-5 \">\n                {this.state.areas.length > 0 ?\n                    <div className=\"row\">\n                    <div className=\"row col-md-9\">\n                \n                        {\n                    this.state.areas.map((area) => (\n                                                <div className=\"col-md-3\" key={area._id} style={styles.div}>\n\n                                                    \n                                                    \n                                                     <section className=\"card-section\">\n                                                        <div className=\"card_\">\n                                                            <div className=\"flip-card\">\n                                                                <div className=\"flip-card__container\">\n                                                                    <div className=\"card-front\">\n                                                                        <div className=\"card-front__tp card-front__tp--dark\">\n                                                                                        <p className=\"card-front__text-price\">\n                                                                                          <FontAwesomeIcon icon={faFileSignature} size=\"2x\"/>\n                                                                                       </p>\n                                                                                       <h5 className=\"card-front__heading\">\n                                                                                           <p className=\"font-weight-bold\" >{area.title} </p>\n                                                                                       </h5>\n                                                                                      \n                                                                        </div>\n\n                                                                        <div className=\"card-front__bt\">\n                                                                            \n                                                                            <p className=\"card-front__text-view card-front__text-view--dark\">\n                                                                                Ver mas\n                                                                            </p>\n                                                                        </div>\n                                                                    </div>\n\n                                                                    <div className=\"card-back\">\n                                                                    <CardImg src={`${REACT_APP_PATCH}imgareas%2F${area.image}?alt=media`} alt=\"Card image cap\" /> \n\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n\n                                                            <div className=\"inside-page\">\n                                                                <div className=\"inside-page__container\">\n                                                                    <h3 className=\"inside-page__heading inside-page__heading--dark\">\n                                                                        Detalle\n                                                                    </h3>\n                                                                    <p className=\"inside-page__text\">\n                                                                       <span style={{fontSize:'13px'}}>{area.description}</span>\n                                                                    </p>\n                                                                     <Link className=\" inside-page__btn--dark \" to={`/listTalleres/${area._id}`} style={{color: \"black\", textDecoration: \"none black\"}}>\n                                                                      <span className=\"inside-page__btn inside-page__btn--dark\">Talleres</span>\n                                                                    </Link>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </section>\n                                                </div>\n                                ))\n                        }\n \n\n                       \n                \n                    </div>\n                    <div className=\"row col-md-3\">\n                        <div className=\"container-fluid pl-4 verticalLine\">\n                             <Card className=\"card_taller\">\n                                                        <CardHeader>\n                                                            <CardTitle className=\"font-weight-bold\" tag=\"h5\">Estadistica <FontAwesomeIcon icon={faChartPie}/></CardTitle>\n                                                        </CardHeader>\n                                        \n                                                        <CardBody >\n                                                             <CardText className=\"font-weight-bold text-danger\">Preguntas mas Fallidas</CardText>\n                                                            {\n                                                            this.state.preguntas_fallidas.map((data, index)=>(\n                                                                    <ul key={data.preguntas_get._id}>\n                                                                        <i className=\"font-weight-bold text-danger\">{data.preguntas_get.pregunta}{' '} <span className=\"badge bg-dark text-white\"><FontAwesomeIcon icon={faListOl}/> {data.cont}</span></i>\n                                                                    </ul>\n                                                            ))\n                                                           \n                                                            }\n                                                            <hr/>\n                                                            <CardText className=\"font-weight-bold\">Visitas a Areas</CardText>\n                                                            {\n                                                            this.state.visitas.map((data, index)=>(\n                                                                    <ul key={data._id}>\n                                                                        <i className=\"font-weight-bold\">{data.talleresArea.title}{' '}<span className=\"badge bg-dark text-white\"><FontAwesomeIcon icon={faEye}/> {data.visitas}</span></i>\n                                                                    </ul>\n                                                            ))\n                                                           \n                                                            }\n                                                            <hr/>\n                                                            <CardText className=\"font-weight-bold\">Visitas a Talleres</CardText>\n                                                            {\n                                                            this.state.visitas_taller.map((data, index)=>(\n                                                                    <ul key={data._id}>\n                                                                        <i className=\"font-weight-bold\">{data.talleres.title}{' '}<span className=\"badge bg-dark text-white\"><FontAwesomeIcon icon={faEye}/> {data.visitas}</span></i>\n                                                                    </ul>\n                                                            ))\n                                                           \n                                                            }\n           \n                                                           \n                                                        </CardBody>\n                                                        </Card>\n                        </div>\n                    </div>\n                    </div>\n                                  : <h5 className=\"text-warning\">! Atencion, Dasboard sin registrso, registre areas y talleres para empezar a usar la plataforma <FontAwesomeIcon icon={faExclamationTriangle}/></h5>}\n\n                </div>\n                </div>\n                )\n    }\n}\n\n\n","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\Breadcrumb_nav.js",["188"],"import React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport{Link} from'react-router-dom';\n\nconst Breadcrumb_nav = (props) => {\n  return (\n    <div>\n      <Breadcrumb tag=\"nav\" listTag=\"div\">\n      \n        <BreadcrumbItem tag=\"a\" href=\"/\">Home</BreadcrumbItem>\n        <BreadcrumbItem tag=\"a\" href=\"/listTalleres/:id_ar\">Talleres</BreadcrumbItem>\n        <BreadcrumbItem active tag=\"span\">Evaluacion</BreadcrumbItem>\n        \n      </Breadcrumb>\n    </div>\n  );\n};\n\nexport default Breadcrumb_nav;","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\AdminUsers.js",["189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208"],"import React, {Component}from'react';\nimport {render}from'react-dom';\nimport {Table, Button, Container, CustomInput,InputGroup,InputGroupText, Modal, ModalHeader, ModalBody, ModalFooter, formGroup} from 'reactstrap';\nimport Swal from 'sweetalert';\nimport axios from 'axios'\nimport P from '../components/P';\nimport Styles from '../index.css'\nimport md5 from 'md5';\nimport DataTable from \"@material-table/core\";\nimport { FontAwesomeIcon }from '@fortawesome/react-fontawesome'\nimport { faFileAlt, faEdit, faTrash, faFile, faSave, faSyncAlt, faCheckCircle, faBan,faSkull, faClock, faRedo, faFileExcel, faUser, faUnlockAlt }from '@fortawesome/free-solid-svg-icons'\n//import DataTable from 'material-table';\nimport XLSX from 'xlsx'\nimport Navigation from '../components/Navigation';\nimport Breadcrumb_nav from '../components/Breadcrumb_nav';\nimport Cookies from 'universal-cookie';\n\nimport firebase from '../../src/setting/server_firebase';\n\n\n\nconst cookies = new Cookies();\n\nconst {REACT_APP_HOST, REACT_APP_STORAGE} = process.env;\n\nvar storage = firebase.app().storage(`${REACT_APP_STORAGE}`);\n\nconst validation = data => {\n    const errors = {};\n    if (!data.nombre) {\n        errors.nombre = 'El campo nombres es obligatorio';\n    }\n    if (!data.apellido) {\n        errors.apellido = 'El campo apellidos es obligatorio';\n    }\n    if (!data.cedula) {\n        errors.cedula = 'El campo cédula es obligatorio';\n    }\n    if (!data.user) {\n        errors.user = 'El campo user es obligatorio';\n    }\n    if (!data.pass) {\n        errors.pass = 'El campo password es obligatorio';\n    }\n    if (!data.rol) {\n        errors.rol = 'El rol es un campo obligatorio';\n    }\n    return errors;\n}\n\nconst paginacion = {\n    labelRowsSelect: 'Filas',\n    labelRowsPerPage: 'Filas por Pagina',\n    previousAriaLabel: 'Pagina Anterior',\n    previousTooltip: 'Pagina Anterior',\n    nextAriaLabel: 'Siguiente Página',\n    nextTooltip: 'Siguiente Página',\n    lastAriaLabel: 'Ultima page',\n    lastTooltip: 'Ultima page',\n    firstAriaLabel: 'Primera Página',\n    firstTooltip: 'Primera Página'\n}\n\nconst toolbar = {\n    exportTitle: 'Exportar',\n    exportAriaLabel: 'Exportar',\n    exportName: 'Exportar a',\n    searchTooltip: 'Buscar',\n    searchPlaceholder: 'Buscar'\n}\n\n\n\nclass AdminUsers extends Component {\n    constructor() {\n        super();\n        this.state = {\n            nombre: '',\n            apellido: '',\n            cedula: '',\n            user: '',\n            pass: '',\n            correo: '',\n            telefono: '',\n            rol: 'USUARIO',\n            _id: '',\n            users: [],\n            textButton: 'REGISTRAR',\n            header: 'Insertar Usuario',\n            modalOpen: false,\n            image: '...',\n            errors: {},\n            img_temp: '',\n            aux: '',\n            estado_update: false,\n            modalOpenPass: false,\n            newpassconfirm: '',\n            newpass: ''\n\n        }\n\n        this.showModal = this.showModal.bind(this);\n        this.hideModal = this.hideModal.bind(this);\n        this.showModalPass = this.showModalPass.bind(this);\n        this.hideModalPass = this.hideModalPass.bind(this);\n        this.handleChange = this.handleChange.bind(this)\n        this.addUser = this.addUser.bind(this)\n    }\n    componentDidMount() {//Es como el initComponents\n        this.getUsers();//Para que inicie la pantalla de tareas\n    }\n    getUsers() {\n        axios.get(`${REACT_APP_HOST}/api/users`).then((response) => {\n            this.setState({users: response.data});\n//            console.log(response.data);\n        })\n    }\n\n    addUser(e) {\n        e.preventDefault();\n\n        const {errors, ...sinErrors} = this.state;\n        const result = validation(sinErrors);\n        this.setState({errors: result});\n\n        if (!Object.keys(result).length) {\n            let datos = new FormData();\n            datos.append('nombre', this.state.nombre);\n            datos.append('apellido', this.state.apellido);\n            datos.append('cedula', this.state.cedula);\n            datos.append('user', this.state.user);\n            datos.append('pass', this.state.pass);\n            datos.append('correo', this.state.correo);\n            datos.append('telefono', this.state.telefono);\n            datos.append('rol', this.state.rol);\n//            datos.append('image', this.state.image.name);\n\n            if (this.state._id && this.state.aux === '') {\n//                console.log('modifico');\n                datos.append('image', this.state.image);\n            } else if (this.state._id && this.state.aux.name) {\n//                 console.log('modifico imagen');\n                datos.append('image', this.state.image.name);\n            } else {\n//                 console.log('guardo');\n                if (this.state.aux !== '') {\n                    datos.append('image', this.state.image.name);\n                } else {\n                    datos.append('image', '...');\n                }\n            }\n\n            if (this.state._id) {\n\n                if (this.state.aux.name) {\n                    this.deleteImage2();\n                    this.uploadImage2();\n                }\n\n                axios.put(`${REACT_APP_HOST}/api/users/` + this.state._id, datos).then(async(response) => {\n//                    let eliminar = await this.deleteImage();\n//                    let cargar = await this.uploadImage();\n                    Swal({\n                        title: 'Usuario Actualizada',\n                        icon: 'success',\n                        timer: 2000,\n                        button: false\n                    });\n                    this.getUsers();\n                    this.setState({nombre: '', apellido: '', cedula: '',correo:'',telefono:'', user: '', pass: '', rol: 'USUARIO', _id: '', textButton: 'REGISTRAR', header: 'Insertar Usuario', modalOpen: false, aux: '', estado_update: false, image: '...', errors: {}});\n                })\n            } else {\n\n                axios.post(`${REACT_APP_HOST}/api/users`, datos).then(async(response) => {\n                    let cargar = await this.uploadImage();\n\n                    Swal({\n                        title: 'Usuario registrada',\n                        icon: 'success',\n                        timer: 2000,\n                        button: false\n                    });\n                    this.getUsers();\n\n                    this.setState({nombre: '', apellido: '', cedula: '',correo:'',telefono:'', rol: 'USUARIO', user: '', pass: '', aux: '', image: '...'});\n                });\n            }\n\n        }\n\n    }\n\n    editUser(id) {\n        axios.get(`${REACT_APP_HOST}/api/users/` + id).then((response) => {\n//            console.log(response.data)\n            this.setState({\n                nombre: response.data.nombre,\n                apellido: response.data.apellido,\n                cedula: response.data.cedula,\n                user: response.data.user,\n                pass: response.data.pass,\n                telefono: response.data.telefono,\n                correo: response.data.correo,\n                rol: response.data.rol,\n                image: response.data.image,\n                img_temp: response.data.image,\n                _id: response.data._id,\n                textButton: 'ACTUALIZAR',\n                estado_update: true,\n                header: 'Actualizar Usuario'\n            });\n//            console.log(this.state.image)\n        });\n    }\n\n    validarEliminacion(id, image, nombre, apellido) {\n        axios.get(`${REACT_APP_HOST}/api/user_taller/` + id).then((response) => {\n            if (response.data <= 0) {\n                this.deleteUser(id, image, nombre, apellido);\n            } else {\n                Swal({\n                    title: '!Atención',\n                    text: 'Este Usuario tiene historial en el sistema, imposible eliminar',\n                    icon: 'warning',\n                    button: true\n                });\n            }\n        });\n    }\n\n    deleteUser(id, image, nombre, apellido) {\n        this.setState({img_temp: image});\n        Swal({\n            title: `Esta seguro de eliminar el Usuario ${nombre} ${apellido}`,\n            text: ' El usuario se eliminara definitivamente',\n            icon: 'warning',\n            buttons: ['Cancelar', 'Sí'],\n            dangerMode: true\n        }).then((value) => {\n            if (value) {\n                axios.delete(`${REACT_APP_HOST}/api/users/` + id).then(async(response) => {\n//                    console.log(response.data);\n                    if (this.state.img_temp !== '...') {\n                        let eliminar = await this.deleteImage();\n                    }\n                    Swal({\n                        title: 'Usuario eliminada',\n                        icon: 'success',\n                        timer: 1000,\n                        button: false\n                    });\n                    this.getUsers();\n                });\n            }\n        });\n    }\n\n    showModal() {\n        this.setState({modalOpen: true});\n    }\n    hideModal() {\n        this.setState({nombre: '', apellido: '', cedula: '', user: '', pass: '',correo:'',telefono:'', rol: 'USUARIO', modalOpen: false,estado_update: false, textButton: 'REGISTRAR', header: 'Insertar Usuario', image: '...', errors: {}})\n    }\n\n    showModalPass() {\n        this.setState({modalOpenPass: true});\n    }\n    hideModalPass() {\n        this.setState({modalOpenPass: false,newpass:'',newpassconfirm:''});\n    }\n\n    handleChange(e) {\n        const{name, value} = e.target;\n        this.setState({[name]: value});\n//        console.log(e.target.value);\n    }\n\n    uploadImage = async() => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`images/imguser/${this.state.image.name}`);\n        return await spaceRef.put(this.state.image)\n\n    }\n    deleteImage = async() => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`images/imguser/${this.state.img_temp}`);\n        return await  spaceRef.delete();\n\n    }\n\n    uploadImage2 = () => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`images/imguser/${this.state.image.name}`);\n        return spaceRef.put(this.state.image);\n\n    }\n    deleteImage2 = () => {\n        var storageRef = storage.ref();\n        var spaceRef = storageRef.child(`images/imguser/${this.state.img_temp}`);\n        return  spaceRef.delete();\n\n    }\n\n    handleImageUpload = (e) => {\n\n        this.setState({image: e.target.files[0], aux: e.target.files[0]});\n//        console.log(e.target.files[0]);\n    }\n\n    downloadReporte = (e) => {\n        const newData = this.state.users.map(row => {\n            delete row._id;\n            delete row.__v;\n            delete row.pass;\n            return row;\n        })\n        const workSheet = XLSX.utils.json_to_sheet(newData);\n        const workBook = XLSX.utils.book_new();\n        XLSX.utils.book_append_sheet(workBook, workSheet, \"usuarios\");\n        //Buffer\n        let buf = XLSX.write(workBook, {bookType: \"xlsx\", type: \"buffer\"});\n        //Binary string\n        XLSX.write(workBook, {bookType: \"xlsx\", type: \"binary\"});\n        //Download\n        XLSX.writeFile(workBook, \"Usuarios.xlsx\");\n\n\n    }\n\n    resetearPassword = (e) => {\n        e.preventDefault();\n        const datos = {newpass: this.state.newpass, id_user:this.state._id}\n        if (this.state.newpass === this.state.newpassconfirm) {\n            axios.post(`${REACT_APP_HOST}/api/users/resetpassword`, datos).then((response) => {\n                if (response.data) {\n                    Swal({\n                        title: '!OK',\n                        text: 'La contraseña ha sido reseteada exitosamente',\n                        icon: 'success'\n                    });\n                }\n                this.setState({modalOpenPass: false});\n            });\n        } else {\n            Swal({\n                title: '!Atencion',\n                text: 'Las contraseñas no coinciden',\n                icon: 'warning'\n            });\n        }\n\n    }\n\n    render() {\n        const {errors} = this.state;\n        return (\n                <div className=\"container-fluid\">\n                    <Navigation />\n                    <div className=\"containerList\">\n                \n                \n                        <br/>\n                        <Button color=\"primary\" onClick={this.showModal}><FontAwesomeIcon icon={faUser}/> Nuevo Usuario</Button>\n                       \n                        {this.state.users.length > 0 ?\n                                    <DataTable\n                            \n                                        columns={[\n                                                            {title: 'NOMBRE', field: 'nombre'},\n                                                            {title: 'APELLIDO', field: 'apellido'},\n                                                            {title: 'CÉDULA', field: 'cedula'},\n                                                            {title: 'CORREO', field: 'correo'},\n                                                            {title: 'TELÉFONO', field: 'telefono'},\n                                                            {title: 'USUARIO', field: 'user'},\n                                                            {title: 'ROL', field: 'rol'},\n                                                            {title: 'IMAGEN', field: 'image'},\n                                                        ]}\n                                        data={this.state.users}\n                                        title='Lista de Usuarios del Sistema'\n                                        actions={[\n                                                    {\n                                                        icon: () => <span className=\"btn btn-secondary btn-sm\" ><FontAwesomeIcon icon={faUnlockAlt}/></span>,\n                                                            tooltip: 'Resetear Password',\n                                                            onClick: (event, rowData) => {\n                                                                this.showModalPass();\n                                                                this.editUser(rowData._id);\n                                                            }\n                                                        },\n                                                        {\n                                                        icon: () => <span className=\"btn btn-warning btn-sm\" ><FontAwesomeIcon icon={faEdit}/></span>,\n                                                        tooltip: 'Editar Usuario',\n                                                        onClick: (event, rowData) => {\n                                                            this.showModal();\n                                                            this.editUser(rowData._id);\n                                                        }\n                                                    },\n                                                    {\n                                                            icon: () => <span className=\"btn btn-danger btn-sm\" ><FontAwesomeIcon icon={faTrash}/></span>,\n                                                            tooltip: 'Eliminar Usuario',\n                                                            onClick: (event, rowData) => this.validarEliminacion(rowData._id, rowData.image, rowData.nombre, rowData.apellido)\n                                                        },\n                                                        {\n                                                            icon: () => <span className=\"btn btn-success btn-sm\" ><FontAwesomeIcon icon={faFileExcel}/> Exportar</span>,\n                                                            tooltip: 'Exportar a Excel',\n                                                            onClick: () => this.downloadReporte(),\n                                                            isFreeAction: true\n                                                        }\n                                                    ]}\n                                        options={{\n                                                        actionsColumnIndex: -1,\n                                                        toolbar: true,\n                                                        exportButton: true,\n                                                        filtering: true,\n                                                        headerStyle: {\n                                                            backgroundColor: '#343a40',\n                                                            color: '#FFF'\n                                                        },\n                                                        padding: 'default', //dense\n                                                        pageSize: 8,\n                                                        pageSizeOptions: [8, 15, 30],\n                                                        paginationType: 'stepped'\n                                                    }}\n                                        localization={{\n                                                        pagination: paginacion,\n                                                        toolbar: {\n                                                            exportCSVName: \"Export some Excel format\",\n                                                            exportPDFName: \"Export as pdf!!\"\n                                                        },\n                                                        header: {\n                                                            actions: 'ACCIONES'\n                                                        }\n                                                    }}\n                                        style={{fontSize: \"12px\", padding: '15px', cellPadding: '0px'}}\n                                        />\n                                        : <h1>No hay Usuarios registrados</h1>}\n                            <Modal isOpen={this.state.modalOpen}>\n                                <ModalHeader>\n                                    <div><h3><FontAwesomeIcon icon={faUser}/> {this.state.header}</h3></div>\n                                </ModalHeader>\n                \n                                <ModalBody>\n                                    <form onSubmit={this.addUser} className=\"container\">\n                                        <div className=\"row\">\n                                         <InputGroup className=\"my-1\" >\n                                            <InputGroupText>\n                                                Nombres\n                                            </InputGroupText>\n                                                <input name=\"nombre\" onChange={this.handleChange} type=\"text\" className=\"form-control\" placeholder=\"Cristian\" value={this.state.nombre}/>\n                                        </InputGroup>    \n                                        {errors.nombre && <P errors={errors.nombre} />}\n                                        </div>\n                                        \n                                        <div className=\"row my-2\">\n                                         <InputGroup className=\"my-1\" >\n                                            <InputGroupText>\n                                                Apellidos\n                                            </InputGroupText>\n                                            <input name=\"apellido\" onChange={this.handleChange} type=\"text\" className=\"form-control\" placeholder=\"Paz\" value={this.state.apellido}/>\n                                        </InputGroup>    \n                                        {errors.apellido && <P errors={errors.apellido} />}\n                                        </div>  \n                                        \n                                        <div className=\"row\">\n                                         <InputGroup className=\"my-1\" >\n                                            <InputGroupText>\n                                                Cédula\n                                            </InputGroupText>\n                                            <input name=\"cedula\" onChange={this.handleChange} type=\"number\" className=\"form-control \" placeholder=\"1900xxxxxx\" value={this.state.cedula}/>\n                                        </InputGroup>   \n                                            {errors.cedula && <P errors={errors.cedula} />}\n                                        </div> \n                                        \n                                        <div className=\"row my-2\">\n                                         <InputGroup className=\"my-1\" >\n                                            <InputGroupText>\n                                                Usuario\n                                            </InputGroupText>\n                                            <input name=\"user\" onChange={this.handleChange} type=\"text\" className=\"form-control\" placeholder=\"cris\" value={this.state.user}/>\n                                        </InputGroup>    \n                                        {errors.user && <P errors={errors.user} />}\n                                        </div>\n                                        \n                                        {this.state.estado_update !== true ?\n                                    <div className=\"row\">\n                                    <InputGroup className=\"my-1\" >\n                                            <InputGroupText>\n                                                Contraseña\n                                            </InputGroupText>\n                                        <input name=\"pass\" onChange={this.handleChange} type=\"password\" className=\"form-control \" placeholder=\"*****\" value={this.state.pass}/>\n                                    </InputGroup>    \n                                        {errors.pass && <P errors={errors.pass} />}\n                                    \n                                     </div> : ''}\n                                    <div className=\"row my-2\">\n                                    <InputGroup className=\"my-1\" >\n                                            <InputGroupText>\n                                                Correo\n                                            </InputGroupText>\n                                        <input name=\"correo\" onChange={this.handleChange} type=\"email\" className=\"form-control \" placeholder=\"pcris.994@gmail.com\" value={this.state.correo}/>\n                                    </InputGroup>\n                                    </div>\n                                    \n                                    <div className=\"row my-2\">\n                                    <InputGroup className=\"my-1\" >\n                                            <InputGroupText>\n                                                Teléfono\n                                            </InputGroupText>\n                                        <input name=\"telefono\" onChange={this.handleChange} type=\"text\" className=\"form-control \" placeholder=\"0992094788\" value={this.state.telefono}/>\n                                    </InputGroup>    \n                                    </div>\n                                        <div className=\"row my-2\">\n                                        <InputGroup className=\"my-1\" >\n                                            <InputGroupText>\n                                                Rol\n                                            </InputGroupText>\n                                            <select className=\"form-control\" name=\"rol\" onChange={this.handleChange} value={this.state.rol}>\n                                                <option>Selecione un Rol</option>\n                                                <option value=\"USUARIO\">USUARIO</option>\n                                                <option value=\"ADMINISTRADOR\">ADMINISTRADOR</option>\n                                            </select>\n                                        </InputGroup>    \n                                            {errors.rol && <P errors={errors.rol} />}\n                                        </div>                            \n                                        <div className=\"row my-2\">\n                                            <CustomInput className=\"form-control-sm\" name=\"image\" type=\"file\" onChange={this.handleImageUpload} id=\"image\" label='Seleccione una Foto' accept=\"image/png, .jpeg, .jpg\"/>\n                                        </div>\n                                        <br/>\n                \n                                        <Button id=\"btnInsertar\"><FontAwesomeIcon icon={faSave}/> {this.state.textButton}</Button>{' '}\n                                        <Button id=\"btnCancelar\" onClick={this.hideModal} className=\"btn btn-danger\" data-dismiss=\"modal\" aria-hidden=\"true\"><FontAwesomeIcon icon={faBan}/> CANCELAR</Button>\n                                    </form>\n                                </ModalBody>               \n                            </Modal>\n                \n                            <Modal isOpen={this.state.modalOpenPass}>\n                                <ModalHeader>\n                                    <div><h3>Resetear Password</h3></div>\n                                </ModalHeader>\n                \n                                <ModalBody>\n                                    <form onSubmit={this.resetearPassword} className=\"container\">\n                \n                                        <div className=\"row\">\n                                            <input name=\"newpass\" onChange={this.handleChange} type=\"password\" className=\"form-control form-control-sm\" placeholder=\"Ingrese la nueva contraseña\" required value={this.state.newpass}/>\n                                        </div>\n                                        <div className=\"row\">\n                                            <input name=\"newpassconfirm\" onChange={this.handleChange} type=\"password\" className=\"form-control form-control-sm\" placeholder=\"Confirme la nueva contraseña\" required value={this.state.newpassconfirm}/>\n                                        </div>\n                \n                                        <br/>\n                \n                                        <Button id=\"btnReset\"> <FontAwesomeIcon icon={faUnlockAlt}/> RESETEAR</Button>{' '}\n                                        <Button id=\"btnCancelar2\" onClick={this.hideModalPass} className=\"btn btn-danger\" data-dismiss=\"modal\" aria-hidden=\"true\"><FontAwesomeIcon icon={faBan}/> CANCELAR</Button>\n                                    </form>\n                                </ModalBody>               \n                            </Modal>\n                    </div>\n                </div>\n\n                );\n    }\n\n}\n\nexport default  AdminUsers;\n","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\Evaluacion.js",["209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229"],"import React, {Component} from 'react';\nimport {Container, Button, Modal} from'reactstrap'\nimport {render}from 'react-dom';\nimport{Link, useParams} from'react-router-dom';\nimport axios from'axios';\nimport { FontAwesomeIcon }from '@fortawesome/react-fontawesome'\nimport {faChevronCircleRight, faFeatherAlt, faClock, faCheckCircle, faSkull, faMailBulk, faFileAlt, faClipboard}from '@fortawesome/free-solid-svg-icons'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Swal from 'sweetalert';\n//import '../libraries/back';\n\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies;\n\nconst{REACT_APP_HOST, REACT_APP_DIREC} = process.env;\n\nvar resp_correcta = [];\nvar puntaje_list = [];\nvar cont_correctas = 0;\nvar cont_incorrectas = 0;\nvar punt = 0;\nvar puntuacion = 0;\n\nvar a = 0;\nvar pts = 0;\nvar sum_pts = 0;\n\nvar intervaloCont = '';\n\nvar hora = 0;\nvar minutos = 0;\nvar segundos = 59;\nvar estado_tiempo = true;\n\nvar id_taller = '0';\n\nvar intentos = 0;\nvar aprobacion = 0;\nvar interval = '';\n\nvar preguntas_eval = [];\nvar respuestas_eval = [];\nvar estado_resp_eval = [];\n\nvar tituloTaller='';\n\nclass Evaluacion extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            preguntas_respuestas: [],\n            resultados: false,\n            deshabilitar: false,\n            modalOpen: false,\n            intentos: '',\n            respuestas_pint: [],\n            ss: ''\n        }\n        this.cargarSegundos = this.cargarSegundos.bind(this);\n        this.cargarMinutos = this.cargarMinutos.bind(this);\n        this.cargarHora = this.cargarHora.bind(this);\n        this.showModalResp = this.showModalResp.bind(this);\n\n    }\n\n    componentDidMount() {\n        if (!cookies.get('nombre')) {\n            window.location.href = `${REACT_APP_DIREC}/home`;\n        }\n        this.getPreguntasRespuestas();\n        interval = setInterval(this.cargarSegundos, 1000);\n\n    }\n      nobackbutton(){      \t\n           window.location.hash=\"no-back-button\";\t\n           window.location.hash=\"Again-No-back-button\" //chrome \t\n           window.onhashchange=function(){window.location.hash=\"no-back-button\";}\n        \t\n        }\n\n    getPreguntasRespuestas() {\n        const {match} = this.props;\n        id_taller = match.params.id;\n        axios.get(`${REACT_APP_HOST}/api/evaluacion/` + id_taller).then((response) => {\n            this.setState({preguntas_respuestas: response.data});\n            if (this.state.preguntas_respuestas.length === 0) {\n                Swal({\n                    title: '!ATENCION',\n                    text: 'No hay evaluación registrada',\n                    icon: 'warning',\n                    closeOnClickOutside: false,\n                    closeOnEsc: false\n\n                }).then((value) => {\n                    if (value) {\n                        window.location.href = `${REACT_APP_DIREC}/home`;\n//                       window.location.href=`${REACT_APP_DIREC}/presentacion/`+id_taller;\n                    }\n                })\n                clearInterval(interval);\n            } else {\n                console.log(this.state.preguntas_respuestas)\n                this.mostarEvaluacion();\n            }\n        });\n    }\n    mostarEvaluacion() {\n        const contenedor_eval = document.getElementById('contenedor_eval');\n        const titulo_taller = document.getElementById('titulo_taller');\n        const preguntasYrespuestas = [];\n        this.state.preguntas_respuestas.map((preguntaAct, numPregunta) => {\n           \n            //eSTE APARTADO ES SOLO PARA PONER TITULO A LA EVALUACION\n            preguntaAct.taller.map((data)=>{\n                tituloTaller =data.title ;\n                console.log(tituloTaller)\n            });\n            titulo_taller.innerHTML= 'EVALUACIÓN DE '+tituloTaller;\n            //AQUI CIERRA\n            \n            const respuestas = [];\n            preguntaAct.respuestas.map((respuestaAct, numRespuesta) => {\n\n                //VERIFICO SI LA PREGUNTA ES DE TIPO RADIO O CHECK 1=RADIO, 2=CHEACK\n                if (preguntaAct.tipo_preg === '1') {\n                    respuestas.push(\n                            `<label class=\"elem\"><input type=\"radio\"  name=\"${numPregunta}\" value=\"${respuestaAct.respuesta}\"/> ${respuestaAct.respuesta}</label><br/> `\n                            );\n                } else if (preguntaAct.tipo_preg === '2')\n                    respuestas.push(\n                            `<label class=\"elem\"><input type=\"checkbox\"  name=\"${numPregunta}\" value=\"${respuestaAct.respuesta}\"/> ${respuestaAct.respuesta}</label><br/> `\n                            );\n                //Voy almacenando la respuestas correctas de cada pregunta\n                if (respuestaAct.estadoresp === true) {\n                    resp_correcta.push(`${respuestaAct.respuesta}`);\n                }\n            });\n\n            preguntasYrespuestas.push(\n                    `\n                        <div class=\"font-weight-bold\">${numPregunta + 1 + ':'} ${preguntaAct.pregunta} (${preguntaAct.puntaje}pts.)</div>\n                        <div class=\"respuestas pl-4 pt-2\">${respuestas.join('')}</div><hr/>\n                    `\n                    );\n            puntaje_list.push(preguntaAct.puntaje);//Voy almacenando el puntaje de cada pregunta\n\n            preguntaAct.taller.map((taller, index) => {\n                minutos = taller.tiempo - 1;\n                intentos = taller.intentos;\n                aprobacion = taller.aprobacion;\n//                this.setState({intentos: taller.intentos, tiempo: taller.tiempo})\n            })\n        });\n        this.pintarTiempo();\n        contenedor_eval.innerHTML = preguntasYrespuestas.join('');\n\n    }\n\n    pintarTiempo() {\n        while (estado_tiempo) {\n            if (minutos > 60) {\n                hora++;\n                minutos = minutos - 60;\n            } else {\n                estado_tiempo = false;\n            }\n        }\n\n    }\n\n    validarRespuestas() {\n         this.nobackbutton();\n        cont_incorrectas = 0;\n        cont_correctas = 0;\n\n        const respuestas = document.querySelectorAll('.respuestas');\n\n//        let estado = true;\n        var estado_resp = '';\n\n        //CON ESTE CODIGO VERIFICO QUE TODAS LAS PREGUNTAS ESTEN SELECCIONADAS\n        for (var i = 0; i < this.state.preguntas_respuestas.length; i++) {\n            const resp_x_preguntas = respuestas[i];//agarro todos los input radio de la pregunta\n            const checkSelect = `input[name='${i}']:checked`; //agarro el input radio seleccionado\n            const resp_elegida = (resp_x_preguntas.querySelector(checkSelect) || {}).value; // de todas las resp_x_preguntas escogeme el chequeado\n            if (resp_elegida === undefined) {\n                Swal({\n                    title: '!Atencion',\n                    text: `La pregunta ${i + 1} esta sin seleccionar`,\n                    icon: 'warning'\n                });\n                return false;\n            }\n        }\n        //CIERRO ESTE CODIGO\n        this.state.preguntas_respuestas.map(async(preg_respAct, indexPreg) => {\n\n            const resp_x_preguntas = respuestas[indexPreg];//agarro todos los input radio de la pregunta\n            const checkSelect = `input[name='${indexPreg}']:checked`; //agarro el input radio seleccionado\n            const resp_elegida = (resp_x_preguntas.querySelector(checkSelect) || {}).value; // de todas las resp_x_preguntas escogeme el chequeado\n\n            if (preg_respAct.tipo_preg === '1') {//Si el tipo de pregunta es 1 (seleccion unica) valido respuestas \n\n                var preg_incorrecta = false;//ESTA VARIABLE SIRVE PARA PINTAR LAS INCORRECTAS CUANDO ESTA EN ESTADO TRUE QUIERE DECIR QUE LA RESPUESTA DE LA PREGUNTA FUE INCORRECTA I AGO UN cont_incorrectas++;\n                for (var resp of preg_respAct.respuestas) {\n                    //                  if (resp_elegida === resp_correcta[indexPreg]) {\n                    if (resp_elegida === resp.respuesta && resp.estadoresp === true) {\n                        preg_incorrecta = false; //CON ESTO ME SERSIORO QUE SI TENGO UNA RESPUESTA CORRECTA NO ME SUME UNA INCORRECTA\n                        cont_correctas++;\n                        sum_pts = this.sumarPuntaje(indexPreg);\n                        this.get_respuestas_pint(indexPreg, preg_respAct._id, resp_elegida, estado_resp = '1', preg_respAct.tipo_preg);\n                        break;\n                    } else {\n                        preg_incorrecta = true;\n                    }\n\n                }\n                if (preg_incorrecta === true) {\n                    cont_incorrectas++;\n                    this.get_respuestas_pint(indexPreg, preg_respAct._id, resp_elegida, estado_resp = '0', preg_respAct.tipo_preg);\n                }\n                //                \n            } else if (preg_respAct.tipo_preg === '2') {//Si el tipo de pregunta es 2 (seleccion multiple) valido respuestas multiples\n\n                var select_size_db = await  this.get_resp_true(preg_respAct._id);//Con esta linea obtengo el total de respuestas en true\n\n                var resp_select_size = document.getElementsByName(`${indexPreg}`);//Con este bucle reviso cuantas opciones he seleccionado\n//                                        console.log(resp_select_size);\n\n//                    var select_size = 0;\n                var respCheackeado = '';\n                var acmd2 = '';\n                var select_size = 0;\n                for (var x = 0; x < resp_select_size.length; x++) {\n                    if (resp_select_size[x].checked) {\n                        select_size++;\n                        acmd2 = resp_select_size[x].value + ', ';\n                        respCheackeado += acmd2;\n                    }\n                }\n                var resp_select = '';\n                var preg_incorrecta = false;//ESTA VARIABLE SIRVE PARA PINTAR LAS INCORRECTAS CUANDO ESTA EN ESTADO TRUE QUIERE DECIR QUE LA RESPUESTA DE LA PREGUNTA FUE INCORRECTA I AGO UN cont_incorrectas++;\n                var contador = 0;\n                if (select_size_db === select_size) {\n\n                    for (var x = 0; x < resp_select_size.length; x++) {\n                        if (resp_select_size[x].checked) {\n                            resp_select = resp_select_size[x].value;\n\n                            for (var resp of preg_respAct.respuestas) {\n//                        console.log('resp elegida:'+resp_select + ' resp: '+resp.respuesta)\n                                if (resp_select === resp.respuesta && resp.estadoresp === true) {\n//                                        console.log('resp elegida:' + resp_select + ' resp: ' + resp.respuesta + 'trueeee')\n\n                                    preg_incorrecta = false; //CON ESTO ME SERSIORO QUE SI TENGO UNA RESPUESTA CORRECTA NO ME SUME UNA INCORRECTA\n                                    contador++;\n//                                            console.log(contador+ '  '+select_size)\n\n                                    if (contador === select_size) {\n                                        cont_correctas++;\n                                        sum_pts = this.sumarPuntaje(indexPreg);\n                                        this.get_respuestas_pint(indexPreg, preg_respAct._id, respCheackeado, estado_resp = '1', preg_respAct.tipo_preg, select_size_db, select_size);\n                                    } else {\n                                        preg_incorrecta = true;\n                                    }\n\n                                    break;\n                                } else {\n//                                        console.log('resp elegida:' + resp_select + ' resp: ' + resp.respuesta + 'falseeeee')\n                                    preg_incorrecta = true;\n                                }\n\n                            }\n//                               \n                        }\n\n\n                    }\n\n                } else {\n                    preg_incorrecta = true;\n                }\n                if (preg_incorrecta === true) {\n                    cont_incorrectas++;\n                    this.get_respuestas_pint(indexPreg, preg_respAct._id, respCheackeado, estado_resp = '0', preg_respAct.tipo_preg);\n                }\n\n            }\n\n        });\n\n        this.setState({resultados: true, deshabilitar: true});\n        this.bloquearRespuestas();\n        window.history.pushState(null, \"\", \"undefinid\");\n        clearInterval(interval);\n\n    }\n\n    calificacion() {\n        const acmd = puntaje_list.reduce((a, b) => a + b);\n        punt = sum_pts * 10 / acmd;\n        puntuacion = Math.round(punt);\n        return puntuacion;\n    }\n\n    sumarPuntaje(index) {\n        a = puntaje_list[index];\n        pts += a;\n        return  pts;\n    }\n    get_respuestas_pint(indexPreg, id_preg, resp, estado_resp, tipo_pregunta, select_size_db, select_size) {\n        axios.get(`${REACT_APP_HOST}/api/respuestas/` + id_preg + '/' + 0 + '/' + 0).then(async(response) => {\n            if (response.data) {\n                this.setState({respuestas_pint: response.data})\n                if (tipo_pregunta === '1') {\n                    this.pintarRespuestas(indexPreg, id_preg, resp, estado_resp);\n                } else if (tipo_pregunta === '2') {\n                   this.pintarRespuestasMultiple(indexPreg, id_preg, resp, estado_resp, select_size_db, select_size);\n\n                }\n            }\n        })\n\n    }\n\n    pintarRespuestasMultiple(indexPreg, id_preg, resp, estado_resp, select_size_db, select_size) {\n//       console.log('====>>> '+this.state.respuestas_pint)\n        preguntas_eval.push(id_preg);//Almaceno las preguntas para el reporte de resultados\n        respuestas_eval.push(resp);//Almaceno las respuestas para el reporte de resultados\n        estado_resp_eval.push(estado_resp);//Almaceno el estado de las respuestas 1= si es la respuesta correcta, 0= si es la respuesta incorrecta para el reporte de resultados\n\n        const respuestas_select = document.getElementsByName(indexPreg);\n\n        var contador = 0;\n        var resp_select = '';\n        var preg_incorrecta = false;\n        console.log(select_size_db + '  ' + select_size)\n        \n        if (select_size_db === select_size) {//Si el tamaño de la seleccion es igual al numero de respuestas correctas de la base entro\n            for (var x = 0; x < respuestas_select.length; x++) {\n                if (respuestas_select[x].checked) {\n                    resp_select = respuestas_select[x].value;\n\n                    for (var resp  of this.state.respuestas_pint) {\n//                        console.log('resp elegida:' + resp_select + ' resp: ' + resp.respuesta + 'trueeee')\n                        if (resp.respuesta === resp_select && resp.estadoresp === true) {\n                            preg_incorrecta = false;\n                            \n                            /**\n                             * SI LA SELECCION ES IGUAL AL DE LA BASE Y LA DE LA BASE ESTA EN ESTADO TRUE ENTRO Y SUNO EL CONTADOR\n                             * CUANDO EL CONTADOR SEA IGUAL A LA SELECCION DEL SISTEMA LAS PINTO EN SUCCESS\n                             * */\n                            contador++;\n\n                            if (contador === select_size) {\n//                                console.log('contador: ' + contador + ' selectsize: ' + select_size)\n                                for (var x = 0; x < respuestas_select.length; x++) {\n                                    if (respuestas_select[x].checked) {\n                                        var labelRadio = respuestas_select[x].parentNode;\n                                        labelRadio.classList.add(\"text-success\", \"font-weight-bold\");\n                                    }\n\n                                }\n\n                            } else {\n                                preg_incorrecta = true;\n                            }\n                            break;\n                        } else {\n                            //SI LA CONDICION NO SE CUMPLE PONGO EL ESTADO DE  preg_incorrecta = true PARA LUEGO SER PINTADO EN DANGER\n                            preg_incorrecta = true;\n                        }\n                    }\n                }\n            }\n        } else {\n           console.log('fuera de seleccion la seleccion de la base con la del sistema no son iguales, la marco como incorrecta')\n            preg_incorrecta = true;\n        }\n        if (preg_incorrecta) {\n            for (var x = 0; x < respuestas_select.length; x++) {\n                if (respuestas_select[x].checked) {\n                    var labelRadio = respuestas_select[x].parentNode;\n                    labelRadio.classList.add(\"text-danger\", \"font-weight-bold\");\n                }\n\n            }\n        }\n\n    }\n\n    pintarRespuestas(indexPreg, id_preg, resp, estado_resp) {\n//        console.log('respuesta: ', resp);\n        preguntas_eval.push(id_preg); //Almaceno las preguntas para el reporte de resultados\n        respuestas_eval.push(resp);//Almaceno las respuestas para el reporte de resultados\n        estado_resp_eval.push(estado_resp);//Almaceno el estado de las respuestas 1= si es la respuesta correcta, 0= si es la respuesta incorrecta para el reporte de resultados\n\n\n        const radios = document.getElementsByName(indexPreg);\n//                console.log(radios)\n        for (var i = 0; i < radios.length; i++) {\n            var radioCheckeado = radios[i].checked;\n            if (radioCheckeado === true) {\n                var respCheackeado = radios[i].value;\n//                var labelRadio = document.querySelector(`${indexResp}`).parentNode;\n\n                const labelRadio = document.querySelector(`input[name=\"${indexPreg}\"]:checked`).parentNode;//Accede a los radios que tengan el nombre indexResp, verifica el que esta checheado y traeme el elemento padre\n                var preg_incorrecta = false;\n                for (var resp  of this.state.respuestas_pint) {\n                    if (respCheackeado === resp.respuesta && resp.estadoresp === true) {\n                        preg_incorrecta = false;\n\n                        labelRadio.classList.add(\"text-success\", \"font-weight-bold\");\n                        break;\n                    } else {\n//                    console.log('.... '+resp.respuesta);\n                        preg_incorrecta = true;\n                    }\n\n                   \n                }\n                 if (preg_incorrecta) {\n\n                        labelRadio.classList.add(\"text-danger\", \"font-weight-bold\");\n                    }\n\n            }\n        }\n\n\n\n\n    }\n\n//    despintarRespuestas() {\n//\n//        for (var x = 0; x < this.state.preguntas_respuestas.length; x++) {\n//           $('.elem').removeClass(\"text-success\"); \n//             $('.elem').removeClass(\"text-danger\"); \n//             $('.elem').removeClass(\"font-weight-bold\"); \n////            const radios = document.getElementsByName(x);\n////            console.log('x: '+x+'   ',radios)\n////            for (var i = 0; i < radios.length; i++) {\n////                const labelchecked = radios[i].checked;\n////                if (labelchecked === true) {\n////                    console.log(labelchecked)\n////                    const labelradio = radios[i].parentNode;\n//////                console.log('i: ' + i + '   ', labelradio)\n////              labelradio.style.removeProperty('color'); \n////\n////              labelradio.style.color = 'black';\n////              labelradio.style.fontWeight = 'normal';\n////                    radios.classList.remove(\"text-success\", \"text-danger\", \"font-weight-bold\");\n//////                labelradio.removeClass(\"text-success\");\n//////                    labelradio.classList.add(\"font-weight-normal\");\n//////              labelradio.classList.replace(\"font-weight-bold\",\"\");\n////                }\n////\n////\n////            }\n//\n//        }\n//    }\n\n    bloquearRespuestas() {\n        const respuestas = document.getElementsByTagName('label');\n        for (var i = 0; i < respuestas.length; i++) {\n            const radios = document.getElementsByTagName('input');\n            radios[i].disabled = true;\n        }\n    }\n\n    async get_resp_true(id_preg) {\n        const response = await axios.get(`${REACT_APP_HOST}/api/respuestas/` + id_preg + '/' + 0 + '/' + 0 + '/' + 0);\n        return await response.data.length;\n    }\n\n    showModalResp() {\n        this.setState({modalOpen: true});\n\n    }\n    hideModal() {\n        this.setState({modalOpen: false});\n    }\n\n    cargarSegundos() {\n        let txt_segundo;\n        if (segundos < 0) {\n            segundos = 59;\n        }\n\n        //pintamos en pantalla\n        if (segundos < 10) {\n            txt_segundo = `0${segundos}`;\n        } else {\n            txt_segundo = segundos;\n        }\n        document.getElementById('segundo').innerHTML = ' : ' + txt_segundo;\n        segundos--;\n\n        this.cargarMinutos(segundos);\n    }\n\n    cargarMinutos(segundos) {\n        let txt_minuto;\n        if (segundos === -1 && minutos !== 0) {\n            setTimeout(() => {\n                minutos--;\n            }, 500);\n        } else {\n            if (segundos === -1 && minutos === 0) {\n                setTimeout(() => {\n                    minutos = 59;\n                }, 500);\n            }\n        }\n        //pintamos en pantalla\n        if (minutos < 10) {\n            txt_minuto = `0${minutos}`;\n        } else {\n            txt_minuto = minutos;\n        }\n        document.getElementById('minuto').innerHTML = ' : ' + txt_minuto;\n\n        this.cargarHora(segundos, minutos);\n\n    }\n\n    cargarHora(segundo, minuto) {\n        const {match} = this.props;\n        const id_taller = match.params.id;\n        let txtHora;\n        if (segundo === -1 && minuto === 0 && hora !== 0) {\n            setTimeout(() => {\n                hora--;\n            }, 500);\n        } else {\n            if (segundo === -1 && minuto === 0 && hora === 0) {\n                Swal({\n                    title: '!ATENCION',\n                    text: 'SU TIEMPO HA EXPIRADO',\n                    icon: 'warning',\n                    closeOnClickOutside: false,\n                    closeOnEsc: false\n                }).then((value) => {\n                    if (value) {\n                        window.location.href = `${REACT_APP_DIREC}/home`;\n//                       window.location.href=`${REACT_APP_DIREC}/presentacion/`+id_taller;\n                    }\n                })\n            }\n        }\n\n        //Pintar la hora\n        if (hora < 10) {\n            txtHora = `0${hora}`;\n        } else {\n            txtHora = hora;\n        }\n\n        document.getElementById('hora').innerHTML = txtHora;\n\n    }\n\n    sendResp(puntuacion) {\n//        console.log('aprobacion con: ', aprobacion)\n        var estado = 0;\n        if (puntuacion >= aprobacion) {\n            estado = 1;\n        }\n\n        const id_user = cookies.get('id');\n        const ci_user = cookies.get('cedula');\n        const datos = {id_user: id_user, id_taller: id_taller, ci_user: ci_user, puntuacion: puntuacion, estado: estado};\n\n        axios.post(`${REACT_APP_HOST}/api/user_taller/`, datos).then((response) => {\n            if (response.data) {\n\n                if (puntuacion >= aprobacion) {\n                    this.save_resultados(id_user, ci_user, id_taller, preguntas_eval, respuestas_eval, estado_resp_eval);\n                    Swal({\n                        title: 'Taller Completada',\n                        text: `Su puntuacion es de: ${puntuacion}/10, Felicidades`,\n                        icon: 'success'\n                    }).then((resp) => {\n                        window.location.href = `${REACT_APP_DIREC}/home`;\n                    });\n                } else {\n                    Swal({\n                        title: 'Taller Registrada',\n                        text: `Su puntuacion es de: ${puntuacion}/10, Debe acertar en todas las preguntas para completar la tarea, caso contario debera repetir el taller`,\n                        icon: 'warning',\n                    }).then((resp) => {\n                        window.location.href = `${REACT_APP_DIREC}/home`;\n                    });\n                }\n\n            }\n        })\n\n    }\n    save_resultados(id_user, ci_user, id_taller, preguntas_eval, respuestas_eval, estado_resp_eval) {\n//        console.log(id_user);\n//        console.log(ci_user);\n//        console.log(id_taller);\n//        console.log(preguntas_eval);\n//        console.log(respuestas_eval);\n\n        const datos = {id_user: id_user, ci_user: ci_user, id_taller: id_taller, preguntas_eval: preguntas_eval, respuestas_eval: respuestas_eval, estado_resp_eval: estado_resp_eval};\n\n        axios.post(`${REACT_APP_HOST}/api/resultados/`, datos).then((response) => {\n            if (response) {\n                console.log('resultados registrados exitosamente')\n            }\n        });\n    }\n\n    render() {\n        return(\n                <Container className=\"my-5\">\n                \n                    <div className=' container col-md-10 bg-dark text-white'>\n                        <div className=\"row\">\n                            <div className=\"col-md-10\">\n                                <h2 id=\"titulo_taller\" className=\"p-2\"><FontAwesomeIcon icon={faFeatherAlt}/> Evaluación</h2>               \n                            </div>\n                            <div className=\"col-md-2 py-2\">\n                                <div className=\"border text-center p-2 bg-primary font-weight-bold\">\n                                    <FontAwesomeIcon icon={faClock} size=\"lg\"/>{' '}\n                                    <span id=\"hora\" ></span >\n                                    <span  id=\"minuto\"></span>\n                                    <span id=\"segundo\" ></span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='container col-md-10 border p-4' id='contenedor_eval'>\n                \n                    </div>\n                    <div className='container bg-dark clearfix  col-md-10 p-2 '>\n                        <div className='bg-danger float-right'>\n                            <Button disabled={this.state.deshabilitar} onClick={() => {\n                                    this.validarRespuestas();\n\n                                        }} size='lg' color='primary'><FontAwesomeIcon icon={faChevronCircleRight} size=\"lg\"/> Calificar</Button>\n                        </div>\n                    </div>\n                    { this.state.resultados ?\n                                    <div className=\"container col-md-7 border p-4 my-5\">\n                                        <form >\n                                            <div  className=\"bg-success container text-center p-1\">\n                                                <label className=\"font-weight-bold text-white\"><FontAwesomeIcon icon={faCheckCircle} size=\"2x\"/> Respuestas Correctas: <span>{cont_correctas}</span></label>\n                                            </div>\n                                \n                                            <div  className=\"bg-danger container text-center p-1 my-2\">\n                                                <label className=\"font-weight-bold text-white\"><FontAwesomeIcon icon={faSkull} size=\"2x\"/> Respuestas Incorrectas: <span>{cont_incorrectas}</span></label>\n                                            </div>\n                                \n                                            <div  className=\"bg-primary container text-center p-1 my-2\">\n                                                <div>\n                                                    <label className=\"font-weight-bold text-white\"><FontAwesomeIcon icon={faClipboard} size=\"2x\"/> Su Puntuación es: <span>{this.calificacion()}/10</span></label>                \n                                                </div>\n                                \n                                \n                                            </div>\n                                \n                                            <div  className=\"col-md-12 container text-center p-1 my-2 d-flex\">\n                                                <div  className=\"col-md-6\">\n                                                    {cookies.get('rol') === 'ADMINISTRADOR' ?\n                                                            <a className='mano btn btn-info' onClick={this.showModalResp}  style={{fontSize: 13}}><FontAwesomeIcon icon={faFileAlt} size=\"2x\"/><span className=\"font-weight-bold\"> Ver Respuestas</span></a>\n                                                                    : ''}\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <Button size=\"xs\" color='primary' onClick={() => {\n                                                                this.sendResp(puntuacion)\n                                                                    }}><FontAwesomeIcon icon={faMailBulk} size=\"2x\"/> <span className=\"font-weight-bold\">Enviar Resultados</span></Button>                                                  \n                                \n                                                </div>\n                                            </div>\n                                        </form>\n                                \n                                    </div>\n\n                                : null}\n                \n                    <Modal size='lg' isOpen={this.state.modalOpen}>\n                \n                        <div className='row'>\n                            <div className='col-md-11'>\n                                <h3 className='p-2 pl-3'><FontAwesomeIcon icon={faFeatherAlt}/> Respuestas Correctas</h3>               \n                            </div>\n                            <div className='col-md-1 my-2'>\n                                <Button size='sm' color=\"danger\" onClick={() => {\n                                        this.hideModal()\n                                            }}>X</Button>                \n                            </div>\n                        </div>\n                        <div className='container border p-3' id='contenedor_resp_correctas'>\n                            {\n                                this.state.preguntas_respuestas.map((preg, index) => {\n                                    return(\n                                        <Container key={preg._id} >                           \n                                            <hr/><label  className='font-weight-bold'>{index + 1}{': '}{preg.pregunta}</label><br/> \n                                            { preg.respuestas.map((resp, index) => {\n                                                return(\n                                                        <div key={resp._id} className=\"pl-4 pt-2\">\n                                                            {preg.tipo_preg === '1' ?\n                                                                        <div>\n                                                                            {resp.estadoresp ?\n                                                                                            <label className='font-weight-bold' style={{color: 'green'}}><input type='radio' checked disabled/> {resp.respuesta}</label>\n                                                                                : <label ><input  type='radio' disabled/> {resp.respuesta}</label>\n                                                                            }\n                                                                        </div>\n                                                            :\n                                                                        <div>\n                                                                            {resp.estadoresp ?\n                                                                                            <label className='font-weight-bold' style={{color: 'green'}}><input type='checkbox' checked disabled/> {resp.respuesta}</label>\n                                                                                : <label ><input  type='checkbox' disabled/> {resp.respuesta}</label>\n                                                                            }\n                                                                        </div>\n                                                            } \n\n\n                                                        </div>\n\n                                                        )\n                                            })}\n                                        </Container>\n                                            )\n\n                                })\n                            }\n                        </div>\n                    </Modal>\n                </Container>\n                );\n    }\n}\n\nexport default Evaluacion;\n\n\n","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\libraries\\back.js",[],["230","231"],"C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\Login.js",["232","233"],"C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\Culminado.js",["234","235","236","237","238","239","240","241"],"import React, {useState, useEffect} from 'react';\nimport {Container, Row, Col, Button, CardTitle, CardText, Card, CardHeader, CardBody} from 'reactstrap';\nimport ReactPlayer from 'react-player';\nimport{useParams, Link} from 'react-router-dom';\nimport axios from 'axios';\n\nimport { FontAwesomeIcon }from '@fortawesome/react-fontawesome'\nimport {faCheckCircle, faStepBackward,faFilm}from '@fortawesome/free-solid-svg-icons'\n\nimport Navigation from '../components/Navigation';\nimport Breadcrumb_nav from '../components/Breadcrumb_nav';\n\nimport Cookies from 'universal-cookie';\n\nimport exito from '../img/copa.png';\n\nconst cookies = new Cookies();\n//import Styles from '../index.css'\n\n\nconst{REACT_APP_HOST} = process.env;\n\nconst styles = {\n    border: {\n        borderStyle: 'groove',\n        color: \"#3c3a2d\",\n        display: 'flex'\n    }\n}\n\nfunction Culminado() {\n\n    const {id} = useParams();\n    const {fecha} = useParams();\n    const[taller, getTaller] = useState([]);\n    const[value, setstatusBoton] = useState(false);\n\n    useEffect(() => {\n        if (!cookies.get('nombre')) {\n            window.location.href = '/'\n        }\n        const obtenertaller = () => {\n            axios.get(`${REACT_APP_HOST}/api/talleres/${id}`).then(response => {\n                getTaller(response.data);\n//                console.log(response.data)\n            });\n        }\n        obtenertaller();\n    }, [id]);\n\n\n\n\n    return(\n            <div>\n                <Navigation />\n                <div className=\"containerFluid mt-3 p-2\" >\n                    <Row>\n            \n                        <Col xs={12} className='text-center text-success'>\n                        <img width='400' height='400' src={exito} alt=\"Exito\"/>\n                        <h2>Curso Completo <FontAwesomeIcon icon={faCheckCircle} /></h2>\n                        <h5>Curso Completado el {fecha} <FontAwesomeIcon icon={faCheckCircle} /></h5>\n                        <Card>\n                        <CardHeader><div className=\"pl-2\"><CardTitle className=\"font-weight-bold\" tag=\"h5\">Nombre del curso: {taller.title} <FontAwesomeIcon icon={faCheckCircle} /></CardTitle></div></CardHeader>\n                        <div className=\"pl-2 pb-2 row col-md-12\">\n                            <div className=\" py-2  col-md-6 text-left\">\n                                <Link to={`/home`}><Button color=\"success\"><FontAwesomeIcon icon={faStepBackward} />Home</Button></Link>\n                            </div>\n                            <div className=\" py-2  col-md-6 text-right\">\n                                <Link to={`/presentacion/${taller._id}/1`}><Button color=\"primary\"><FontAwesomeIcon icon={faFilm} /> Ver Presentación</Button></Link>\n                            </div>\n                        </div>\n                        </Card>\n            \n            \n                        </Col>\n            \n            \n            \n                    </Row>\n            \n            \n                </div>\n            </div>\n            )\n\n}\n\nexport default Culminado;\n\n\n","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\Footer.js",["242","243"],"import React, {Component} from 'react';\nimport {render}from'react-dom';\n\n\nconst styles = {\n    footer: {\n        padding: 10,\n        textAlign: \"left\",\n\n    }\n}\nclass Footer extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n\n        }\n    }\n\n    render() {\n        return(\n                 <footer className=\"fixed-bottom bg-dark\">\n                    <div className=\"footer-copyright text-left py-1 text-white\">\n                       <span style={{fontSize:12}}> © 2021 Ccoputers Todas los derecho reservados.</span>\n                    </div>\n                </footer>\n                );\n    }\n}\n\nexport default Footer;","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\AdminResultados.js",["244","245","246","247","248","249","250","251","252","253","254","255","256","257"],"import React, {Component} from 'react';\nimport{Link} from'react-router-dom';\nimport {render}from'react-dom';\nimport {Container, Table, Modal, ModalHeader, ModalBody, Row, Col, Button}from 'reactstrap';\nimport Navigation from '../components/Navigation';\nimport axios from 'axios';\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport { FontAwesomeIcon }from '@fortawesome/react-fontawesome';\nimport {faCheckCircle, faExclamationCircle, faFileDownload, faTimesCircle, faExclamationTriangle, faSearch}from '@fortawesome/free-solid-svg-icons';\n\n//Bootstrap and jQuery libraries\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'jquery/dist/jquery.min.js';\n//Datatable Modules\nimport \"datatables.net-dt/js/dataTables.dataTables\"\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\nimport $ from 'jquery';\n\nimport 'datatables.net-buttons-dt'\nimport 'datatables.net-buttons/js/buttons.colVis.js'\nimport 'datatables.net-buttons/js/buttons.html5.js'\nimport 'datatables.net-buttons/js/buttons.print.js'\n\n        const{REACT_APP_HOST} = process.env;\nvar t_c = [];\nvar talleres_comp = [];\nvar usuario_nota_list = [];\nvar respuestas_consolidado = [];\n\nclass AdminResultados extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            talleres: [],\n            usuarios: [],\n            user_talleres: [],\n\n            //Modal\n            modalOpen: false,\n            puntuacion: '',\n\n            resultados: [],\n\n            //Para el consolidado\n            preguntas: [],\n            resultados_taller: [],\n\n            modalOpen_consolidadod: false,\n            \n            taller:'',\n            listaAreas:[],\n            area_id:'-1'\n        }\n\n\n\n    }\n    componentDidMount() {\n        this.getTalleres();\n        this.showAreas();\n        //initialize datatable\n\n    }\n\n    getTalleres() {\n        axios.get(`${REACT_APP_HOST}/api/talleres`).then((response) => {\n            this.setState({talleres: response.data})\n            this.getUsuarios();\n        })\n    }\n    \n    getTalleresXAreas(){\n        \n        if(this.state.area_id === '-1'){            \n            axios.get(`${REACT_APP_HOST}/api/talleres`).then((response) => {\n                this.setState({talleres: response.data})          \n            });\n        }else{\n            axios.post(`${REACT_APP_HOST}/api/talleres_ar/`+this.state.area_id).then(response => {\n            this.setState({talleres: response.data});\n//            console.log(response.data);\n            });         \n        }\n        \n         \n    }\n\n    getUsuarios() {\n        axios.get(`${REACT_APP_HOST}/api/users`).then((response) => {\n            this.setState({usuarios: response.data});\n            this.getUserTaller();\n        })\n    }\n\n    getUserTaller() {\n        axios.get(`${REACT_APP_HOST}/api/user_taller/`).then((response) => {\n            this.setState({user_talleres: response.data})\n//            console.log('======>> ' + response.data)\n            this.datatabla();\n            \n        })\n\n    }\n\n    usuarios_nota(id_taller) {\n        var  usuario_nota=[];\n        var  returnedobj=[];\n       \n        this.state.usuarios.map((data) => {\n            var puntuacion = '';\n            var estado = false;\n            this.state.user_talleres.map((data2) => {\n                if(data._id === data2.id_user && data2.id_taller===id_taller){\n                   estado=true;\n                   puntuacion = data2.puntuacion;\n                }\n            });\n            if(estado){\n                 returnedobj = Object.assign(data, {puntuacion: puntuacion});\n            }else{\n                returnedobj = Object.assign(data, {puntuacion: '-'});\n            }\n            usuario_nota.push(returnedobj);\n        });\n        usuario_nota_list=usuario_nota;\n    }\n\n    datatabla() {\n\n        $(document).ready(function () {\n            $('#resultados').DataTable({\n                language: {url: \"//cdn.datatables.net/plug-ins/1.10.15/i18n/Spanish.json\"},\n                dom: \"<'row'<'col-sm-12 col-md-12 text-left'B>>\" +\n                        \"<'row'<'col-sm-12'tr>>\" +\n                        \"<'row'<'col-sm-12'tr>>\" +\n                        \"<'row'<'col-sm-12 my-1'>>\" +\n                        \"<'row'<'col-sm-12 col-md-5 text-left'l><'col-sm-12 col-md-7'f>>\" +\n                        \"<'row'<'col-sm-12'tr>>\" +\n                        \"<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>\",\n                buttons: [\n                    // 'copy', 'csv', 'excel', 'print'\n                    {\n                        extend: 'copy',\n                        text: 'Copiar',\n                        titleAttr: 'Copiar Tabla',\n                        className: 'btn btn-info btn-sm ',\n                    },\n                    {\n                        extend: 'csv',\n                        text: 'Excel',\n                        titleAttr: 'Copiar Tabla',\n                        className: 'btn btn-success btn-sm  ',\n                    },\n                    {\n                        extend: 'print',\n                        text: 'Imprimir',\n                        titleAttr: 'Copiar Tabla',\n                        className: 'btn btn-dark btn-sm  ',\n                    },\n                ]\n            });\n        });\n    }\n\n    marcarCompletado(user, index) {\n//        alert(user);\n        var taller_completado = [];\n        var returnedobj = [];\n        this.state.talleres.map((taller, i) => {\n            var estado = '0';\n            var puntuacion = '';\n            this.state.user_talleres.map((user_taller, j) => {\n                if (user === user_taller.id_user) {\n                    if (taller._id === user_taller.id_taller) {\n                        estado = '1';\n                        puntuacion = user_taller.puntuacion;\n                    }\n                }\n            })\n            if (estado === '1') {\n                returnedobj = Object.assign(taller, {estado: '1', puntuacion: puntuacion});\n//                console.log(user + '--' + taller._id + '--' + puntuacion + '  est:1')\n//                console.log(returnedobj)\n            } else {\n                returnedobj = Object.assign(taller, {estado: '0'});\n            }\n            taller_completado.push(returnedobj);\n\n        })\n//        console.log(taller_completado);\n\n        talleres_comp = taller_completado;\n//        console.log('--- ',talleres_comp)\n    }\n\n    getNotas(id_user, id_taller) {\n        axios.get(`${REACT_APP_HOST}/api/user_taller/` + id_user + '/' + id_taller + '/0').then((response) => {\n            if (response.data) {\n                this.setState({puntuacion: response.data.puntuacion});\n            }\n        })\n    }\n\n    //ABRE MODAL RESULTADOS\n    modalOpen(id_user, id_taller, puntuacion) {\n        this.getNotas(id_user, id_taller);\n        this.setState({modalOpen: true});\n        this.showResultados(id_user, id_taller);\n\n    }\n    showResultados(id_user, id_taller) {\n        axios.get(`${REACT_APP_HOST}/api/resultados/` + id_user + '/' + id_taller).then((response) => {\n            this.setState({resultados: response.data});\n        });\n    }\n\n    hideModalEval() {\n        this.setState({modalOpen: false});\n    }\n    //CIERRA MODAL RESULTADOS\n\n\n\n    //ABRE MODAL CONSOLIDADO\n    show_consolidado(id_taller) {\n\n        this.setState({modalOpen_consolidadod: true});\n        this.show_consolidado_data(id_taller);\n        \n    }\n\n    show_consolidado_data(taller_id) {\n        axios.get(`${REACT_APP_HOST}/api/preguntas/` + taller_id).then((response) => {\n            this.setState({preguntas: response.data, taller:taller_id});\n            this.get_resultados(taller_id);\n//            alert(this.state.taller);\n            this.usuarios_nota(this.state.taller);\n        });\n    }\n\n    get_resultados(taller_id) {\n\n        axios.get(`${REACT_APP_HOST}/api/resultados/` + taller_id).then((response) => {\n            this.setState({resultados_taller: response.data});\n\n        });\n\n    }\n\n    respuestas_user(id_user) {\n\n        var respuestas_consol = [];\n        this.state.preguntas.map((preg, i) => {\n            this.state.resultados_taller.map((resp, j) => {\n                if (preg._id === resp.id_preg && id_user === resp.id_user) {\n//                        alert(id_user+'  '+ preg.pregunta+'  : '+resp.resp)\n                    respuestas_consol.push(resp.resp);\n                }\n\n            })\n        });\n        respuestas_consolidado = respuestas_consol;\n\n    }\n    hideModal_consolidado() {\n        this.setState({modalOpen_consolidadod: false});\n    }\n    // CIERRA MODAL CONSOLIDADO\n\n  async showAreas(){\n     \n     const response= await axios.get(`${REACT_APP_HOST}/api/areas`);\n     if(response){\n         this.setState({listaAreas:response.data});\n     }\n     \n  }\n  handleChange=(e)=> {\n//        console.log(e.target.value);\n        if (e.target.type === 'checkbox') {\n            var value = e.target.checked;\n            var name = e.target.name;\n        } else {\n            var {name, value} = e.target;\n        }\n//       \n        this.setState({[name]: value});\n    }\n\n    render() {\n\n        return(\n                <div>\n                    <Navigation />\n                    {this.state.user_talleres.length > 0 ?\n                                    <div className=\"containerList my-3\" style={{overflowX: 'auto'}}> \n                                       \n                                        <div className=\" container-fluid col-md-12 row my-2 justify-content-center\">\n                                           \n                                                <select className=\"form-control col-md-4\" onChange={this.handleChange} name=\"area_id\" value={this.state.area_id}>\n                                                <option value=\"-1\" >Todas las Áreas</option>\n                                                {\n                                                    this.state.listaAreas.map((data)=>(\n                                                            <option key={data._id}  value={data._id}>{data.title}</option>\n                                                    ))\n                                                }\n                                                </select>                                             \n                                          \n                                                  <Button onClick={()=>{this.getTalleresXAreas()}}><FontAwesomeIcon icon={faSearch}/> Filtrar Área</Button>\n                                           \n                                        </div>\n                                        <table id='resultados' className='table table-nowrap' style={{fontSize: '15px'}}>\n                                            <thead >\n                                \n                                                <tr>\n                                \n                                                    <th></th>\n                                                    <th></th>\n                                                    {\n                                                        this.state.talleres.map((data, index) => (\n                                                            <th key={data._id}><button className=\"btn btn-success btn-sm\" onClick={() => {\n                                                                    this.show_consolidado(data._id)\n                                                                                    }}><FontAwesomeIcon icon={faFileDownload}/> Exportar</button></th>\n                                                        ))\n                                                    }\n                                \n                                                </tr>\n                                                <tr className='bg-dark text-white'>\n                                \n                                                    <th>USUARIO</th>\n                                                    <th>CEDULA</th>\n                                                    {\n                                                        this.state.talleres.map((data, index) => (\n                                                        <th key={data._id}>{data.title}</th>\n                                                    ))\n                                                    }\n                                \n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                \n                                                {\n                                        this.state.usuarios.map((data, index) => (\n                                                                <tr key={data._id}>\n                                                                    <td>{data.nombre}{' '}{data.apellido}</td>\n                                                                    <td>{data.cedula}</td>\n                                                                    {this.marcarCompletado(data._id, index)}\n                                                                    {\n                                                                                        talleres_comp.map((data2) => (\n                                                                                                    <td key={data2._id}>\n                                                                                                        {data2.estado === '1' ? <a href='#' onClick={() => {\n                                                                                                                                                                        this.modalOpen(data._id, data2._id)\n                                                                                                                                            }}><span className=' text-success'>Completo {data2.puntuacion} <FontAwesomeIcon icon={faCheckCircle} /></span></a>\n                                                                                                                                    : <span className='text-warning badge'>En curso <FontAwesomeIcon icon={faExclamationCircle} /></span>}\n                                                                                                    </td>\n\n                                                                                ))\n                                                                    }\n                                                                </tr>\n                                                    ))\n                                                }\n                                \n                                            </tbody>\n                                        </table>\n                                    </div>\n                            : <h5 className=\"text-warning\">! No se ha gerenado ninguna capacitacion para poder mostrar resultados <FontAwesomeIcon icon={faExclamationTriangle}/></h5>}  \n                    <Modal isOpen={this.state.modalOpen} size='lg'>\n                        <div className='p-2 border'>\n                            <Row>\n                                <Col xs='11'>\n                                <h4>Resultados de La evaluación  <span className='badge bg-success text-white'>{this.state.puntuacion}/10</span></h4>\n                                </Col>\n                                <Col xs='1'>\n                                    <Button color=\"danger\" size=\"sm\" onClick={() => { this.hideModalEval(); }}>X</Button>                                                                        \n                                </Col>\n                            </Row>\n                        </div>  \n                        <ModalBody>\n                            <div className=\"col-md-12\">\n                                {\n                        this.state.resultados.map((data, index)=>{\n                        return(\n                                                            <Container key={data._id} >  \n                                        <label>{index +1+')'} {data.preg_taller.pregunta}</label><br/>\n                                        {data.estado_resp ==='1'?\n                                                                                        <span className=\"text-success\"><label className='ml-5'>{data.resp}</label></span>\n\n                                                                                        :\n                                                                                                        <span className=\"text-danger font-weight-bold\"><label className='ml-5'>{data.resp}</label></span>\n                                                            }                                      \n                                                        </Container>\n                                );\n                    })\n                                }\n                            </div>\n                        </ModalBody>\n                    </Modal>\n                \n                \n                    <Modal isOpen={this.state.modalOpen_consolidadod} style={{maxWidth: '1300px', width: '100%'}} >\n                        <div className=\"col-md-12 row\"> \n                        <div className=\"col-md-10 mt-2\"> \n                            <ReactHTMLTableToExcel\n                                id=\"btn-export-excel\"\n                                className=\"btn btn-success\"\n                                table=\"consolidado\"\n                                filename=\"Consolidado de Respuestas\"\n                                sheet=\"HOJA 1\"\n                                buttonText=\"Descargar Archivo XLS\"/>\n                        </div>  \n                        <div className=\"col-md-2 text-right\"> \n                            <div className=\"my-2 text-right\"><Button color=\"danger\" size=\"sm\" onClick={() => { this.hideModal_consolidado(); }}><FontAwesomeIcon icon={faTimesCircle}/></Button> </div>                         \n                        </div>  \n                        </div>  \n                        <ModalBody>\n                        \n                            <div className=\" my-3\" style={{overflowX: 'auto'}}>                                            \n                                <table id='consolidado' className='table table-nowrap' style={{fontSize:'11px'}}>\n                                    <thead className='bg-dark text-white' >\n\n                                        <tr>\n\n                                            <th>USUARIO</th>\n                                            <th>CEDULA</th>\n                                            <th className=\"bg-info text-center\">NOTA</th>\n                                            {\n                                                this.state.preguntas.map((data, index) => (\n                                                    <th key={data._id}>{data.pregunta}</th>\n                                                ))\n                                            }\n\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            usuario_nota_list.map((data, index) => (\n                                                    <tr key={data._id}>\n                                                        <td>{data.nombre}{' '}{data.apellido}</td>\n                                                        <td>{data.cedula}</td>\n                                                        <td className=\"bg-info text-center text-white\">{data.puntuacion}</td>\n                                                        {this.respuestas_user(data._id, index)}\n                                                        {\n                                                        respuestas_consolidado.map((data2, j) => (\n                                                                                                            <td key={j}> {data2}</td>\n                                                                    ))\n                                                        }\n                                                    </tr>\n                                            ))\n                                        }\n\n                                    </tbody>\n\n                                </table>\n                            </div>\n                \n                        </ModalBody>\n                \n                        <div className=\"my-2 text-center\"><Button color=\"danger\" size=\"sm\" onClick={() => {\n                        this.hideModal_consolidado();\n                    }}><FontAwesomeIcon icon={faTimesCircle}/> Close</Button> </div>                                                                       \n                \n                    </Modal>\n                </div>\n\n                );\n    }\n}\n\nexport default AdminResultados;","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\setting\\server_firebase.js",[],"C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\ResetIntentos.js",["258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275"],"\nimport React, {Component} from 'react'\nimport {render} from 'react-dom'\nimport Navigation from '../components/Navigation';\nimport axios from 'axios'\nimport Swal from 'sweetalert'\nimport { FontAwesomeIcon }from '@fortawesome/react-fontawesome'\nimport { faFileAlt, faEdit, faRetweet, faTrash, faFile, faSave, faSyncAlt, faCheckCircle, faSkull, faClock, faRedo, faSearch }from '@fortawesome/free-solid-svg-icons'\nimport DataTable from \"@material-table/core\";\nimport {Grid, Avatar} from \"@material-ui/core\";\n\nimport {Table, Container, InputGroup, Input, Button } from 'reactstrap'\n\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\nconst{REACT_APP_HOST, REACT_APP_PATCH} = process.env;\n\nconst paginacion = {\n    labelRowsSelect: 'Filas',\n    labelRowsPerPage: 'Filas por Pagina',\n    previousAriaLabel: 'Pagina Anterior',\n    previousTooltip: 'Pagina Anterior',\n    nextAriaLabel: 'Siguiente Página',\n    nextTooltip: 'Siguiente Página',\n    lastAriaLabel: 'Ultima page',\n    lastTooltip: 'Ultima page',\n    firstAriaLabel: 'Primera Página',\n    firstTooltip: 'Primera Página'\n}\n\nconst toolbar = {\n    exportTitle: 'Exportar',\n    exportAriaLabel: 'Exportar',\n    exportName: 'Exportar a',\n    searchTooltip: 'Buscar',\n    searchPlaceholder: 'Buscar'\n}\n\n\nexport default  class ResetIntentos extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ci_user: '',\n            usuario: '',\n            lista_taller_user: []\n        }\n        this.handleChange = this.handleChange.bind(this);\n\n\n    }\n    componentDidMount() {\n        if (!cookies.get('nombre')) {\n            window.location.href = '/';\n        }\n    }\n\n    get_taller_usuario(ci) {\n        if (ci != '') {\n            axios.get(`${REACT_APP_HOST}/api/user_taller/get_taller_ci/` + ci).then((response) => {\n                if (response.data != '') {\n                    this.setState({lista_taller_user: response.data})\n                    this.get_user(ci);\n                } else {\n                    Swal({\n                        title: 'Atención',\n                        text: 'No se encontraron resultados con este CI:' + ci + ' ',\n                        icon: 'warning',\n                        timer: 3000,\n                        button: false\n                    });\n                }\n            })\n        } else {\n            Swal({\n                title: 'Atención',\n                text: 'El campo cedula esta vacio',\n                icon: 'warning',\n                timer: 2000,\n                button: false\n            });\n        }\n\n    }\n    get_user(ci) {\n        const datos = {ci: ci}\n        axios.post(`${REACT_APP_HOST}/api/users/user_ci`, datos).then((response) => {\n            if (response) {\n                this.setState({usuario: response.data.nombre + response.data.apellido})\n            }\n        })\n    }\n\n    resetearIntentos(row_id) {\n\n        Swal({\n            title: '! Atención',\n            text: ' Esta seguro de resetear los intentos',\n            icon: 'warning',\n            buttons: ['Cancelar', 'Sí'],\n            dangerMode: true\n        }).then((value) => {\n            if (value) {\n                axios.put(`${REACT_APP_HOST}/api/user_taller/` + row_id).then((response) => {\n                    if (response) {\n                        Swal({\n                            title: ' OK',\n                            text: ' Los intentos se han reseteado para este taller',\n                            icon: 'success',\n                        })\n                    }\n                })\n            }\n        })\n\n    }\n\n    handleChange(e) {\n//        console.log(e.target.value);\n        if (e.target.type === 'checkbox') {\n            var value = e.target.checked;\n            var name = e.target.name;\n        } else {\n            var {name, value} = e.target;\n        }\n\n        this.setState({[name]: value});\n    }\n\n    render() {\n        return(\n                <div className=\"container-fluid\">\n                    <Navigation />\n                    <Container>\n                        <div className=\"row col-md-12 my-3 ml-3 container-fluid\">\n                            <div className=\"col-md-5\">\n                                <InputGroup size=\"sm\">\n                                    <Input name='ci_user' onChange={this.handleChange} value={this.state.ci_user} placeholder='Ingrese el número de cédula'/>\n                                    <Button color=\"dark\" size=\"sm\" onClick={() => {\n                                            this.get_taller_usuario(this.state.ci_user)\n                                                }}> Buscar Usuario <FontAwesomeIcon icon={ faSearch}/></Button>                                                                \n                                </InputGroup>\n                            </div>\n                            <div className='col-md-6 text-center'>\n                                <h3>Restablecer Intentos Por Taller</h3>\n                            </div>\n                        </div>\n                        <div className=\"containerSetting\">\n                            <DataTable\n                \n                                columns={[\n                                    {title: 'Taller', field: 'taller_user.title'},\n                                    {title: 'Intentos Permitidos', field: 'taller_user.intentos', render: (rowData) => <Grid><Avatar>{rowData.taller_user.intentos}</Avatar></Grid>},\n                                    {title: 'Total de Intentos', field: 'intentos', render: (rowData) => <Grid><Avatar>{rowData.intentos}</Avatar></Grid>}\n                                ]}\n                \n                                data={this.state.lista_taller_user}\n                                title={this.state.usuario}\n                                actions={[\n//                                   \n                                    {\n                                        icon: () => <a className=\"btn btn-warning btn-sm\" size=\"sm\"><FontAwesomeIcon icon={faRetweet}/></a>,\n                                        tooltip: 'Resetear Intentos',\n                                        onClick: (event, rowData) => {\n                                            this.resetearIntentos(rowData._id)\n                                        }\n                                    },\n                                ]}\n                                options={{\n                                        actionsColumnIndex: -1,\n                                        exportButton: true,\n                                        headerStyle: {\n                                            backgroundColor: '#343a40',\n                                            color: '#FFF'\n                                        },\n                                        padding: 'dense', //dense\n                                        pageSize: 8,\n                                        pageSizeOptions: [8, 15, 30],\n                                        paginationType: 'stepped'\n                                    }}\n                                localization={{\n                                        pagination: paginacion,\n                                        toolbar: toolbar,\n                                        header: {\n                                            actions: 'Reset'\n                                        }\n                                    }}\n                                />\n                        </div>\n                \n                    </Container>\n                \n                </div>\n\n                );\n    }\n}\n","C:\\Users\\ADMIN DEP IT\\Documents\\NetBeansProjects\\talleresfront\\src\\components\\ResetTalleres.js",["276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296"],"\nimport React, {Component} from 'react'\nimport {render} from 'react-dom'\nimport Navigation from '../components/Navigation';\nimport axios from 'axios'\nimport Swal from 'sweetalert'\nimport { FontAwesomeIcon }from '@fortawesome/react-fontawesome'\nimport { faFileAlt, faEdit, faRetweet, faTrash, faFile, faUser, faSave, faSyncAlt, faCheckCircle, faSkull, faClock, faRedo, faSearch }from '@fortawesome/free-solid-svg-icons'\nimport DataTable from \"@material-table/core\";\nimport {Grid, Avatar} from \"@material-ui/core\";\n\nimport {Table, Container, InputGroup, Input, Button } from 'reactstrap'\n\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\nconst{REACT_APP_HOST, REACT_APP_PATCH} = process.env;\n\nconst paginacion = {\n    labelRowsSelect: 'Filas',\n    labelRowsPerPage: 'Filas por Pagina',\n    previousAriaLabel: 'Pagina Anterior',\n    previousTooltip: 'Pagina Anterior',\n    nextAriaLabel: 'Siguiente Página',\n    nextTooltip: 'Siguiente Página',\n    lastAriaLabel: 'Ultima page',\n    lastTooltip: 'Ultima page',\n    firstAriaLabel: 'Primera Página',\n    firstTooltip: 'Primera Página'\n}\n\nconst toolbar = {\n    exportTitle: 'Exportar',\n    exportAriaLabel: 'Exportar',\n    exportName: 'Exportar a',\n    searchTooltip: 'Buscar',\n    searchPlaceholder: 'Buscar'\n}\n\n\nexport default  class ResetTalleres extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ci_user: '',\n            usuario: '',\n            lista_taller_user: [],\n            lista_user: [],\n            lista_areas: [],\n            lista_taller_es:[],\n            area_id:'-1'\n        }\n        this.handleChange = this.handleChange.bind(this);\n\n\n    }\n    componentDidMount() {\n        if (!cookies.get('nombre')) {\n            window.location.href = '/';\n        }\n//        this.get_usuarios();\n    }\n\n    async get_usuarios() {\n        var response = await axios.get(`${REACT_APP_HOST}/api/users`);\n        if (response.data) {\n            this.setState({lista_user: response.data})\n        } else {\n            Swal({\n                title: 'Atención',\n                text: 'No se encontraron resultados de usuarios ',\n                icon: 'warning',\n                timer: 3000,\n                button: false\n            });\n\n        }\n        this.get_areas();\n    }\n    async get_areas() {\n        var response = await axios.get(`${REACT_APP_HOST}/api/areas`);\n        if (response.data) {\n            this.setState({lista_areas: response.data})\n        } else {\n            Swal({\n                title: 'Atención',\n                text: 'No se encontraron resultados de áreas ',\n                icon: 'warning',\n                timer: 3000,\n                button: false\n            });\n        }\n    }\n\n    get_taller_usuario(ci) {\n\n        if (ci != '') {\n            axios.get(`${REACT_APP_HOST}/api/user_taller/get_taller_ci/` + ci).then((response) => {\n                if (response.data != '') {\n                    this.setState({lista_taller_user: response.data})\n                    this.get_user(ci);\n                } else {\n                    Swal({\n                        title: 'Atención',\n                        text: 'No se encontraron resultados con este CI:' + ci + ' ',\n                        icon: 'warning',\n                        timer: 3000,\n                        button: false\n                    });\n                }\n            })\n        } else {\n            Swal({\n                title: 'Atención',\n                text: 'El campo cedula esta vacio',\n                icon: 'warning',\n                timer: 2000,\n                button: false\n            });\n        }\n\n\n    }\n\n    get_user(ci) {\n        const datos = {ci: ci}\n        axios.post(`${REACT_APP_HOST}/api/users/user_ci`, datos).then((response) => {\n            if (response) {\n                this.setState({usuario: response.data.nombre + response.data.apellido})\n            }\n        })\n    }\n    \n    get_taller_es() {\n            axios.post(`${REACT_APP_HOST}/api/talleres/get_taller_ess`).then((response) => {\n                if (response.data != '') {\n                    this.setState({lista_taller_es: response.data})\n                } else {\n                    Swal({\n                        title: 'Atención',\n                        text: 'No se encontraron resultados con este CI:',\n                        icon: 'warning',\n                        timer: 3000,\n                        button: false\n                    });\n                }\n            })\n        \n\n\n    }\n\n\n    resetearTaller(row_id, id_taller) {\n        var id_us_taller = cookies.get('id');\n        Swal({\n            title: '! Atención, Esta seguro de continuar',\n            text: ' Este Proceso restaurara todo el taller incluido sus resltados',\n            icon: 'warning',\n            buttons: ['Cancelar', 'Sí'],\n            dangerMode: true\n        }).then((value) => {\n            if (value) {\n                axios.put(`${REACT_APP_HOST}/api/user_taller/reset_talleres/` + row_id + '/' + id_us_taller + '/' + id_taller).then((response) => {\n                    if (response) {\n                        Swal({\n                            title: ' OK',\n                            text: ' El taller se han reseteado exitosamente, Los resultados del taller han sido eliminados',\n                            icon: 'success',\n                        })\n                    }\n\n                })\n            }\n        })\n    }\n    resetearTaller_user_area(row_id) {\n        Swal({\n            title: '! Atención, Esta seguro de continuar',\n            text: ' Este Proceso restaurara todo el taller incluido sus resltados',\n            icon: 'warning',\n            buttons: ['Cancelar', 'Sí'],\n            dangerMode: true\n        }).then((value) => {\n            if (value) {\n                axios.put(`${REACT_APP_HOST}/api/user_taller/reset_talleres_us_ar/` + row_id +'/'+this.state.area_id).then((response) => {\n                    if (response.data==='ok') {\n                        Swal({\n                            title: ' OK',\n                            text: ' El taller se han reseteado exitosamente, Los resultados del taller han sido eliminados',\n                            icon: 'success',\n                        })\n                    }else{\n                         Swal({\n                            title: ' Atención',\n                            text: response.data,\n                            icon: 'warning',\n                        })\n                       \n                    }\n\n                })\n            }\n        })\n    }\n    resetearTaller_taller(row_id) {\n        Swal({\n            title: '! Atención, Esta seguro de continuar',\n            text: ' Este Proceso restaurara el taller a todos los usuarios',\n            icon: 'warning',\n            buttons: ['Cancelar', 'Sí'],\n            dangerMode: true\n        }).then((value) => {\n            if (value) {\n                axios.put(`${REACT_APP_HOST}/api/user_taller/reset_talleres_tall/` + row_id ).then((response) => {\n                    if (response.data) {\n                        Swal({\n                            title: ' OK',\n                            text: ' El taller se han reseteado exitosamente, Los resultados del taller han sido eliminados',\n                            icon: 'success',\n                        })\n                    }\n\n                })\n            }\n        })\n    }\n    reget_general(row_id) {\n        Swal({\n            title: '! Atención, Esta seguro de continuar',\n            text: ' Este Proceso restaurara todos los talleres de cada uno de los usuarios',\n            icon: 'warning',\n            buttons: ['Cancelar', 'Sí'],\n            dangerMode: true\n        }).then((value) => {\n            if (value) {\n                axios.post(`${REACT_APP_HOST}/api/user_taller/reset_general` ).then((response) => {\n                    if (response.data) {\n                        Swal({\n                            title: ' OK',\n                            text: ' Todos los talleres han sido restaurados a estado EN CURSO',\n                            icon: 'success',\n                        })\n                    }\n\n                })\n            }\n        })\n    }\n\n\n    handleChange(e) {\n//        console.log(e.target.value);\n        if (e.target.type === 'checkbox') {\n            var value = e.target.checked;\n            var name = e.target.name;\n        } else {\n            var {name, value} = e.target;\n        }\n\n        this.setState({[name]: value});\n    }\n\n    render() {\n        return(\n                <div className=\"container-fluid\">\n                    <Navigation />\n                    <Container>\n                        <div className=\"row col-md-12 my-3 ml-3 container-fluid\">\n                            <div className=\"col-md-5\">\n                                <InputGroup size=\"sm\">\n                                    <Input name='ci_user' onChange={this.handleChange} value={this.state.ci_user} placeholder='Ingrese el número de cédula'/>\n                                    <Button color=\"dark\" size=\"sm\" onClick={() => {\n                                            this.get_taller_usuario(this.state.ci_user)\n                                                }}> Buscar Usuario <FontAwesomeIcon icon={ faSearch}/></Button>                                                                \n                                </InputGroup>\n                            </div>\n                            <div className='col-md-6 text-center'>\n                                <h4>RETABLECER TALLERES</h4>\n                            </div>\n                        </div>\n                        <div className=\"containerSetting\">\n                            <DataTable\n                \n                \n                                data={this.state.lista_taller_user}\n                                title={this.state.usuario}\n                                actions={[\n//                                   \n                                    {\n                                        icon: () => <a className=\"btn btn-warning btn-sm\" size=\"sm\"><FontAwesomeIcon icon={faRetweet}/></a>,\n                                            tooltip: 'Resetear Taller',\n                                            onClick: (event, rowData) => {\n                                                if (rowData.estado === '1') {\n                                                    this.resetearTaller(rowData._id, rowData.id_taller)\n                                                }\n                                            }\n                                        },\n                                ]}\n                \n                                columns={[\n                                    {title: 'Taller', field: 'taller_user.title'},\n                                    {title: 'Área', field: 'area_taller.title'},\n\n                                    {title: 'Estado del Taller', field: 'estado',\n                                        render: (rowData) => rowData.estado === '0' ? <span size=\"sm\" className='badge text-white bg-warning'>En curso <FontAwesomeIcon icon={faFileAlt} /></span>\n                                                    : <span size=\"sm\" className='badge bg-success text-white'>Aprobado <FontAwesomeIcon icon={faCheckCircle}/></span>\n\n                                    },\n                                    ]}\n                \n                \n                                options={{\n                                        actionsColumnIndex: -1,\n                                        exportButton: true,\n                                        headerStyle: {\n                                            backgroundColor: '#343a40',\n                                            color: '#FFF'\n                                        },\n                                        padding: 'dense', //dense\n                                        pageSize: 8,\n                                        pageSizeOptions: [8, 15, 30],\n                                        paginationType: 'stepped'\n                                    }}\n                                localization={{\n                                        pagination: paginacion,\n                                        toolbar: toolbar,\n                                        header: {\n                                            actions: 'Reset'\n                                        }\n                                    }}\n                                />\n                        </div>\n                \n                    </Container>\n                    <hr/>\n                    <Container>\n                        <div className=\"row col-md-12 my-3 ml-3 container-fluid\">\n                            <div className=\"col-md-5\">\n                                <Button color=\"dark\" size=\"sm\" onClick={() => {\n                                        this.get_taller_es()\n                                            }}><FontAwesomeIcon icon={ faFileAlt}/> Show Talleres</Button>                                                                \n                            </div>\n                \n                        </div>\n                        <div className=\"containerSetting\">\n                            <DataTable\n                \n                \n                                data={this.state.lista_taller_es}\n                                title='RESETEAR TODOS LOS TALLERES POR NOMBRE DE TALLER'\n                                actions={[\n//                                   \n                                    {\n                                        icon: () => <a className=\"btn btn-warning btn-sm\" size=\"sm\"><FontAwesomeIcon icon={faRetweet}/></a>,\n                                            tooltip: 'Resetear Talleres por Taller',\n                                            onClick: (event, rowData) => {\n                                                if (rowData.estado === '1') {\n                                                    this.resetearTaller_taller(rowData._id)\n                                                }\n                                            }\n                                        },\n                                ]}\n                \n                                columns={[\n                                    {title: 'Taller', field: 'title'},\n                                    {title: 'Área', field: 'talleres_area.title'},\n\n                                    ]}\n                \n                \n                                options={{\n                                        actionsColumnIndex: -1,\n                                        exportButton: true,\n                                        headerStyle: {\n                                            backgroundColor: '#343a40',\n                                            color: '#FFF'\n                                        },\n                                        padding: 'dense', //dense\n                                        pageSize: 8,\n                                        pageSizeOptions: [8, 15, 30],\n                                        paginationType: 'stepped'\n                                    }}\n                                localization={{\n                                        pagination: paginacion,\n                                        toolbar: toolbar,\n                                        header: {\n                                            actions: 'Reset'\n                                        }\n                                    }}\n                                />\n                        </div>\n                \n                    </Container>\n                    <hr/>\n                    <Container>\n                        <div className=\"row col-md-12 my-3 ml-3 container-fluid\">\n                            <div className=\"col-md-5\">\n                                <Button color=\"dark\" size=\"sm\" onClick={() => {\n                                        this.get_usuarios()\n                                            }}><FontAwesomeIcon icon={ faUser}/> Show Users</Button>                                                                \n                            </div>\n                \n                        </div>\n                        <div className=\"containerSetting\">\n                            <DataTable\n                \n                \n                                data={this.state.lista_user}\n                                title='RESETEAR TODOS LOS TALLERES POR USUARIO Y ÁREAS'\n                                actions={[\n//                                   \n                                    {\n                                        icon: () => <a className=\"btn btn-warning btn-sm\" size=\"sm\"><FontAwesomeIcon icon={faRetweet}/></a>,\n                                            tooltip: 'Resetear Taller',\n                                            onClick: (event, rowData) => {\n                                                    this.resetearTaller_user_area(rowData._id)                                                \n                                            }\n                                        },\n                                ]}\n                \n                                columns={[\n                                    {title: 'Nombre', field: 'nombre'},\n                                    {title: 'Apellido', field: 'apellido'},\n\n                                    {title: 'Area',\n                                        render: (rowData) =><select size=\"sm\" className='badge text-white bg-info' onChange={this.handleChange} name=\"area_id\" value={this.state.area_id}>\n                                                                <option value=\"-1\" >Todas las Áreas</option>\n                                                                {\n                                                                        this.state.lista_areas.map((data) => (\n                                                                <option key={data._id}  value={data._id}>{data.title}</option>\n                                                                                    ))\n                                                                }\n                                                            </select>\n\n                                    },\n                                ]}\n                \n                \n                                options={{\n                                        actionsColumnIndex: -1,\n                                        exportButton: true,\n                                        headerStyle: {\n                                            backgroundColor: '#343a40',\n                                            color: '#FFF'\n                                        },\n                                        padding: 'dense', //dense\n                                        pageSize: 8,\n                                        pageSizeOptions: [8, 15, 30],\n                                        paginationType: 'stepped'\n                                    }}\n                                localization={{\n                                        pagination: paginacion,\n                                        toolbar: toolbar,\n                                        header: {\n                                            actions: 'Reset'\n                                        }\n                                    }}\n                                />\n                        </div>\n                \n                    </Container>\n                    <hr/>\n                     <Container>\n                        <div className=\"row col-md-12 my-5 container-fluid\">\n                            <button className='form-control btn btn-danger' onClick={()=>{this.reget_general()}}>RESETEAR TODO (ESTE PROCESO PASARA HA ESTADO EN CURSO A TODOS LOS TALLERES DE CADA USUARIO)</button>\n                        </div>\n                     </Container>\n                \n                </div>\n\n                );\n    }\n}\n",{"ruleId":"297","severity":1,"message":"298","line":4,"column":8,"nodeType":"299","messageId":"300","endLine":4,"endColumn":16},{"ruleId":"297","severity":1,"message":"301","line":6,"column":8,"nodeType":"299","messageId":"300","endLine":6,"endColumn":13},{"ruleId":"302","replacedBy":"303"},{"ruleId":"304","replacedBy":"305"},{"ruleId":"297","severity":1,"message":"306","line":2,"column":9,"nodeType":"299","messageId":"300","endLine":2,"endColumn":15},{"ruleId":"297","severity":1,"message":"307","line":5,"column":8,"nodeType":"299","messageId":"300","endLine":5,"endColumn":18},{"ruleId":"297","severity":1,"message":"308","line":6,"column":8,"nodeType":"299","messageId":"300","endLine":6,"endColumn":22},{"ruleId":"297","severity":1,"message":"306","line":3,"column":9,"nodeType":"299","messageId":"300","endLine":3,"endColumn":15},{"ruleId":"297","severity":1,"message":"309","line":11,"column":8,"nodeType":"299","messageId":"300","endLine":11,"endColumn":22},{"ruleId":"310","severity":1,"message":"311","line":76,"column":52,"nodeType":"312","messageId":"313","endLine":76,"endColumn":54},{"ruleId":"310","severity":1,"message":"311","line":82,"column":52,"nodeType":"312","messageId":"313","endLine":82,"endColumn":54},{"ruleId":"310","severity":1,"message":"311","line":88,"column":52,"nodeType":"312","messageId":"313","endLine":88,"endColumn":54},{"ruleId":"310","severity":1,"message":"311","line":93,"column":52,"nodeType":"312","messageId":"313","endLine":93,"endColumn":54},{"ruleId":"310","severity":1,"message":"311","line":98,"column":52,"nodeType":"312","messageId":"313","endLine":98,"endColumn":54},{"ruleId":"314","severity":1,"message":"315","line":114,"column":33,"nodeType":"316","endLine":116,"endColumn":43},{"ruleId":"317","severity":1,"message":"318","line":119,"column":37,"nodeType":"316","endLine":119,"endColumn":179},{"ruleId":"310","severity":1,"message":"311","line":129,"column":59,"nodeType":"312","messageId":"313","endLine":129,"endColumn":61},{"ruleId":"297","severity":1,"message":"306","line":2,"column":9,"nodeType":"299","messageId":"300","endLine":2,"endColumn":15},{"ruleId":"297","severity":1,"message":"319","line":3,"column":24,"nodeType":"299","messageId":"300","endLine":3,"endColumn":33},{"ruleId":"297","severity":1,"message":"320","line":3,"column":79,"nodeType":"299","messageId":"300","endLine":3,"endColumn":90},{"ruleId":"297","severity":1,"message":"321","line":3,"column":92,"nodeType":"299","messageId":"300","endLine":3,"endColumn":101},{"ruleId":"297","severity":1,"message":"322","line":8,"column":28,"nodeType":"299","messageId":"300","endLine":8,"endColumn":33},{"ruleId":"297","severity":1,"message":"323","line":8,"column":50,"nodeType":"299","messageId":"300","endLine":8,"endColumn":56},{"ruleId":"297","severity":1,"message":"324","line":8,"column":73,"nodeType":"299","messageId":"300","endLine":8,"endColumn":82},{"ruleId":"297","severity":1,"message":"325","line":8,"column":108,"nodeType":"299","messageId":"300","endLine":8,"endColumn":115},{"ruleId":"297","severity":1,"message":"326","line":8,"column":117,"nodeType":"299","messageId":"300","endLine":8,"endColumn":123},{"ruleId":"297","severity":1,"message":"308","line":12,"column":8,"nodeType":"299","messageId":"300","endLine":12,"endColumn":22},{"ruleId":"297","severity":1,"message":"327","line":24,"column":7,"nodeType":"299","messageId":"300","endLine":24,"endColumn":14},{"ruleId":"297","severity":1,"message":"328","line":67,"column":5,"nodeType":"299","messageId":"300","endLine":67,"endColumn":17},{"ruleId":"297","severity":1,"message":"329","line":68,"column":5,"nodeType":"299","messageId":"300","endLine":68,"endColumn":10},{"ruleId":"297","severity":1,"message":"330","line":227,"column":25,"nodeType":"299","messageId":"300","endLine":227,"endColumn":34},{"ruleId":"297","severity":1,"message":"331","line":272,"column":25,"nodeType":"299","messageId":"300","endLine":272,"endColumn":36},{"ruleId":"297","severity":1,"message":"332","line":274,"column":29,"nodeType":"299","messageId":"300","endLine":274,"endColumn":42},{"ruleId":"333","severity":1,"message":"334","line":336,"column":18,"nodeType":"299","messageId":"335","endLine":336,"endColumn":22},{"ruleId":"333","severity":1,"message":"336","line":336,"column":24,"nodeType":"299","messageId":"335","endLine":336,"endColumn":29},{"ruleId":"297","severity":1,"message":"337","line":684,"column":11,"nodeType":"299","messageId":"300","endLine":684,"endColumn":14},{"ruleId":"314","severity":1,"message":"315","line":739,"column":50,"nodeType":"316","endLine":739,"endColumn":98},{"ruleId":"314","severity":1,"message":"315","line":744,"column":50,"nodeType":"316","endLine":744,"endColumn":97},{"ruleId":"297","severity":1,"message":"319","line":2,"column":9,"nodeType":"299","messageId":"300","endLine":2,"endColumn":18},{"ruleId":"297","severity":1,"message":"308","line":8,"column":8,"nodeType":"299","messageId":"300","endLine":8,"endColumn":22},{"ruleId":"297","severity":1,"message":"338","line":22,"column":7,"nodeType":"299","messageId":"300","endLine":22,"endColumn":13},{"ruleId":"339","severity":1,"message":"340","line":49,"column":8,"nodeType":"341","endLine":49,"endColumn":12,"suggestions":"342"},{"ruleId":"297","severity":1,"message":"306","line":2,"column":9,"nodeType":"299","messageId":"300","endLine":2,"endColumn":15},{"ruleId":"297","severity":1,"message":"343","line":3,"column":9,"nodeType":"299","messageId":"300","endLine":3,"endColumn":14},{"ruleId":"297","severity":1,"message":"319","line":3,"column":24,"nodeType":"299","messageId":"300","endLine":3,"endColumn":33},{"ruleId":"297","severity":1,"message":"320","line":3,"column":105,"nodeType":"299","messageId":"300","endLine":3,"endColumn":116},{"ruleId":"297","severity":1,"message":"321","line":3,"column":118,"nodeType":"299","messageId":"300","endLine":3,"endColumn":127},{"ruleId":"297","severity":1,"message":"344","line":7,"column":8,"nodeType":"299","messageId":"300","endLine":7,"endColumn":14},{"ruleId":"297","severity":1,"message":"308","line":10,"column":8,"nodeType":"299","messageId":"300","endLine":10,"endColumn":22},{"ruleId":"297","severity":1,"message":"323","line":14,"column":115,"nodeType":"299","messageId":"300","endLine":14,"endColumn":121},{"ruleId":"297","severity":1,"message":"345","line":139,"column":25,"nodeType":"299","messageId":"300","endLine":139,"endColumn":31},{"ruleId":"346","severity":1,"message":"347","line":173,"column":15,"nodeType":"348","messageId":"349","endLine":173,"endColumn":31,"fix":"350"},{"ruleId":"297","severity":1,"message":"351","line":199,"column":26,"nodeType":"299","messageId":"300","endLine":199,"endColumn":34},{"ruleId":"297","severity":1,"message":"337","line":269,"column":11,"nodeType":"299","messageId":"300","endLine":269,"endColumn":14},{"ruleId":"297","severity":1,"message":"352","line":2,"column":8,"nodeType":"299","messageId":"300","endLine":2,"endColumn":13},{"ruleId":"297","severity":1,"message":"353","line":3,"column":8,"nodeType":"299","messageId":"300","endLine":3,"endColumn":14},{"ruleId":"297","severity":1,"message":"343","line":4,"column":9,"nodeType":"299","messageId":"300","endLine":4,"endColumn":14},{"ruleId":"297","severity":1,"message":"354","line":4,"column":16,"nodeType":"299","messageId":"300","endLine":4,"endColumn":22},{"ruleId":"297","severity":1,"message":"319","line":4,"column":24,"nodeType":"299","messageId":"300","endLine":4,"endColumn":33},{"ruleId":"297","severity":1,"message":"355","line":4,"column":35,"nodeType":"299","messageId":"300","endLine":4,"endColumn":40},{"ruleId":"297","severity":1,"message":"356","line":4,"column":42,"nodeType":"299","messageId":"300","endLine":4,"endColumn":53},{"ruleId":"297","severity":1,"message":"357","line":4,"column":55,"nodeType":"299","messageId":"300","endLine":4,"endColumn":64},{"ruleId":"297","severity":1,"message":"320","line":4,"column":66,"nodeType":"299","messageId":"300","endLine":4,"endColumn":77},{"ruleId":"297","severity":1,"message":"321","line":4,"column":79,"nodeType":"299","messageId":"300","endLine":4,"endColumn":88},{"ruleId":"297","severity":1,"message":"358","line":4,"column":101,"nodeType":"299","messageId":"300","endLine":4,"endColumn":105},{"ruleId":"297","severity":1,"message":"359","line":4,"column":107,"nodeType":"299","messageId":"300","endLine":4,"endColumn":115},{"ruleId":"297","severity":1,"message":"360","line":4,"column":117,"nodeType":"299","messageId":"300","endLine":4,"endColumn":127},{"ruleId":"297","severity":1,"message":"306","line":5,"column":9,"nodeType":"299","messageId":"300","endLine":5,"endColumn":15},{"ruleId":"297","severity":1,"message":"361","line":7,"column":14,"nodeType":"299","messageId":"300","endLine":7,"endColumn":23},{"ruleId":"297","severity":1,"message":"362","line":10,"column":84,"nodeType":"299","messageId":"300","endLine":10,"endColumn":92},{"ruleId":"297","severity":1,"message":"308","line":13,"column":8,"nodeType":"299","messageId":"300","endLine":13,"endColumn":22},{"ruleId":"363","severity":1,"message":"364","line":94,"column":49,"nodeType":"365","messageId":"366","endLine":94,"endColumn":51},{"ruleId":"363","severity":1,"message":"364","line":101,"column":57,"nodeType":"365","messageId":"366","endLine":101,"endColumn":59},{"ruleId":"333","severity":1,"message":"367","line":122,"column":21,"nodeType":"299","messageId":"335","endLine":122,"endColumn":32},{"ruleId":"297","severity":1,"message":"352","line":2,"column":8,"nodeType":"299","messageId":"300","endLine":2,"endColumn":13},{"ruleId":"297","severity":1,"message":"368","line":3,"column":8,"nodeType":"299","messageId":"300","endLine":3,"endColumn":18},{"ruleId":"297","severity":1,"message":"343","line":4,"column":9,"nodeType":"299","messageId":"300","endLine":4,"endColumn":14},{"ruleId":"297","severity":1,"message":"354","line":4,"column":16,"nodeType":"299","messageId":"300","endLine":4,"endColumn":22},{"ruleId":"297","severity":1,"message":"319","line":4,"column":24,"nodeType":"299","messageId":"300","endLine":4,"endColumn":33},{"ruleId":"297","severity":1,"message":"355","line":4,"column":35,"nodeType":"299","messageId":"300","endLine":4,"endColumn":40},{"ruleId":"297","severity":1,"message":"356","line":4,"column":42,"nodeType":"299","messageId":"300","endLine":4,"endColumn":53},{"ruleId":"297","severity":1,"message":"357","line":4,"column":55,"nodeType":"299","messageId":"300","endLine":4,"endColumn":64},{"ruleId":"297","severity":1,"message":"320","line":4,"column":66,"nodeType":"299","messageId":"300","endLine":4,"endColumn":77},{"ruleId":"297","severity":1,"message":"321","line":4,"column":79,"nodeType":"299","messageId":"300","endLine":4,"endColumn":88},{"ruleId":"297","severity":1,"message":"306","line":7,"column":9,"nodeType":"299","messageId":"300","endLine":7,"endColumn":15},{"ruleId":"297","severity":1,"message":"308","line":9,"column":8,"nodeType":"299","messageId":"300","endLine":9,"endColumn":22},{"ruleId":"297","severity":1,"message":"369","line":13,"column":21,"nodeType":"299","messageId":"300","endLine":13,"endColumn":35},{"ruleId":"297","severity":1,"message":"370","line":13,"column":36,"nodeType":"299","messageId":"300","endLine":13,"endColumn":48},{"ruleId":"297","severity":1,"message":"371","line":3,"column":8,"nodeType":"299","messageId":"300","endLine":3,"endColumn":12},{"ruleId":"297","severity":1,"message":"306","line":2,"column":9,"nodeType":"299","messageId":"300","endLine":2,"endColumn":15},{"ruleId":"297","severity":1,"message":"343","line":3,"column":9,"nodeType":"299","messageId":"300","endLine":3,"endColumn":14},{"ruleId":"297","severity":1,"message":"319","line":3,"column":24,"nodeType":"299","messageId":"300","endLine":3,"endColumn":33},{"ruleId":"297","severity":1,"message":"320","line":3,"column":105,"nodeType":"299","messageId":"300","endLine":3,"endColumn":116},{"ruleId":"297","severity":1,"message":"321","line":3,"column":118,"nodeType":"299","messageId":"300","endLine":3,"endColumn":127},{"ruleId":"297","severity":1,"message":"344","line":7,"column":8,"nodeType":"299","messageId":"300","endLine":7,"endColumn":14},{"ruleId":"297","severity":1,"message":"372","line":8,"column":8,"nodeType":"299","messageId":"300","endLine":8,"endColumn":11},{"ruleId":"297","severity":1,"message":"373","line":11,"column":10,"nodeType":"299","messageId":"300","endLine":11,"endColumn":19},{"ruleId":"297","severity":1,"message":"323","line":11,"column":38,"nodeType":"299","messageId":"300","endLine":11,"endColumn":44},{"ruleId":"297","severity":1,"message":"324","line":11,"column":54,"nodeType":"299","messageId":"300","endLine":11,"endColumn":63},{"ruleId":"297","severity":1,"message":"374","line":11,"column":65,"nodeType":"299","messageId":"300","endLine":11,"endColumn":78},{"ruleId":"297","severity":1,"message":"375","line":11,"column":86,"nodeType":"299","messageId":"300","endLine":11,"endColumn":93},{"ruleId":"297","severity":1,"message":"325","line":11,"column":95,"nodeType":"299","messageId":"300","endLine":11,"endColumn":102},{"ruleId":"297","severity":1,"message":"326","line":11,"column":104,"nodeType":"299","messageId":"300","endLine":11,"endColumn":110},{"ruleId":"297","severity":1,"message":"308","line":15,"column":8,"nodeType":"299","messageId":"300","endLine":15,"endColumn":22},{"ruleId":"297","severity":1,"message":"327","line":22,"column":7,"nodeType":"299","messageId":"300","endLine":22,"endColumn":14},{"ruleId":"297","severity":1,"message":"376","line":64,"column":7,"nodeType":"299","messageId":"300","endLine":64,"endColumn":14},{"ruleId":"297","severity":1,"message":"345","line":175,"column":25,"nodeType":"299","messageId":"300","endLine":175,"endColumn":31},{"ruleId":"297","severity":1,"message":"351","line":244,"column":29,"nodeType":"299","messageId":"300","endLine":244,"endColumn":37},{"ruleId":"297","severity":1,"message":"337","line":321,"column":13,"nodeType":"299","messageId":"300","endLine":321,"endColumn":16},{"ruleId":"297","severity":1,"message":"306","line":3,"column":9,"nodeType":"299","messageId":"300","endLine":3,"endColumn":15},{"ruleId":"297","severity":1,"message":"371","line":4,"column":8,"nodeType":"299","messageId":"300","endLine":4,"endColumn":12},{"ruleId":"297","severity":1,"message":"361","line":4,"column":14,"nodeType":"299","messageId":"300","endLine":4,"endColumn":23},{"ruleId":"377","severity":1,"message":"378","line":14,"column":17,"nodeType":"379","messageId":"380","endLine":14,"endColumn":28,"fix":"381"},{"ruleId":"297","severity":1,"message":"382","line":29,"column":5,"nodeType":"299","messageId":"300","endLine":29,"endColumn":18},{"ruleId":"363","severity":1,"message":"364","line":113,"column":72,"nodeType":"365","messageId":"366","endLine":113,"endColumn":74},{"ruleId":"363","severity":1,"message":"364","line":116,"column":42,"nodeType":"365","messageId":"366","endLine":116,"endColumn":44},{"ruleId":"363","severity":1,"message":"364","line":124,"column":69,"nodeType":"365","messageId":"366","endLine":124,"endColumn":71},{"ruleId":"363","severity":1,"message":"364","line":149,"column":52,"nodeType":"365","messageId":"366","endLine":149,"endColumn":54},{"ruleId":"297","severity":1,"message":"383","line":151,"column":17,"nodeType":"299","messageId":"300","endLine":151,"endColumn":25},{"ruleId":"333","severity":1,"message":"384","line":244,"column":21,"nodeType":"299","messageId":"335","endLine":244,"endColumn":36},{"ruleId":"333","severity":1,"message":"385","line":248,"column":30,"nodeType":"299","messageId":"335","endLine":248,"endColumn":31},{"ruleId":"333","severity":1,"message":"386","line":252,"column":38,"nodeType":"299","messageId":"335","endLine":252,"endColumn":42},{"ruleId":"297","severity":1,"message":"387","line":287,"column":91,"nodeType":"299","messageId":"300","endLine":287,"endColumn":102},{"ruleId":"333","severity":1,"message":"386","line":346,"column":30,"nodeType":"299","messageId":"335","endLine":346,"endColumn":34},{"ruleId":"333","severity":1,"message":"385","line":359,"column":42,"nodeType":"299","messageId":"335","endLine":359,"endColumn":43},{"ruleId":"333","severity":1,"message":"385","line":383,"column":22,"nodeType":"299","messageId":"335","endLine":383,"endColumn":23},{"ruleId":"333","severity":1,"message":"388","line":385,"column":25,"nodeType":"299","messageId":"335","endLine":385,"endColumn":35},{"ruleId":"333","severity":1,"message":"386","line":411,"column":26,"nodeType":"299","messageId":"335","endLine":411,"endColumn":30},{"ruleId":"297","severity":1,"message":"389","line":533,"column":15,"nodeType":"299","messageId":"300","endLine":533,"endColumn":24},{"ruleId":"314","severity":1,"message":"315","line":672,"column":61,"nodeType":"316","endLine":672,"endColumn":147},{"ruleId":"302","replacedBy":"390"},{"ruleId":"304","replacedBy":"391"},{"ruleId":"297","severity":1,"message":"306","line":3,"column":9,"nodeType":"299","messageId":"300","endLine":3,"endColumn":15},{"ruleId":"392","severity":1,"message":"393","line":120,"column":45,"nodeType":"316","endLine":120,"endColumn":63},{"ruleId":"297","severity":1,"message":"319","line":2,"column":9,"nodeType":"299","messageId":"300","endLine":2,"endColumn":18},{"ruleId":"297","severity":1,"message":"394","line":2,"column":49,"nodeType":"299","messageId":"300","endLine":2,"endColumn":57},{"ruleId":"297","severity":1,"message":"359","line":2,"column":77,"nodeType":"299","messageId":"300","endLine":2,"endColumn":85},{"ruleId":"297","severity":1,"message":"395","line":3,"column":8,"nodeType":"299","messageId":"300","endLine":3,"endColumn":19},{"ruleId":"297","severity":1,"message":"308","line":11,"column":8,"nodeType":"299","messageId":"300","endLine":11,"endColumn":22},{"ruleId":"297","severity":1,"message":"338","line":23,"column":7,"nodeType":"299","messageId":"300","endLine":23,"endColumn":13},{"ruleId":"297","severity":1,"message":"396","line":36,"column":11,"nodeType":"299","messageId":"300","endLine":36,"endColumn":16},{"ruleId":"297","severity":1,"message":"397","line":36,"column":18,"nodeType":"299","messageId":"300","endLine":36,"endColumn":32},{"ruleId":"297","severity":1,"message":"306","line":2,"column":9,"nodeType":"299","messageId":"300","endLine":2,"endColumn":15},{"ruleId":"297","severity":1,"message":"338","line":5,"column":7,"nodeType":"299","messageId":"300","endLine":5,"endColumn":13},{"ruleId":"297","severity":1,"message":"371","line":2,"column":8,"nodeType":"299","messageId":"300","endLine":2,"endColumn":12},{"ruleId":"297","severity":1,"message":"306","line":3,"column":9,"nodeType":"299","messageId":"300","endLine":3,"endColumn":15},{"ruleId":"297","severity":1,"message":"343","line":4,"column":20,"nodeType":"299","messageId":"300","endLine":4,"endColumn":25},{"ruleId":"297","severity":1,"message":"356","line":4,"column":34,"nodeType":"299","messageId":"300","endLine":4,"endColumn":45},{"ruleId":"297","severity":1,"message":"398","line":25,"column":5,"nodeType":"299","messageId":"300","endLine":25,"endColumn":8},{"ruleId":"363","severity":1,"message":"364","line":110,"column":40,"nodeType":"365","messageId":"366","endLine":110,"endColumn":42},{"ruleId":"363","severity":1,"message":"364","line":113,"column":50,"nodeType":"365","messageId":"366","endLine":113,"endColumn":52},{"ruleId":"363","severity":1,"message":"364","line":170,"column":45,"nodeType":"365","messageId":"366","endLine":170,"endColumn":47},{"ruleId":"363","severity":1,"message":"364","line":173,"column":59,"nodeType":"365","messageId":"366","endLine":173,"endColumn":61},{"ruleId":"363","severity":1,"message":"364","line":254,"column":44,"nodeType":"365","messageId":"366","endLine":254,"endColumn":46},{"ruleId":"363","severity":1,"message":"364","line":255,"column":56,"nodeType":"365","messageId":"366","endLine":255,"endColumn":58},{"ruleId":"333","severity":1,"message":"334","line":285,"column":18,"nodeType":"299","messageId":"335","endLine":285,"endColumn":22},{"ruleId":"333","severity":1,"message":"336","line":285,"column":24,"nodeType":"299","messageId":"335","endLine":285,"endColumn":29},{"ruleId":"314","severity":1,"message":"399","line":352,"column":129,"nodeType":"316","endLine":354,"endColumn":144},{"ruleId":"297","severity":1,"message":"306","line":3,"column":9,"nodeType":"299","messageId":"300","endLine":3,"endColumn":15},{"ruleId":"297","severity":1,"message":"373","line":8,"column":10,"nodeType":"299","messageId":"300","endLine":8,"endColumn":19},{"ruleId":"297","severity":1,"message":"400","line":8,"column":21,"nodeType":"299","messageId":"300","endLine":8,"endColumn":27},{"ruleId":"297","severity":1,"message":"401","line":8,"column":40,"nodeType":"299","messageId":"300","endLine":8,"endColumn":47},{"ruleId":"297","severity":1,"message":"323","line":8,"column":49,"nodeType":"299","messageId":"300","endLine":8,"endColumn":55},{"ruleId":"297","severity":1,"message":"402","line":8,"column":57,"nodeType":"299","messageId":"300","endLine":8,"endColumn":63},{"ruleId":"297","severity":1,"message":"324","line":8,"column":65,"nodeType":"299","messageId":"300","endLine":8,"endColumn":74},{"ruleId":"297","severity":1,"message":"374","line":8,"column":76,"nodeType":"299","messageId":"300","endLine":8,"endColumn":89},{"ruleId":"297","severity":1,"message":"375","line":8,"column":91,"nodeType":"299","messageId":"300","endLine":8,"endColumn":98},{"ruleId":"297","severity":1,"message":"325","line":8,"column":100,"nodeType":"299","messageId":"300","endLine":8,"endColumn":107},{"ruleId":"297","severity":1,"message":"326","line":8,"column":109,"nodeType":"299","messageId":"300","endLine":8,"endColumn":115},{"ruleId":"297","severity":1,"message":"343","line":12,"column":9,"nodeType":"299","messageId":"300","endLine":12,"endColumn":14},{"ruleId":"297","severity":1,"message":"403","line":17,"column":23,"nodeType":"299","messageId":"300","endLine":17,"endColumn":38},{"ruleId":"310","severity":1,"message":"404","line":60,"column":16,"nodeType":"312","messageId":"313","endLine":60,"endColumn":18},{"ruleId":"310","severity":1,"message":"404","line":62,"column":35,"nodeType":"312","messageId":"313","endLine":62,"endColumn":37},{"ruleId":"333","severity":1,"message":"334","line":125,"column":18,"nodeType":"299","messageId":"335","endLine":125,"endColumn":22},{"ruleId":"333","severity":1,"message":"336","line":125,"column":24,"nodeType":"299","messageId":"335","endLine":125,"endColumn":29},{"ruleId":"314","severity":1,"message":"315","line":163,"column":53,"nodeType":"316","endLine":163,"endColumn":101},{"ruleId":"297","severity":1,"message":"306","line":3,"column":9,"nodeType":"299","messageId":"300","endLine":3,"endColumn":15},{"ruleId":"297","severity":1,"message":"400","line":8,"column":21,"nodeType":"299","messageId":"300","endLine":8,"endColumn":27},{"ruleId":"297","severity":1,"message":"401","line":8,"column":40,"nodeType":"299","messageId":"300","endLine":8,"endColumn":47},{"ruleId":"297","severity":1,"message":"323","line":8,"column":49,"nodeType":"299","messageId":"300","endLine":8,"endColumn":55},{"ruleId":"297","severity":1,"message":"402","line":8,"column":65,"nodeType":"299","messageId":"300","endLine":8,"endColumn":71},{"ruleId":"297","severity":1,"message":"324","line":8,"column":73,"nodeType":"299","messageId":"300","endLine":8,"endColumn":82},{"ruleId":"297","severity":1,"message":"375","line":8,"column":99,"nodeType":"299","messageId":"300","endLine":8,"endColumn":106},{"ruleId":"297","severity":1,"message":"325","line":8,"column":108,"nodeType":"299","messageId":"300","endLine":8,"endColumn":115},{"ruleId":"297","severity":1,"message":"326","line":8,"column":117,"nodeType":"299","messageId":"300","endLine":8,"endColumn":123},{"ruleId":"297","severity":1,"message":"405","line":10,"column":9,"nodeType":"299","messageId":"300","endLine":10,"endColumn":13},{"ruleId":"297","severity":1,"message":"406","line":10,"column":15,"nodeType":"299","messageId":"300","endLine":10,"endColumn":21},{"ruleId":"297","severity":1,"message":"343","line":12,"column":9,"nodeType":"299","messageId":"300","endLine":12,"endColumn":14},{"ruleId":"297","severity":1,"message":"403","line":17,"column":23,"nodeType":"299","messageId":"300","endLine":17,"endColumn":38},{"ruleId":"310","severity":1,"message":"404","line":97,"column":16,"nodeType":"312","messageId":"313","endLine":97,"endColumn":18},{"ruleId":"310","severity":1,"message":"404","line":99,"column":35,"nodeType":"312","messageId":"313","endLine":99,"endColumn":37},{"ruleId":"310","severity":1,"message":"404","line":136,"column":35,"nodeType":"312","messageId":"313","endLine":136,"endColumn":37},{"ruleId":"333","severity":1,"message":"334","line":258,"column":18,"nodeType":"299","messageId":"335","endLine":258,"endColumn":22},{"ruleId":"333","severity":1,"message":"336","line":258,"column":24,"nodeType":"299","messageId":"335","endLine":258,"endColumn":29},{"ruleId":"314","severity":1,"message":"315","line":291,"column":53,"nodeType":"316","endLine":291,"endColumn":101},{"ruleId":"314","severity":1,"message":"315","line":355,"column":53,"nodeType":"316","endLine":355,"endColumn":101},{"ruleId":"314","severity":1,"message":"315","line":414,"column":53,"nodeType":"316","endLine":414,"endColumn":101},"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","no-native-reassign",["407"],"no-negated-in-lhs",["408"],"'render' is defined but never used.","'Navigation' is defined but never used.","'Breadcrumb_nav' is defined but never used.","'REACT_APP_HOST' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Container' is defined but never used.","'ModalFooter' is defined but never used.","'formGroup' is defined but never used.","'faEye' is defined but never used.","'faFile' is defined but never used.","'faSyncAlt' is defined but never used.","'faClock' is defined but never used.","'faRedo' is defined but never used.","'cookies' is assigned a value but never used.","'prueba_regis' is assigned a value but never used.","'array' is assigned a value but never used.","'cargarimg' is assigned a value but never used.","'eliminarimg' is assigned a value but never used.","'eliminarvideo' is assigned a value but never used.","no-redeclare","'name' is already defined.","redeclared","'value' is already defined.","'buf' is assigned a value but never used.","'styles' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'visitas'. Either include it or remove the dependency array.","ArrayExpression",["409"],"'Table' is defined but never used.","'Styles' is defined but never used.","'cargar' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property deleteArea.","MemberExpression","unexpectedWhitespace",{"range":"410","text":"411"},"'eliminar' is assigned a value but never used.","'style' is defined but never used.","'style2' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'CardHeader' is defined but never used.","'useParams' is defined but never used.","'faPenAlt' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'returnedobj' is already defined.","'style_card' is defined but never used.","'faStepBackward' is defined but never used.","'faLayerGroup' is defined but never used.","'Link' is defined but never used.","'md5' is defined but never used.","'faFileAlt' is defined but never used.","'faCheckCircle' is defined but never used.","'faSkull' is defined but never used.","'toolbar' is assigned a value but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"412","text":"413"},"'intervaloCont' is assigned a value but never used.","'intentos' is assigned a value but never used.","'preg_incorrecta' is already defined.","'x' is already defined.","'resp' is already defined.","'estado_resp' is assigned a value but never used.","'labelRadio' is already defined.","'id_taller' is assigned a value but never used.",["407"],["408"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'CardText' is defined but never used.","'ReactPlayer' is defined but never used.","'value' is assigned a value but never used.","'setstatusBoton' is assigned a value but never used.","'t_c' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'faEdit' is defined but never used.","'faTrash' is defined but never used.","'faSave' is defined but never used.","'REACT_APP_PATCH' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'Grid' is defined but never used.","'Avatar' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"414","fix":"415"},[6320,6322],".",[588,588],"()","Update the dependencies array to be: [id, visitas]",{"range":"416","text":"417"},[1378,1382],"[id, visitas]"]